name: Seaport Test CI

on:
  push:
    branches: [main, 1.*, 2.*]
    tags: ["*"]
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  build:
    name: Build Artifacts
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.15.1]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - run: yarn install
      - run: yarn build

  lint:
    name: Run Linters
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.15.1]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - run: yarn install
      - run: yarn lint:check

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.15.1]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - run: yarn install
      - run: yarn build
      - run: yarn test

  reference-test:
    name: Run Reference Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.15.1]

    env:
      REFERENCE: true

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - run: yarn install
      - run: yarn build
      - run: yarn build:ref
      - run: yarn test:ref

  forge-lite:
    name: Run "Lite" Forge Tests (via_ir = false; fuzz_runs = 1000)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install forge dependencies
        run: forge install

      - name: Precompile reference using 0.8.13 and via-ir=false
        run: FOUNDRY_PROFILE=reference forge build

      - name: Run tests
        run: FOUNDRY_PROFILE=lite forge test -vvv

  forge:
    name: Run Forge Tests (via_ir = true; fuzz_runs = 5000)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install forge dependencies
        run: forge install

      - name: Precompile reference using 0.8.13 and via-ir=false
        run: FOUNDRY_PROFILE=reference forge build

      - name: Precompile optimized using 0.8.17 and via-ir=true
        run: FOUNDRY_PROFILE=optimized forge build

      - name: Run tests
        run: FOUNDRY_PROFILE=test forge test -vvv

  forge-offerers:
    name: Run Contract Offerer Forge Tests (via_ir = false; fuzz_runs = 1000)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install forge dependencies
        run: forge install

      - name: Run tests
        run: FOUNDRY_PROFILE=offerers forge test -vvv

  forge-coverage:
    name: Run Forge Coverage report on tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install forge dependencies
        run: forge install

      - name: Run coverage with lcov output
        run: SEAPORT_COVERAGE=true forge coverage --report lcov

      - uses: codecov/codecov-action@v3
        with:
          files: ./lcov.info
          flags: foundry

  coverage:
    name: Run Coverage Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.15.1]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - run: yarn install
      - run: yarn build
      - run: yarn coverage
      - uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: production

  reference-coverage:
    name: Run Reference Coverage Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.15.1]

    env:
      REFERENCE: true

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - run: yarn install
      - run: yarn build
      - run: yarn build:ref
      - run: yarn coverage:ref
      - uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: reference
