{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "conduitController",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BadContractSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadFraction",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BadReturnValueFromERC20OnTransfer",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        }
      ],
      "name": "BadSignatureV",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ConsiderationCriteriaResolverOutOfRange",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "orderIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "considerationIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shortfallAmount",
          "type": "uint256"
        }
      ],
      "name": "ConsiderationNotMet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CriteriaNotEnabledForItem",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "identifiers",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "ERC1155BatchTransferGenericFailure",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EtherTransferGenericFailure",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InexactFraction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientEtherSupplied",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidBasicOrderParameterEncoding",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "conduit",
          "type": "address"
        }
      ],
      "name": "InvalidCallToConduit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidCanceller",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "conduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "conduit",
          "type": "address"
        }
      ],
      "name": "InvalidConduit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidERC721TransferAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidFulfillmentComponentData",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "InvalidMsgValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidProof",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidProxyImplementation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "InvalidRestrictedOrder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSigner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MismatchedFulfillmentOfferAndConsiderationComponents",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum Side",
          "name": "side",
          "type": "uint8"
        }
      ],
      "name": "MissingFulfillmentComponentOnAggregation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MissingItemAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MissingOriginalConsiderationItems",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "NoContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoReentrantCalls",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSpecifiedOrdersAvailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OfferAndConsiderationRequiredOnFulfillment",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OfferCriteriaResolverOutOfRange",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderAlreadyFilled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OrderCriteriaResolverOutOfRange",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderIsCancelled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderPartiallyFilled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PartialFillsNotEnabledForOrder",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "identifier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenTransferGenericFailure",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnresolvedConsiderationCriteria",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnresolvedOfferCriteria",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNonce",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        }
      ],
      "name": "NonceIncremented",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "zone",
          "type": "address"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "zone",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "fulfiller",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "enum ItemType",
              "name": "itemType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct SpentItem[]",
          "name": "offer",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum ItemType",
              "name": "itemType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct ReceivedItem[]",
          "name": "consideration",
          "type": "tuple[]"
        }
      ],
      "name": "OrderFulfilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "zone",
          "type": "address"
        }
      ],
      "name": "OrderValidated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderComponents[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "cancel",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder",
          "name": "advancedOrder",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        }
      ],
      "name": "fulfillAdvancedOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder[]",
          "name": "advancedOrders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "offerFulfillments",
          "type": "tuple[][]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "considerationFulfillments",
          "type": "tuple[][]"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maximumFulfilled",
          "type": "uint256"
        }
      ],
      "name": "fulfillAvailableAdvancedOrders",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "availableOrders",
          "type": "bool[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "standardExecutions",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BatchExecution[]",
          "name": "batchExecutions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "offerFulfillments",
          "type": "tuple[][]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "itemIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct FulfillmentComponent[][]",
          "name": "considerationFulfillments",
          "type": "tuple[][]"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maximumFulfilled",
          "type": "uint256"
        }
      ],
      "name": "fulfillAvailableOrders",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "availableOrders",
          "type": "bool[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "standardExecutions",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BatchExecution[]",
          "name": "batchExecutions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "considerationToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "considerationIdentifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "considerationAmount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "offerToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "offerIdentifier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum BasicOrderType",
              "name": "basicOrderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "offererConduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "fulfillerConduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "totalOriginalAdditionalRecipients",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct AdditionalRecipient[]",
              "name": "additionalRecipients",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct BasicOrderParameters",
          "name": "parameters",
          "type": "tuple"
        }
      ],
      "name": "fulfillBasicOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order",
          "name": "order",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "fulfillerConduitKey",
          "type": "bytes32"
        }
      ],
      "name": "fulfillOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offerer",
          "type": "address"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "zone",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OfferItem[]",
              "name": "offer",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifierOrCriteria",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ConsiderationItem[]",
              "name": "consideration",
              "type": "tuple[]"
            },
            {
              "internalType": "enum OrderType",
              "name": "orderType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "zoneHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderComponents",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getOrderHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "getOrderStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidated",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isCancelled",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalFilled",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalSize",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incrementNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newNonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "information",
      "outputs": [
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "conduitController",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "uint120",
              "name": "numerator",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "denominator",
              "type": "uint120"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedOrder[]",
          "name": "advancedOrders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "orderIndex",
              "type": "uint256"
            },
            {
              "internalType": "enum Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "identifier",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "criteriaProof",
              "type": "bytes32[]"
            }
          ],
          "internalType": "struct CriteriaResolver[]",
          "name": "criteriaResolvers",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "offerComponents",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "considerationComponents",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Fulfillment[]",
          "name": "fulfillments",
          "type": "tuple[]"
        }
      ],
      "name": "matchAdvancedOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "standardExecutions",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BatchExecution[]",
          "name": "batchExecutions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "offerComponents",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "orderIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "itemIndex",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FulfillmentComponent[]",
              "name": "considerationComponents",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Fulfillment[]",
          "name": "fulfillments",
          "type": "tuple[]"
        }
      ],
      "name": "matchOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum ItemType",
                  "name": "itemType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "internalType": "struct ReceivedItem",
              "name": "item",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "offerer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Execution[]",
          "name": "standardExecutions",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes32",
              "name": "conduitKey",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BatchExecution[]",
          "name": "batchExecutions",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "offerer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "zone",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct OfferItem[]",
                  "name": "offer",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "enum ItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifierOrCriteria",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ConsiderationItem[]",
                  "name": "consideration",
                  "type": "tuple[]"
                },
                {
                  "internalType": "enum OrderType",
                  "name": "orderType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "zoneHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "totalOriginalConsiderationItems",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderParameters",
              "name": "parameters",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Order[]",
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "validate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101c06040523480156200001257600080fd5b5060405162008f8b38038062008f8b8339810160408190526200003591620005d3565b604080518082018252600d81526c21b7b739b4b232b930ba34b7b760991b60209182015281518083018352600481526372632e3160e01b90820152905182918291829182917f64987f6373075400d7cbff689f2b7bc23753c7e6ce20688196489b8f5d9d7e6c917f0fd510fdb8600df694e266f9e41ada19224f948f0f9be3fc4cb801d7ea5eb247916000916200017c91016909ecccccae492e8cada560b31b81526e1d5a5b9d0e081a5d195b551e5c194b608a1b600a8201526d1859191c995cdcc81d1bdad95b8b60921b60198201527f75696e74323536206964656e7469666965724f7243726974657269612c00000060278201527f75696e74323536207374617274416d6f756e742c0000000000000000000000006044820152701d5a5b9d0c8d4d88195b99105b5bdd5b9d607a1b6058820152602960f81b6069820152606a0190565b60408051601f1981840301815282825271086dedce6d2c8cae4c2e8d2dedc92e8cada560731b60208401526e1d5a5b9d0e081a5d195b551e5c194b608a1b60328401526d1859191c995cdcc81d1bdad95b8b60921b60418401527f75696e74323536206964656e7469666965724f7243726974657269612c000000604f8401527f75696e74323536207374617274416d6f756e742c000000000000000000000000606c840152711d5a5b9d0c8d4d88195b99105b5bdd5b9d0b60721b6080840152701859191c995cdcc81c9958da5c1a595b9d607a1b6092840152602960f81b60a384018190528251808503608401815260a485019093526f09ee4c8cae486dedae0dedccadce8e6560831b60c48501526f1859191c995cdcc81bd999995c995c8b60821b60d48501526c1859191c995cdcc81e9bdb994b609a1b60e48501527113d999995c925d195b56d7481bd999995c8b60721b60f18501527f436f6e73696465726174696f6e4974656d5b5d20636f6e73696465726174696f610103850152611b8b60f21b6101238501526f1d5a5b9d0e081bdc99195c951e5c194b60821b610125850152711d5a5b9d0c8d4d881cdd185c9d151a5b594b60721b6101358501526f1d5a5b9d0c8d4d88195b99151a5b594b60821b61014785015270189e5d195ccccc881e9bdb9952185cda0b607a1b6101578501526c1d5a5b9d0c8d4d881cd85b1d0b609a1b6101688501527f6279746573333220636f6e647569744b65792c000000000000000000000000006101758501526c75696e74323536206e6f6e636560981b6101888501526101958401529250906000906101960160408051601f19818403018152908290526c08a92a06e626488dedac2d2dc5609b1b60208301526b1cdd1c9a5b99c81b985b594b60a21b602d8301526e1cdd1c9a5b99c81d995c9cda5bdb8b608a1b60398301526f1d5a5b9d0c8d4d8818da185a5b92590b60821b60488301527f6164647265737320766572696679696e67436f6e7472616374000000000000006058830152602960f81b6071830152915060009060720160408051601f1981840301815290829052805160209182012086518783012060e052855186830120610100529250620004bf918491869188910162000668565b60408051808303601f190181528282528051602091820120610120524661014081905260c085815260808b815260a08b81528487018890528686018d9052606087018c9052908601929092523082860152835180860390920182529093019091528151910120610160526001600160601b0319606088901b166101805260408051630a96ad3960e01b8152815189926001600160a01b03841692630a96ad399260048083019392829003018186803b1580156200057b57600080fd5b505afa15801562000590573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005b6919062000605565b506101a05250506001600055506200069598505050505050505050565b600060208284031215620005e657600080fd5b81516001600160a01b0381168114620005fe57600080fd5b9392505050565b600080604083850312156200061957600080fd5b505080516020909101519092909150565b6000815160005b818110156200064d576020818501810151868301520162000631565b818111156200065d576000828601525b509290920192915050565b60006200068c620006856200067e84886200062a565b866200062a565b846200062a565b95945050505050565b60805160a05160c05160e051610100516101205161014051610160516101805160601c6101a05161885b620007306000396000614e1d0152600081816109af0152614dec0152600061215c01526000612090015260008181611a2801526129860152600081816123180152613dee0152600081816128570152613d80015260006120bc0152600061210b015260006120e6015261885b6000f3fe6080604052600436106100e85760003560e01c8063a81744041161008a578063f47b774011610059578063f47b7740146102f9578063fb0f3ee11461031d578063fb4c2af914610330578063fd9f1e101461034357600080fd5b8063a81744041461029e578063b3a34c4c146102b1578063df7b0dac146102c4578063ed98a574146102d757600080fd5b806355944a42116100c657806355944a4214610218578063627cdcb91461023957806379df72bd1461024e578063881477321461026e57600080fd5b806306fdde03146100ed5780632d0335ab1461013257806346423aa714610176575b600080fd5b3480156100f957600080fd5b50604080518082018252600d81526c21b7b739b4b232b930ba34b7b760991b6020820152905161012991906181c2565b60405180910390f35b34801561013e57600080fd5b5061016861014d3660046172e4565b6001600160a01b031660009081526002602052604090205490565b604051908152602001610129565b34801561018257600080fd5b506101f66101913660046175db565b6000908152600160209081526040918290208251608081018452905460ff8082161515808452610100830490911615159383018490526001600160781b036201000083048116958401869052600160881b909204909116606090920182905293919291565b6040805194151585529215156020850152918301526060820152608001610129565b61022b6102263660046173d1565b610363565b604051610129929190617e54565b34801561024557600080fd5b506101686103d3565b34801561025a57600080fd5b506101686102693660046177b5565b610456565b34801561027a57600080fd5b5061028e610289366004617465565b61050a565b6040519015158152602001610129565b61022b6102ac36600461754e565b6106e8565b61028e6102bf3660046177e9565b6107af565b61028e6102d23660046176af565b610855565b6102ea6102e53660046174a6565b6108aa565b60405161012993929190617d15565b34801561030557600080fd5b5061030e610985565b604051610129939291906181d5565b61028e61032b366004617726565b6109d4565b6102ea61033e366004617301565b610e85565b34801561034f57600080fd5b5061028e61035e366004617465565b610edd565b6060806002600054141561038a57604051637fa8a98760e01b815260040160405180910390fd5b6002600090815561039a88611187565b90506103b488826103ab898b6185c1565b60018c51611262565b6103bf8186866116b0565b600160005590999098509650505050505050565b6000600260005414156103f957604051637fa8a98760e01b815260040160405180910390fd5b336000908152600260205260408120805490919061041690618755565b918290555060405181815290915033907f7ab0fc7de8910a6100b24df423c3d0835534506dca9473d30c3e7df51241b2cf9060200160405180910390a290565b600061050460405180610160016040528084600001516001600160a01b0316815260200184602001516001600160a01b031681526020018460400151815260200184606001518152602001846080015160038111156104b7576104b76187be565b81526020018460a0015181526020018460c0015181526020018460e001518152602001846101000151815260200184610120015181526020018460600151518152508361014001516118c7565b92915050565b60006002600054141561053057604051637fa8a98760e01b815260040160405180910390fd5b60008083815b818110156106db5736878783818110610551576105516187d4565b90506020028101906105639190618327565b905036610570828061833d565b905061057f60208201826172e4565b945061059261058d82618706565b611afb565b60008181526001602081815260408084208151608081018352905460ff808216151583526101008204161515938201939093526001600160781b03620100008404811692820192909252600160881b9092041660608201529298506105fb918991849190611b36565b5080516106c75761064e868861061460208701876182e1565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611bf092505050565b600087815260016020818152604092839020805460ff191690921790915561067a9184019084016172e4565b6001600160a01b0316866001600160a01b03167ffde361574a066b44b3b5fe98a87108b7565e327327954c4faeea56a4e6491a0a896040516106be91815260200190565b60405180910390a35b505050806106d490618755565b9050610536565b5060019695505050505050565b6060806002600054141561070f57604051637fa8a98760e01b815260040160405180910390fd5b600260009081556107208787611dae565b9050600061072d82611187565b90506107a48282600060405190808252806020026020018201604052801561079a57816020015b6107876040805160a081019091526000808252602082019081526020016000815260200160008152602001606081525090565b8152602001906001900390816107545790505b5060018651611262565b6103bf8187876116b0565b6000600260005414156107d557604051637fa8a98760e01b815260040160405180910390fd5b60026000556108496107e684611e72565b6040805160008082526020820190925290610842565b61082f6040805160a081019091526000808252602082019081526020016000815260200160008152602001606081525090565b8152602001906001900390816107fc5790505b5084611f1d565b60016000559392505050565b60006002600054141561087b57604051637fa8a98760e01b815260040160405180910390fd5b600260005561089c61088c866186fa565b61089685876185c1565b84611f1d565b600160005595945050505050565b6060806060600260005414156108d357604051637fa8a98760e01b815260040160405180910390fd5b600260009081556108e48c8c611dae565b905060006108f182611187565b905061096a8282600060405190808252806020026020018201604052801561095e57816020015b61094b6040805160a081019091526000808252602082019081526020016000815260200160008152602001606081525090565b8152602001906001900390816109185790505b508e8e8e8e8e8e612046565b6001600055919f909e50909c509a5050505050505050505050565b60408051808201909152600481526372632e3160e01b60208201526000806109ab61208c565b92937f000000000000000000000000000000000000000000000000000000000000000092509050565b6000600260005414156109fa57604051637fa8a98760e01b815260040160405180910390fd5b600260009081556004610a156101208501610100860161761e565b6017811115610a2657610a266187be565b610a30919061846d565b60ff166005811115610a4457610a446187be565b905060006004610a5c6101208601610100870161761e565b6017811115610a6d57610a6d6187be565b610a779190618770565b60ff166003811115610a8b57610a8b6187be565b905060006001836005811115610aa357610aa36187be565b60ff1611610ab2576000610ab5565b60015b60ff166005811115610ac957610ac96187be565b905060003415801590610aed57506000826005811115610aeb57610aeb6187be565b145b80610b12575034158015610b1257506001826005811115610b1057610b106187be565b145b905080610b3957604051630a61be9f60e41b81523460048201526024015b60405180910390fd5b5060006003846005811115610b5057610b506187be565b60ff1611610b6a57610b6560208701876172e4565b610b7a565b610b7a60c0870160a088016172e4565b905060006002856005811115610b9257610b926187be565b60ff1611610bc1576002856005811115610bae57610bae6187be565b14610bba576000610bf3565b6001610bf3565b6002856005811115610bd557610bd56187be565b610bdf91906184c5565b60ff166005811115610bf357610bf36187be565b905060006003866005811115610c0b57610c0b6187be565b60ff1611610c77576001866005811115610c2757610c276187be565b60ff1611610c6557856005811115610c4157610c416187be565b610c4c906002618434565b60ff166005811115610c6057610c606187be565b610c7a565b856005811115610c4c57610c4c6187be565b60015b9050610c8a88868487878661217e565b6000610c9c60808a0160608b016172e4565b905060006003886005811115610cb457610cb46187be565b60ff1611610cc757896101a00135610cce565b896101c001355b90506000886005811115610ce457610ce46187be565b1415610d2257610d0f610cfd60c08c0160a08d016172e4565b83338d60c001358e60e0013586612ad1565b610d1d8a604001358b612c33565b610e6f565b6001886005811115610d3657610d366187be565b1415610d6157610d0f610d4f60c08c0160a08d016172e4565b83338d60c001358e60e0013586612d2d565b6002886005811115610d7557610d756187be565b1415610dad57610d8e610cfd60c08c0160a08d016172e4565b610d1d3383610da060208e018e6172e4565b8d604001358e6000612d8f565b6003886005811115610dc157610dc16187be565b1415610dda57610d8e610d4f60c08c0160a08d016172e4565b6004886005811115610dee57610dee6187be565b1415610e3857610e16610e0460208c018c6172e4565b33848d602001358e6040013586612ad1565b610d1d8233610e2b60c08e0160a08f016172e4565b8d60e001358e6001612d8f565b610e5a610e4860208c018c6172e4565b33848d602001358e6040013586612d2d565b610e6f8233610e2b60c08e0160a08f016172e4565b6001985050505050505050506001600055919050565b606080606060026000541415610eae57604051637fa8a98760e01b815260040160405180910390fd5b60026000908155610ebe8d611187565b905061096a8d828e8e90610ed291906185c1565b8d8d8d8d8d8d612046565b600060026000541415610f0357604051637fa8a98760e01b815260040160405180910390fd5b60008083815b818110156106db5736878783818110610f2457610f246187d4565b9050602002810190610f36919061833d565b9050610f4560208201826172e4565b9450610f5760408201602083016172e4565b9350336001600160a01b03861614801590610f7b5750336001600160a01b03851614155b15610f995760405163203b1cdd60e21b815260040160405180910390fd5b600061110c604051806101600160405280886001600160a01b03168152602001876001600160a01b03168152602001848060400190610fd89190618299565b808060200260200160405190810160405280939291908181526020016000905b828210156110245761101560a08302860136819003810190617799565b81526020019060010190610ff8565b505050918352505060200161103c6060860186618251565b808060200260200160405190810160405280939291908181526020016000905b828210156110885761107960c08302860136819003810190617761565b8152602001906001019061105c565b50505091835250506020016110a360a086016080870161763f565b60038111156110b4576110b46187be565b81526020018460a0013581526020018460c0013581526020018460e001358152602001846101000135815260200184610120013581526020018480606001906110fd9190618251565b909152506101408401356118c7565b60008181526001602052604090819020805461ffff1916610100179055519091506001600160a01b0380871691908816907f6bacc01dbe442496068f7d234edd811f1a5f833243e0aec824f86ab861f3c90d9061116c9085815260200190565b60405180910390a350508061118090618755565b9050610f09565b8051606090806001600160401b038111156111a4576111a46187ea565b6040519080825280602002602001820160405280156111fd57816020015b6040805160a0810182526000808252606060208084018290529383018190528201819052608082015282526000199092019101816111c25790505b50915060005b8181101561125b5761122d848281518110611220576112206187d4565b6020026020010151612e3b565b83828151811061123f5761123f6187d4565b60200260200101819052508061125490618755565b9050611203565b5050919050565b84516000816001600160401b0381111561127e5761127e6187ea565b6040519080825280602002602001820160405280156112a7578160200160208202803683370190505b50905060005b828110156115685760008882815181106112c9576112c96187d4565b6020026020010151905060008883815181106112e7576112e76187d4565b60200260200101519050856000141561130d576000602090920182905260800152611558565b600080600061131e858c8c8a6130da565b9250925092508160001415611343575050600060209093018390525060800152611558565b82878781518110611356576113566187d4565b60209081029190910101528861136b8161873e565b865160a081015160c090910151919b50915060009061138b9083906184ae565b9050600061139983426184ae565b905060006113a782846184ae565b89516040015190915060005b815181101561147a5760008282815181106113d0576113d06187d4565b6020026020010151905060006113eb8a8a846080015161339c565b9050816080015182606001511415611409576060820181905261141e565b6114188a8a846060015161339c565b60608301525b608082018190526060820151611439908288888b6000613409565b6060830181905260208d0151805185908110611457576114576187d4565b6020026020010151606001818152505050508061147390618755565b90506113b3565b5089516060015160005b815181101561154b5760008282815181106114a1576114a16187d4565b6020026020010151905060006114bc8b8b846080015161339c565b90508160800151826060015114156114da57606082018190526114ef565b6114e98b8b846060015161339c565b60608301525b60808201819052606082015161150a908289898c6001613409565b6060830181905260408e0151805185908110611528576115286187d4565b6020026020010151606001818152505050508061154490618755565b9050611484565b5050505050505050505050505b61156181618755565b90506112ad565b506115738686613479565b6000846115805733611583565b60005b905060005b838110156116a5576000801b8382815181106115a6576115a66187d4565b602002602001015114156115b957611695565b60008982815181106115cd576115cd6187d4565b602002602001015160000151905060008983815181106115ef576115ef6187d4565b602002602001015160200151905060008a8481518110611611576116116187d4565b602002602001015160400151905082602001516001600160a01b031683600001516001600160a01b03167f9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f3188878151811061166e5761166e6187d4565b60200260200101518886866040516116899493929190617eec565b60405180910390a35050505b61169e81618755565b9050611588565b505050505050505050565b606080826000816001600160401b038111156116ce576116ce6187ea565b60405190808252806020026020018201604052801561170757816020015b6116f4616c07565b8152602001906001900390816116ec5790505b5090506000805b838110156117d45736888883818110611729576117296187d4565b905060200281019061173b9190618327565b9050600061175f8b61174d8480618208565b61175a6020870187618208565b613842565b905080602001516001600160a01b03168160000151608001516001600160a01b031614156117995761179260018561841c565b93506117c1565b80856117a586866184ae565b815181106117b5576117b56187d4565b60200260200101819052505b5050806117cd90618755565b905061170e565b5080156118ab5760006117e782856184ae565b90506000816001600160401b03811115611803576118036187ea565b60405190808252806020026020018201604052801561183c57816020015b611829616c07565b8152602001906001900390816118215790505b50905060005b828110156118925784818151811061185c5761185c6187d4565b6020026020010151828281518110611876576118766187d4565b60200260200101819052508061188b90618755565b9050611842565b5061189d8a82613b29565b90985096506118bc92505050565b6118b58883613b29565b9096509450505b505050935093915050565b6000808360400151516001600160401b038111156118e7576118e76187ea565b604051908082528060200260200182016040528015611910578160200160208202803683370190505b50905060008461014001516001600160401b03811115611932576119326187ea565b60405190808252806020026020018201604052801561195b578160200160208202803683370190505b50905060005b8560400151518110156119c15761199486604001518281518110611987576119876187d4565b6020026020010151613d7c565b8382815181106119a6576119a66187d4565b60209081029190910101526119ba81618755565b9050611961565b5060005b856101400151811015611a25576119f8866060015182815181106119eb576119eb6187d4565b6020026020010151613dea565b828281518110611a0a57611a0a6187d4565b6020908102919091010152611a1e81618755565b90506119c5565b507f00000000000000000000000000000000000000000000000000000000000000008560000151866020015184604051602001611a629190617c68565b6040516020818303038152906040528051906020012084604051602001611a899190617c68565b6040516020818303038152906040528051906020012089608001518a60a001518b60c001518c60e001518d61010001518e61012001518e604051602001611adb9c9b9a99989796959493929190617e79565b604051602081830303815290604052805190602001209250505092915050565b6000611b11826060015151836101400151613e41565b81516001600160a01b03166000908152600260205260409020546105049083906118c7565b6000836020015115611b6c578115611b6457604051630694555d60e21b815260048101869052602401610b30565b506000611be8565b60408401516001600160781b031615611be4578215611ba15760405163ee9e0e6360e01b815260048101869052602401610b30565b83606001516001600160781b031684604001516001600160781b031610611be4578115611b64576040516310fda3e160e01b815260048101869052602401610b30565b5060015b949350505050565b6001600160a01b038316331415611c0657505050565b6000611c54611c1361208c565b8460405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b90506000806000845160401415611c8857505050602082015160408301516001600160ff1b0381169060ff1c601b01611cf8565b845160411415611ce45750505060208201516040830151606084015160001a601b8114801590611cbc57508060ff16601c14155b15611cdf57604051630f801e8560e11b815260ff82166004820152602401610b30565b611cf8565b611cef878587613e66565b50505050505050565b6040805160008082526020820180845287905260ff841692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015611d4c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611d8057604051638baa579f60e01b815260040160405180910390fd5b876001600160a01b0316816001600160a01b031614611da457611da4888688613e66565b5050505050505050565b606081806001600160401b03811115611dc957611dc96187ea565b604051908082528060200260200182016040528015611e0257816020015b611def616c2e565b815260200190600190039081611de75790505b50915060005b81811015611e6a57611e3c858583818110611e2557611e256187d4565b9050602002810190611e379190618327565b611e72565b838281518110611e4e57611e4e6187d4565b602002602001018190525080611e6390618755565b9050611e08565b505092915050565b611e7a616c2e565b6040805160a0810190915280611e90848061833d565b611e9990618706565b815260200160016001600160781b0316815260200160016001600160781b03168152602001838060200190611ece91906182e1565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050604080516020818101909252928352909201525092915050565b600060606000806000611f3388886001876130da565b604080516001808252818301909252939650919450925060009190816020015b611f5b616c2e565b815260200190600190039081611f535790505090508881600081518110611f8457611f846187d4565b6020026020010181905250611f998189613f0e565b600081600081518110611fae57611fae6187d4565b60200260200101516000015190506000611fd08286868561012001518d6142b3565b905081602001516001600160a01b031682600001516001600160a01b03167f9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f3188338560200151866040015160405161202b9493929190617eec565b60405180910390a360019750505050505050505b9392505050565b60608060606120598c8c8c600088611262565b6120778b6120678a8c6184e8565b612071898b6184e8565b886146a7565b919e909d50909b509950505050505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146121595750604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b61219486610120013587610140013560016149b5565b5061219d6149fb565b6121c56121ae610200880188618208565b6121ba9150600161841c565b876101e00135613e41565b6040805160e0810182526000808252602082018190529181018290526060808201526080810182905260a0810182905260c081019190915260006040518060a0016040528088600381111561221c5761221c6187be565b8152602001876005811115612233576122336187be565b815260200186600581111561224a5761224a6187be565b8152602001856001600160a01b03168152602001846005811115612270576122706187be565b9052905060006122846102008a018a618208565b6122909150600161841c565b6001600160401b038111156122a7576122a76187ea565b6040519080825280602002602001820160405280156122e057816020015b6122cd616c62565b8152602001906001900390816122c55790505b5060408051600180825281830190925291925060009190816020015b612304616c92565b8152602001906001900390816122fc5750507f000000000000000000000000000000000000000000000000000000000000000085526040805160c08101909152602085015191925060009181906005811115612362576123626187be565b8152602090810190612376908e018e6172e4565b6001600160a01b031681526020018c6020013581526020018c6040013581526020018c6040013581526020018c60600160208101906123b591906172e4565b6001600160a01b0316905290506123d26101e08c0135600161841c565b6001600160401b038111156123e9576123e96187ea565b604051908082528060200260200182016040528015612412578160200160208202803683370190505b506060808701919091528551825160208085015160408087015195870151608088015160a0890151925161244c9894959293919201618166565b604051602081830303815290604052805190602001208560600151600081518110612479576124796187d4565b60200260200101818152505061248d616c62565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915260006040518060a00160405280886020015160058111156124e2576124e26187be565b815260200185602001516001600160a01b0316815260200185604001518152602001856080015181526020018560a001516001600160a01b031681525090508086600081518110612535576125356187d4565b602002602001018190525060005b8e8061020001906125549190618208565b90508110156127295760008f8061020001906125709190618208565b83818110612580576125806187d4565b905060400201803603810190612596919061765a565b90506040518060a001604052808a6040015160058111156125b9576125b96187be565b81526020018a606001516001600160a01b03168152602001600081526020018260000151815260200182602001516001600160a01b031681525094508488836001612604919061841c565b81518110612614576126146187d4565b60200260200101819052508f6101e0013582106126315750612717565b6040518060c001604052808a604001516005811115612652576126526187be565b81526020018a606001516001600160a01b0316815260200160008152602001826000015181526020018260000151815260200182602001516001600160a01b031681525093508960000151846000015185602001518660400151876060015188608001518960a001516040516020016126d19796959493929190618166565b604051602081830303815290604052805190602001208a606001518360016126f9919061841c565b81518110612709576127096187d4565b602002602001018181525050505b8061272181618755565b915050612543565b50876060015160405160200161273f9190617c68565b60408051601f19818403018152919052805160209091012060808901526101e08e01355b8e8061020001906127749190618208565b90508110156128535760008f8061020001906127909190618208565b838181106127a0576127a06187d4565b9050604002018036038101906127b6919061765a565b90506040518060a001604052808a6040015160058111156127d9576127d96187be565b81526020018a606001516001600160a01b03168152602001600081526020018260000151815260200182602001516001600160a01b031681525094508488836001612824919061841c565b81518110612834576128346187d4565b602002602001018190525050808061284b90618755565b915050612763565b50507f0000000000000000000000000000000000000000000000000000000000000000875250506040805160808082019092529085015160009250819060058111156128a1576128a16187be565b81526020016128b660c08e0160a08f016172e4565b6001600160a01b031681526020018c60c0013581526020018c60e00135815250905080826000815181106128ec576128ec6187d4565b60200260200101819052506000604051806020016040528087600001518460000151856020015186604001518760600151886060015160405160200161293796959493929190618125565b604051602081830303815290604052805190602001208152509050806040516020016129639190617c34565b60408051601f1981840301815291815281516020909201919091209087015250507f000000000000000000000000000000000000000000000000000000000000000084526129b2848b85614ac4565b60208501526129c760a08b0160808c016172e4565b6001600160a01b03166129e060808c0160608d016172e4565b6001600160a01b03167f9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f318660200151338587604051612a229493929190617eec565b60405180910390a3612a6484602001518b61016001358b8d6060016020810190612a4c91906172e4565b8e6080016020810190612a5f91906172e4565b614b82565b6020840151612ac590612a7d60808d0160608e016172e4565b612a8b6102208e018e6182e1565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250614c8992505050565b50505050505050505050565b80612b085781600114612af75760405163efcc00b160e01b815260040160405180910390fd5b612b0386868686614d2c565b612c2b565b604080516001808252818301909252600091816020015b612b27616cc4565b815260200190600190039081612b1f5750506040805160c081019091529091508060025b8152602001886001600160a01b03168152602001876001600160a01b03168152602001866001600160a01b031681526020018581526020018481525081600081518110612b9a57612b9a6187d4565b6020026020010181905250612bae82614dc5565b6001600160a01b0316634ce34aa2826040518263ffffffff1660e01b8152600401612bd99190617d79565b602060405180830381600087803b158015612bf357600080fd5b505af1158015612c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da491906175f4565b505050505050565b3460005b612c45610200840184618208565b9050811015612cd25736612c5d610200850185618208565b83818110612c6d57612c6d6187d4565b60400291909101915050803583811115612c9a57604051631a783b8d60e01b815260040160405180910390fd5b612cb3612cad60408401602085016172e4565b82614ea6565b612cbd81856184ae565b9350505080612ccb90618755565b9050612c37565b5080831115612cf457604051631a783b8d60e01b815260040160405180910390fd5b612d0d612d0760808401606085016172e4565b84614ea6565b82811115612d2857612d2833612d2385846184ae565b614ea6565b505050565b612d3682614f35565b80612d4857612b038686868686614f53565b604080516001808252818301909252600091816020015b612d67616cc4565b815260200190600190039081612d5f5750506040805160c08101909152909150806003612b4b565b600081612da157826101c00135612da8565b826101a001355b905060005b612dbb610200850185618208565b9050811015612e2d5736612dd3610200860186618208565b83818110612de357612de36187d4565b90506040020190508315612dff57612dfc8135876184ae565b95505b612e1c878a612e1460408501602086016172e4565b843587615002565b50612e2681618755565b9050612dad565b50611cef8588888785615002565b6040805160a0810182526000808252606060208301819052928201839052918101829052608081019190915281516040015180516000906001600160401b03811115612e8957612e896187ea565b604051908082528060200260200182016040528015612ec257816020015b612eaf616c92565b815260200190600190039081612ea75790505b50905060005b8251811015612f6f576000838281518110612ee557612ee56187d4565b602002602001015190506000604051806080016040528083600001516005811115612f1257612f126187be565b815260200183602001516001600160a01b03168152602001836040015181526020018360600151815250905080848481518110612f5157612f516187d4565b6020026020010181905250505080612f6890618755565b9050612ec8565b5083516060015180516000906001600160401b03811115612f9257612f926187ea565b604051908082528060200260200182016040528015612fcb57816020015b612fb8616c62565b815260200190600190039081612fb05790505b50905060005b825181101561308b576000838281518110612fee57612fee6187d4565b6020026020010151905060006040518060a001604052808360000151600581111561301b5761301b6187be565b815260200183602001516001600160a01b0316815260200183604001518152602001836060015181526020018360a001516001600160a01b031681525090508084848151811061306d5761306d6187d4565b602002602001018190525050508061308490618755565b9050612fd1565b506040805160a0810182528751516001600160a01b031681526020808201959095529081019190915285516101200151606082015291909401516001600160781b031660808201529392505050565b600080600080876000015190506130fa8160a001518260c00151886149b5565b61310e575060009250829150819050613392565b602088015160408901516001600160781b03918216911680821180613131575081155b1561314f57604051632d02959960e11b815260040160405180910390fd5b808210801561316657506131668360800151615145565b156131845760405163a11b63ff60e01b815260040160405180910390fd5b61318d83611afb565b95506131af8a8a89898760e00151886080015189600001518a60200151615163565b60008681526001602090815260408083208151608081018352905460ff808216151583526101008204161515938201939093526001600160781b03620100008404811692820192909252600160881b9092041660608201529061321690889083908c611b36565b61322b57506000945084935061339292505050565b8051613244576132448460000151888d60600151611bf0565b604081015160608201516001600160781b039182169116801561332b578360011415613275578094508093506132a1565b8381146132a157613286848361848f565b9150613292818661848f565b945061329e818561848f565b93505b836132ac868461841c565b11156132bf576132bc82856184ae565b94505b6000898152600160208190526040909120805461ffff191690911790556132e6858361841c565b60008a8152600160205260409020805461ffff16620100006001600160781b03938416026001600160881b031617600160881b92871692909202919091179055613387565b600089815260016020819052604090912080546001600160781b03878116600160881b026001600160881b03918a16620100000270ffffffffffffffffffffffffffffffffff1990931692909217909317929092169190911790555b509295509093505050505b9450945094915050565b6000828414156133ad57508061203f565b60006133b9858461848f565b90506133c58482618459565b9150600083866133d5878661848f565b6133df9190618459565b149050806134005760405163c63cf08960e01b815260040160405180910390fd5b50509392505050565b600085871461346c5760008215613428576134256001856184ae565b90505b600081613435888a61848f565b61343f888c61848f565b613449919061841c565b613453919061841c565b905060006134618683618459565b935061346f92505050565b50845b9695505050505050565b805160005b8181101561371457600083828151811061349a5761349a6187d4565b60200260200101519050600081600001519050855181106134ce576040516321a561b160e21b815260040160405180910390fd5b8581815181106134e0576134e06187d4565b6020026020010151608001516001600160781b031660001415613504575050613704565b60408201516000808085602001516001811115613523576135236187be565b14156135f657600089858151811061353d5761353d6187d4565b60200260200101516020015190508051841061356c57604051635fd9fc6760e11b815260040160405180910390fd5b6000818581518110613580576135806187d4565b6020908102919091010151805160408201519095509350905060048460058111156135ad576135ad6187be565b146135b95760036135bc565b60025b819060058111156135cf576135cf6187be565b908160058111156135e2576135e26187be565b9052506060870151604090910152506136bf565b600089858151811061360a5761360a6187d4565b602002602001015160400151905080518410613639576040516330446bef60e11b815260040160405180910390fd5b600081858151811061364d5761364d6187d4565b60209081029190910101518051604082015190955093509050600484600581111561367a5761367a6187be565b14613686576003613689565b60025b8190600581111561369c5761369c6187be565b908160058111156136af576136af6187be565b9052506060870151604090910152505b6136c882615337565b6136e557604051634a75b57b60e11b815260040160405180910390fd5b80156136fe576136fe8560600151828760800151615354565b50505050505b61370d81618755565b905061347e565b5050815160005b8181101561383c576000848281518110613737576137376187d4565b602002602001015190506000816020015151905081608001516001600160781b03166000141561376857505061382c565b60005b818110156137cb5761379d8360200151828151811061378c5761378c6187d4565b602002602001015160000151615337565b156137bb5760405163a6cfc67360e01b815260040160405180910390fd5b6137c481618755565b905061376b565b505060408101515160005b81811015613828576137f78360400151828151811061378c5761378c6187d4565b156138185760405160016202297360e61b0319815260040160405180910390fd5b61382181618755565b90506137d6565b5050505b61383581618755565b905061371b565b50505050565b61384a616c07565b831580613855575081155b1561387357604051634c74edb760e11b815260040160405180910390fd5b60006138d3878585808060200260200160405190810160405280939291908181526020016000905b828210156138c7576138b86040830286013681900381019061777d565b8152602001906001019061389b565b50505050506000615416565b9050613933878787808060200260200160405190810160405280939291908181526020016000905b82821015613927576139186040830286013681900381019061777d565b815260200190600101906138fb565b505050505060006156d9565b81519092506005811115613949576139496187be565b825151600581111561395d5761395d6187be565b141580613988575080602001516001600160a01b03168260000151602001516001600160a01b031614155b8061399f5750806040015182600001516040015114155b156139bd576040516309cfb45560e01b815260040160405180910390fd5b81600001516060015181606001511115613a70576000848460008181106139e6576139e66187d4565b9050604002018036038101906139fc919061777d565b90508260000151606001518260600151613a1691906184ae565b88826000015181518110613a2c57613a2c6187d4565b602002602001015160400151826020015181518110613a4d57613a4d6187d4565b602090810291909101015160609081019190915283518101519083015250613afe565b600086866000818110613a8557613a856187d4565b905060400201803603810190613a9b919061777d565b90508160600151836000015160600151613ab591906184ae565b88826000015181518110613acb57613acb6187d4565b602002602001015160200151826020015181518110613aec57613aec6187d4565b60200260200101516060018181525050505b60608082015183519091015260809081015182516001600160a01b0390911691015295945050505050565b6060806060600085519050806001600160401b03811115613b4c57613b4c6187ea565b604051908082528060200260200182016040528015613b75578160200160208202803683370190505b50935060005b81811015613c6b576000878281518110613b9757613b976187d4565b6020026020010151905080608001516001600160781b031660001415613bbd5750613c5b565b6001868381518110613bd157613bd16187d4565b91151560209283029190910190910152604081015160005b8151811015613c57576000828281518110613c0657613c066187d4565b602002602001015160600151905080600014613c46576040516314bea84160e31b8152600481018690526024810183905260448101829052606401610b30565b50613c5081618755565b9050613be9565b5050505b613c6481618755565b9050613b7b565b50613c7585615965565b90935091503460005b8451811015613d23576000858281518110613c9b57613c9b6187d4565b60209081029190910101518051909150600081516005811115613cc057613cc06187be565b1415613cfd578381606001511115613ceb57604051631a783b8d60e01b815260040160405180910390fd5b6060810151613cfa90856184ae565b93505b613d10818360200151846040015161601e565b505080613d1c90618755565b9050613c7e565b5060005b8351811015613d6257613d52848281518110613d4557613d456187d4565b60200260200101516160d6565b613d5b81618755565b9050613d27565b508015613d7357613d733382614ea6565b50509250925092565b60007f000000000000000000000000000000000000000000000000000000000000000082600001518360200151846040015185606001518660800151604051602001613dcd96959493929190618125565b604051602081830303815290604052805190602001209050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000826000015183602001518460400151856060015186608001518760a00151604051602001613dcd9796959493929190618166565b80821015613e6257604051632335530b60e11b815260040160405180910390fd5b5050565b604051630b135d3f60e11b808252906001600160a01b03851690631626ba7e90613e96908690869060040161810c565b60206040518083038186803b158015613eae57600080fd5b505afa158015613ec2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ee691906175f4565b6001600160e01b03191614612d2857604051632057875960e21b815260040160405180910390fd5b805160005b81811015614197576000838281518110613f2f57613f2f6187d4565b6020026020010151905060008160000151905085518110613f63576040516321a561b160e21b815260040160405180910390fd5b858181518110613f7557613f756187d4565b6020026020010151602001516001600160781b031660001415613f99575050614187565b6000868281518110613fad57613fad6187d4565b60209081029190910101515160408401519091506000808086602001516001811115613fdb57613fdb6187be565b141561409357836040015151831061400657604051635fd9fc6760e11b815260040160405180910390fd5b60008460400151848151811061401e5761401e6187d4565b60209081029190910101518051604082015190945092509050600483600581111561404b5761404b6187be565b1461405757600361405a565b60025b8190600581111561406d5761406d6187be565b90816005811115614080576140806187be565b9052506060870151604090910152614141565b83606001515183106140b8576040516330446bef60e11b815260040160405180910390fd5b6000846060015184815181106140d0576140d06187d4565b6020908102919091010151805160408201519094509250905060048360058111156140fd576140fd6187be565b1461410957600361410c565b60025b8190600581111561411f5761411f6187be565b90816005811115614132576141326187be565b90525060608701516040909101525b61414a82615337565b61416757604051634a75b57b60e11b815260040160405180910390fd5b8015614180576141808660600151828860800151615354565b5050505050505b61419081618755565b9050613f13565b5050815160005b8181101561383c5760008482815181106141ba576141ba6187d4565b6020026020010151905080602001516001600160781b0316600014156141e057506142a3565b8051606001515160005b818110156142405761420f836000015160600151828151811061378c5761378c6187d4565b156142305760405160016202297360e61b0319815260040160405180910390fd5b61423981618755565b90506141ea565b50508051604001515160005b8181101561429f57614271836000015160400151828151811061378c5761378c6187d4565b1561428f5760405163a6cfc67360e01b815260040160405180910390fd5b61429881618755565b905061424c565b5050505b6142ac81618755565b905061419e565b6040805160a0810182526000808252606060208301819052928201839052918101829052608081019190915260008660a001518760c001516142f591906184ae565b905060008760a001514261430991906184ae565b9050600061431782846184ae565b60408a01515190915034906001600160401b03811115614339576143396187ea565b60405190808252806020026020018201604052801561437257816020015b61435f616c92565b8152602001906001900390816143575790505b50602086015260005b8a60400151518110156144f55760008b6040015182815181106143a0576143a06187d4565b6020026020010151905060006143c5826060015183608001518e8e8a8a8d600061627e565b905060006040518060a00160405280846000015160058111156143ea576143ea6187be565b815260200184602001516001600160a01b0316815260200184604001518152602001838152602001336001600160a01b03168152509050604051806080016040528082600001516005811115614442576144426187be565b815260200182602001516001600160a01b0316815260200182604001518152602001838152508960200151858151811061447e5761447e6187d4565b602090810291909101015260008151600581111561449e5761449e6187be565b14156144d257848211156144c557604051631a783b8d60e01b815260040160405180910390fd5b6144cf82866184ae565b94505b6144e1818f600001518d61601e565b505050806144ee90618755565b905061437b565b508960600151516001600160401b03811115614513576145136187ea565b60405190808252806020026020018201604052801561454c57816020015b614539616c62565b8152602001906001900390816145315790505b50604086015260005b8a60600151518110156146895760008b60600151828151811061457a5761457a6187d4565b60200260200101519050600061459f826060015183608001518e8e8a8a8d600161627e565b905060006040518060a00160405280846000015160058111156145c4576145c46187be565b815260200184602001516001600160a01b03168152602001846040015181526020018381526020018460a001516001600160a01b031681525090508089604001518581518110614616576146166187d4565b6020908102919091010152600081516005811115614636576146366187be565b141561466a578482111561465d57604051631a783b8d60e01b815260040160405180910390fd5b61466782866184ae565b94505b61467581338c61601e565b5050508061468290618755565b9050614555565b50801561469a5761469a3382614ea6565b5050505095945050505050565b82518251606091829182919060006146bf828461841c565b6001600160401b038111156146d6576146d66187ea565b60405190808252806020026020018201604052801561470f57816020015b6146fc616c07565b8152602001906001900390816146f45790505b5090506000805b848110156147c05760008b8281518110614732576147326187d4565b60200260200101519050600061474b8e6000848e6162cb565b905080602001516001600160a01b03168160000151608001516001600160a01b031614156147855761477e60018561841c565b93506147ad565b808561479186866184ae565b815181106147a1576147a16187d4565b60200260200101819052505b5050806147b990618755565b9050614716565b5060005b838110156148795760008a82815181106147e0576147e06187d4565b6020026020010151905060006147f98e6001848e6162cb565b905080602001516001600160a01b03168160000151608001516001600160a01b031614156148335761482c60018561841c565b9350614866565b8085856148408a8761841c565b61484a91906184ae565b8151811061485a5761485a6187d4565b60200260200101819052505b50508061487290618755565b90506147c4565b50801561497d5760008161488d858761841c565b61489791906184ae565b90506000816001600160401b038111156148b3576148b36187ea565b6040519080825280602002602001820160405280156148ec57816020015b6148d9616c07565b8152602001906001900390816148d15790505b50905060005b828110156149425784818151811061490c5761490c6187d4565b6020026020010151828281518110614926576149266187d4565b60200260200101819052508061493b90618755565b90506148f2565b5080516149625760405163d5da9a1b60e01b815260040160405180910390fd5b61496c8d82613b29565b985098509850505050505050613392565b815161499c5760405163d5da9a1b60e01b815260040160405180910390fd5b6149a68b83613b29565b96509650965050505050613392565b6000428411806149c55750428311155b156149f15781156149e9576040516337bf561360e11b815260040160405180910390fd5b50600061203f565b5060019392505050565b6000614a0b6024600436846183f2565b810190614a1891906175db565b6020148015614a455750614a336102446102243660006183f2565b810190614a4091906175db565b610240145b8015614aa15750614a5d6102846102643660006183f2565b810190614a6a91906175db565b614a7590604061848f565b614a819061026061841c565b614a926102646102443660006183f2565b810190614a9f91906175db565b145b905080614ac1576040516339f3e3fd60e01b815260040160405180910390fd5b50565b600080600281614ada60808701606088016172e4565b6001600160a01b031681526020810191909152604001600020548551909150614b0960808601606087016172e4565b614b1960a08701608088016172e4565b8760400151886080015187600001518961012001358a61014001358b61016001358c61018001358d6101a001358b604051602001614b629c9b9a99989796959493929190617e79565b604051602081830303815290604052805190602001209150509392505050565b6001836003811115614b9657614b966187be565b118015614bac5750336001600160a01b03821614155b8015614bc15750336001600160a01b03831614155b15614c82576040516303874c7760e21b808252600482018790523360248301526001600160a01b03848116604484015260648301879052909190831690630e1d31dc9060840160206040518083038186803b158015614c1f57600080fd5b505afa158015614c33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614c5791906175f4565b6001600160e01b03191614614c8257604051633ed4053f60e21b815260048101869052602401610b30565b5050505050565b6000838152600160208181526040928390208351608081018552905460ff808216151583526101008204161515928201929092526001600160781b03620100008304811694820194909452600160881b9091049092166060830152614cf2908590839080611b36565b508051614d0457614d04838584611bf0565b5050506000908152600160205260409020710100000000000000000000000000000100019055565b6001600160a01b0384163b614d5f57604051632f8aeb3960e11b81526001600160a01b0385166004820152602401610b30565b6040516323b872dd60e01b81526001600160a01b0384811660048301528381166024830152604482018390528516906323b872dd90606401600060405180830381600087803b158015614db157600080fd5b505af1158015611da4573d6000803e3d6000fd5b6000614e65826040516001600160f81b031960208201526bffffffffffffffffffffffff197f000000000000000000000000000000000000000000000000000000000000000060601b166021820152603581018290527f0000000000000000000000000000000000000000000000000000000000000000605582015260009060750160408051601f19818403018152919052805160209091012092915050565b90506001600160a01b0381163b614ea157604051630e7ccd9360e11b8152600481018390526001600160a01b0382166024820152604401610b30565b919050565b614eaf81614f35565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114614efc576040519150601f19603f3d011682016040523d82523d6000602084013e614f01565b606091505b5050905080612d285760405163470c7c1d60e01b81526001600160a01b038416600482015260248101839052604401610b30565b80614ac15760405163246cf94560e21b815260040160405180910390fd5b6001600160a01b0385163b614f8657604051632f8aeb3960e11b81526001600160a01b0386166004820152602401610b30565b604051637921219560e11b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c4015b600060405180830381600087803b158015614fee57600080fd5b505af11580156116a5573d6000803e3d6000fd5b61500b82614f35565b806150215761501c85858585616437565b614c82565b604080516001808252818301909252600091816020015b615040616cc4565b815260200190600190039081615038579050506040805160c081019091529091508060018152602001876001600160a01b03168152602001866001600160a01b03168152602001856001600160a01b031681526020016000815260200184815250816000815181106150b4576150b46187d4565b60200260200101819052506150c882614dc5565b6001600160a01b0316634ce34aa2826040518263ffffffff1660e01b81526004016150f39190617d79565b602060405180830381600087803b15801561510d57600080fd5b505af1158015615121573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cef91906175f4565b6000816003811115615159576151596187be565b6001161592915050565b6001836003811115615177576151776187be565b11801561518d5750336001600160a01b03821614155b80156151a25750336001600160a01b03831614155b15611da4576080880151511580156151b957508651155b1561527f576040516303874c7760e21b808252600482018790523360248301526001600160a01b03848116604484015260648301879052909190831690630e1d31dc9060840160206040518083038186803b15801561521757600080fd5b505afa15801561522b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061524f91906175f4565b6001600160e01b0319161461527a57604051633ed4053f60e21b815260048101869052602401610b30565b611da4565b604051630331315760e41b81526303874c7760e21b906001600160a01b038316906333131570906152bc90899033908e908d908f90600401617f86565b60206040518083038186803b1580156152d457600080fd5b505afa1580156152e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061530c91906175f4565b6001600160e01b03191614611da457604051633ed4053f60e21b815260048101869052602401610b30565b6000600382600581111561534d5761534d6187be565b1192915050565b8260005b82518110156153f5576000838281518110615375576153756187d4565b602002602001015190508083116153b75760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506153e4565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b506153ee81618755565b9050615358565b5080831461383c576040516309bde33960e01b815260040160405180910390fd5b61541e616c62565b615444604051806060016040528060008152602001600081526020016000151581525090565b838381518110615456576154566187d4565b60209081029190910101515181528351849084908110615478576154786187d4565b60209081029190910181015181015190820152845181511015604082018190526156ae576000858260000151815181106154b4576154b46187d4565b602002602001015190508160400151806154d75750806040015151826020015110155b1515604083018190526156ac5760008160400151836020015181518110615500576155006187d4565b602002602001015190506040518060a001604052808260000151600581111561552b5761552b6187be565b815260200182602001516001600160a01b03168152602001826040015181526020018260600151815260200182608001516001600160a01b0316815250935060008160600181815250506000856001615584919061841c565b90505b86518110156156a9578681815181106155a2576155a26187d4565b602090810291909101015151845286518790829081106155c4576155c46187d4565b602090810291909101810151810151908501528751845110801560408601526155ec576156a9565b87846000015181518110615602576156026187d4565b6020026020010151925082608001516001600160781b03166000146156995760408084015151602086015110801591860191909152615640576156a9565b826040015184602001518151811061565a5761565a6187d4565b6020026020010151915081606001518560600151615678919061841c565b60608087019190915260009083015261569182866165c6565b151560408501525b6156a281618755565b9050615587565b50505b505b8060400151156156d157604051637fda727960e01b815260040160405180910390fd5b509392505050565b6156e1616c07565b60008383815181106156f5576156f56187d4565b60200260200101516000015190506000848481518110615717576157176187d4565b60200260200101516020015190506000865183101590508061593c576000878481518110615747576157476187d4565b60200260200101519050818061576257508060200151518310155b91508161593a57600081602001518481518110615781576157816187d4565b6020026020010151905060405180606001604052806040518060a00160405280846000015160058111156157b7576157b76187be565b815260200184602001516001600160a01b031681526020018460400151815260200184606001518152602001336001600160a01b0316815250815260200183600001516001600160a01b03168152602001836060015181525095506000816060018181525050600087600161582c919061841c565b90505b88518110156159375788818151811061584a5761584a6187d4565b602002602001015160000151955088818151811061586a5761586a6187d4565b602002602001015160200151945089518610159350831561588a57615937565b89868151811061589c5761589c6187d4565b6020026020010151925082608001516001600160781b0316600014615927576020830151518510801594506158d057615937565b826020015185815181106158e6576158e66187d4565b602002602001015191508160600151876000015160600151615908919061841c565b875160609081019190915260009083015261592483838961664f565b93505b61593081618755565b905061582f565b50505b505b801561595b57604051637fda727960e01b815260040160405180910390fd5b5050509392505050565b80516060908190600181116159b1576040805160008082526020820190925285916159a6565b615993616cfb565b81526020019060019003908161598b5790505b509250925050915091565b600080826001600160401b038111156159cc576159cc6187ea565b6040519080825280602002602001820160405280156159f5578160200160208202803683370190505b50905060005b8651811015615a7a576003878281518110615a1857615a186187d4565b602002602001015160000151600001516005811115615a3957615a396187be565b1415615a6a57808284615a4b81618755565b955081518110615a5d57615a5d6187d4565b6020026020010181815250505b615a7381618755565b90506159fb565b5060018211615ac257604080516000808252602082019092528791615ab5565b615aa2616cfb565b815260200190600190039081615a9a5790505b5094509450505050915091565b6000826001600160401b03811115615adc57615adc6187ea565b604051908082528060200260200182016040528015615b2257816020015b604080518082019091526000815260606020820152815260200190600190039081615afa5790505b509050600082600081518110615b3a57615b3a6187d4565b602002602001015190506000615b5089836166f9565b60408051600180825281830190925291925060009190602080830190803683370190505090508281600081518110615b8a57615b8a6187d4565b6020026020010181815250508184600081518110615baa57615baa6187d4565b602002602001015160000181815250508084600081518110615bce57615bce6187d4565b60209081029190910181015101526001805b87811015615e13576000878281518110615bfc57615bfc6187d4565b60200260200101519050615c108d826166f9565b94506000805b84811015615d6d57888181518110615c3057615c306187d4565b602002602001015160000151871415615d5d576000898281518110615c5757615c576187d4565b60200260200101516020015190506000815190506000816001615c7a919061841c565b6001600160401b03811115615c9157615c916187ea565b604051908082528060200260200182016040528015615cba578160200160208202803683370190505b50905060005b82811015615d0f57838181518110615cda57615cda6187d4565b6020026020010151828281518110615cf457615cf46187d4565b6020908102919091010152615d0881618755565b9050615cc0565b5085818381518110615d2357615d236187d4565b602002602001018181525050808c8581518110615d4257615d426187d4565b60200260200101516020018190525060019450505050615d6d565b615d6681618755565b9050615c16565b5080615e005760408051600180825281830190925290602080830190803683370190505094508185600081518110615da757615da76187d4565b60200260200101818152505085888581518110615dc657615dc66187d4565b602090810291909101015152848885615dde81618755565b965081518110615df057615df06187d4565b6020026020010151602001819052505b505080615e0c90618755565b9050615be0565b5086811415615e6057604080516000808252602082019092528c91615e4e565b615e3b616cfb565b815260200190600190039081615e335790505b50995099505050505050505050915091565b6000886001600160401b03811115615e7a57615e7a6187ea565b604051908082528060200260200182016040528015615ea3578160200160208202803683370190505b50604080516002808252606082018352929350600092909160208301908036833701905050905060005b83811015615fc9576000888281518110615ee957615ee96187d4565b602002602001015160200151905060008151905060028110615fb65783600181518110615f1857615f186187d4565b602002602001018051615f2a90618755565b9052835181908590600090615f4157615f416187d4565b60200260200101818151615f55919061841c565b90525060005b81811015615fb457615f6e84600161841c565b86848381518110615f8157615f816187d4565b602002602001015181518110615f9957615f996187d4565b6020908102919091010152615fad81618755565b9050615f5b565b505b505080615fc290618755565b9050615ecd565b5061600b8d888484600081518110615fe357615fe36187d4565b602002602001015185600181518110615ffe57615ffe6187d4565b6020026020010151616798565b9b509b5050505050505050505050915091565b600083516005811115616033576160336187be565b141561604b57612d2883608001518460600151614ea6565b600183516005811115616060576160606187be565b141561607f57612d288360200151838560800151866060015185615002565b600283516005811115616094576160946187be565b14156160b857612d2883602001518385608001518660400151876060015186612ad1565b612d2883602001518385608001518660400151876060015186612d2d565b60a08101518151602083015160408401516060850151608086015185616108576161038585858585616b6a565b611cef565b604080516001808252818301909252600091816020015b6040805160a081018252600080825260208083018290529282015260608082018190526080820152825260001990920191018161611f5790505090506040518060a00160405280876001600160a01b03168152602001866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815250816000815181106161b0576161b06187d4565b60200260200101819052506161c487614dc5565b6001600160a01b031663899e104c600060405190808252806020026020018201604052801561620d57816020015b6161fa616cc4565b8152602001906001900390816161f25790505b50836040518363ffffffff1660e01b815260040161622c929190617d8c565b602060405180830381600087803b15801561624657600080fd5b505af115801561625a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a591906175f4565b60008789141561629a5761629387878a61339c565b90506162bf565b6162bc6162a888888c61339c565b6162b389898c61339c565b87878787613409565b90505b98975050505050505050565b6162d3616c07565b84518351806162f7578560405163375c24c160e01b8152600401610b3091906181b4565b6000805b82811015616397576000878281518110616317576163176187d4565b602002602001015160000151905084811061634557604051637fda727960e01b815260040160405180910390fd5b898181518110616357576163576187d4565b6020026020010151608001516001600160781b03166000146163865761637e82600161841c565b925050616397565b5061639081618755565b90506162fb565b50806163e857505060408051610100810182526000606082018181526080830182905260a0830182905260c0830182905260e08301829052825260208201819052918101919091529150611be89050565b60008760018111156163fc576163fc6187be565b14156164215761641788876164126001856184ae565b6156d9565b9350505050611be8565b61641788876164316001856184ae565b88616bcf565b6001600160a01b0384163b61646a57604051632f8aeb3960e11b81526001600160a01b0385166004820152602401610b30565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916164ce9190617c9e565b6000604051808303816000865af19150503d806000811461650b576040519150601f19603f3d011682016040523d82523d6000602084013e616510565b606091505b50915091508161655c5760405163f486bc8760e01b81526001600160a01b038088166004830152808716602483015285166044820152600060648201526084810184905260a401610b30565b80511580159061656e57506020815110155b15612c2b578080602001905181019061658791906175b9565b612c2b57604051639889192360e01b81526001600160a01b03808816600483015280871660248301528516604482015260648101849052608401610b30565b600082608001516001600160a01b031682608001516001600160a01b03161415806166155750825160058111156165ff576165ff6187be565b82516005811115616612576166126187be565b14155b8061663a575082602001516001600160a01b031682602001516001600160a01b031614155b8061203f575050604091820151910151141590565b60008260400151826000015160400151141580616686575083600001516001600160a01b031682602001516001600160a01b031614155b8061669957508360600151826040015114155b806166c95750825160058111156166b2576166b26187be565b82515160058111156166c6576166c66187be565b14155b80611be8575082602001516001600160a01b03168260000151602001516001600160a01b03161415949350505050565b60008083838151811061670e5761670e6187d4565b6020026020010151905060008160000151905061678f816020015183602001518360800151856040015160408051602080820193909352606095861b6bffffffffffffffffffffffff199081168284015294861b851660548201529290941b90921660688201528251605c818303018152607c909101909252815191012090565b95945050505050565b8451606090819060006167ab86836184ae565b6001600160401b038111156167c2576167c26187ea565b6040519080825280602002602001820160405280156167fb57816020015b6167e8616c07565b8152602001906001900390816167e05790505b5090506000856001600160401b03811115616818576168186187ea565b60405190808252806020026020018201604052801561685157816020015b61683e616cfb565b8152602001906001900390816168365790505b509050600080876001600160401b0381111561686f5761686f6187ea565b604051908082528060200260200182016040528015616898578160200160208202803683370190505b50905060005b85811015616b575760008b82815181106168ba576168ba6187d4565b6020026020010151905060008e83815181106168d8576168d86187d4565b602002602001015190508160001415616919578087866168f781618755565b975081518110616909576169096187d4565b6020026020010181905250616b44565b60006169266001846184ae565b905060006001600160a01b0316878281518110616945576169456187d4565b6020026020010151600001516001600160a01b03161415616a845760008f8281518110616974576169746187d4565b6020026020010151602001515190506040518060c001604052808460000151602001516001600160a01b0316815260200184602001516001600160a01b031681526020018460000151608001516001600160a01b03168152602001826001600160401b038111156169e7576169e76187ea565b604051908082528060200260200182016040528015616a10578160200160208202803683370190505b508152602001826001600160401b03811115616a2e57616a2e6187ea565b604051908082528060200260200182016040528015616a57578160200160208202803683370190505b5081526020018460400151815250888381518110616a7757616a776187d4565b6020026020010181905250505b6000858281518110616a9857616a986187d4565b602002602001018051809190616aad90618755565b8152509050826000015160400151888381518110616acd57616acd6187d4565b6020026020010151606001518281518110616aea57616aea6187d4565b6020908102919091010152825160600151616b0481614f35565b80898481518110616b1757616b176187d4565b6020026020010151608001518381518110616b3457616b346187d4565b6020026020010181815250505050505b505080616b5090618755565b905061689e565b50929b919a509098505050505050505050565b6001600160a01b0385163b616b9d57604051632f8aeb3960e11b81526001600160a01b0386166004820152602401610b30565b604051631759616b60e11b81526001600160a01b03861690632eb2c2d690614fd4908790879087908790600401617cba565b616bd7616c07565b6000616be4868686615416565b604080516060810182529182523360208301528101939093525090949350505050565b6040518060600160405280616c1a616c62565b815260006020820181905260409091015290565b6040518060a00160405280616c41616d2f565b81526000602082018190526040820152606080820181905260809091015290565b6040805160a081019091528060008152600060208201819052604082018190526060820181905260809091015290565b6040805160808101909152806000815260200160006001600160a01b0316815260200160008152602001600081525090565b6040805160c08101909152806000815260006020820181905260408201819052606082018190526080820181905260a09091015290565b6040805160c0810182526000808252602082018190529181018290526060808201819052608082015260a081019190915290565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b03168152602001606081526020016060815260200160006003811115616d7c57616d7c6187be565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b8035614ea181618810565b60008083601f840112616dc957600080fd5b5081356001600160401b03811115616de057600080fd5b6020830191508360208260051b8501011115616dfb57600080fd5b9250929050565b600082601f830112616e1357600080fd5b81356020616e28616e23836183cf565b61839f565b80838252828201915082860187848660051b8901011115616e4857600080fd5b6000805b86811015616e8a5782356001600160401b03811115616e69578283fd5b616e778b88838d0101616ff3565b8652509385019391850191600101616e4c565b509198975050505050505050565b600082601f830112616ea957600080fd5b81356020616eb9616e23836183cf565b8281528181019085830160c080860288018501891015616ed857600080fd5b60005b86811015616e8a57616eed8a846170a8565b85529385019391810191600101616edb565b600082601f830112616f1057600080fd5b81356020616f20616e23836183cf565b8281528181019085830160a080860288018501891015616f3f57600080fd5b60005b86811015616e8a57616f548a84617189565b85529385019391810191600101616f42565b600082601f830112616f7757600080fd5b81356001600160401b03811115616f9057616f906187ea565b616fa3601f8201601f191660200161839f565b818152846020838601011115616fb857600080fd5b816020850160208301376000918101602001919091529392505050565b803560068110614ea157600080fd5b803560048110614ea157600080fd5b600060a0828403121561700557600080fd5b61700d618354565b905081356001600160401b038082111561702657600080fd5b617032858386016171e9565b8352617040602085016172cd565b6020840152617051604085016172cd565b6040840152606084013591508082111561706a57600080fd5b61707685838601616f66565b6060840152608084013591508082111561708f57600080fd5b5061709c84828501616f66565b60808301525092915050565b600060c082840312156170ba57600080fd5b60405160c081018181106001600160401b03821117156170dc576170dc6187ea565b6040529050806170eb83616fd5565b815260208301356170fb81618810565b8060208301525060408301356040820152606083013560608201526080830135608082015260a083013561712e81618810565b60a0919091015292915050565b60006040828403121561714d57600080fd5b604051604081018181106001600160401b038211171561716f5761716f6187ea565b604052823581526020928301359281019290925250919050565b600060a0828403121561719b57600080fd5b6171a3618354565b90506171ae82616fd5565b815260208201356171be81618810565b8060208301525060408201356040820152606082013560608201526080820135608082015292915050565b600061016082840312156171fc57600080fd5b61720461837c565b905061720f82616dac565b815261721d60208301616dac565b602082015260408201356001600160401b038082111561723c57600080fd5b61724885838601616eff565b6040840152606084013591508082111561726157600080fd5b5061726e84828501616e98565b60608301525061728060808301616fe4565b608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525092915050565b80356001600160781b0381168114614ea157600080fd5b6000602082840312156172f657600080fd5b813561203f81618810565b600080600080600080600080600060c08a8c03121561731f57600080fd5b89356001600160401b038082111561733657600080fd5b6173428d838e01616e02565b9a5060208c013591508082111561735857600080fd5b6173648d838e01616db7565b909a50985060408c013591508082111561737d57600080fd5b6173898d838e01616db7565b909850965060608c01359150808211156173a257600080fd5b506173af8c828d01616db7565b9a9d999c50979a96999598959660808101359660a09091013595509350505050565b6000806000806000606086880312156173e957600080fd5b85356001600160401b038082111561740057600080fd5b61740c89838a01616e02565b9650602088013591508082111561742257600080fd5b61742e89838a01616db7565b9096509450604088013591508082111561744757600080fd5b5061745488828901616db7565b969995985093965092949392505050565b6000806020838503121561747857600080fd5b82356001600160401b0381111561748e57600080fd5b61749a85828601616db7565b90969095509350505050565b60008060008060008060008060a0898b0312156174c257600080fd5b88356001600160401b03808211156174d957600080fd5b6174e58c838d01616db7565b909a50985060208b01359150808211156174fe57600080fd5b61750a8c838d01616db7565b909850965060408b013591508082111561752357600080fd5b506175308b828c01616db7565b999c989b509699959896976060870135966080013595509350505050565b6000806000806040858703121561756457600080fd5b84356001600160401b038082111561757b57600080fd5b61758788838901616db7565b909650945060208701359150808211156175a057600080fd5b506175ad87828801616db7565b95989497509550505050565b6000602082840312156175cb57600080fd5b8151801515811461203f57600080fd5b6000602082840312156175ed57600080fd5b5035919050565b60006020828403121561760657600080fd5b81516001600160e01b03198116811461203f57600080fd5b60006020828403121561763057600080fd5b81356018811061203f57600080fd5b60006020828403121561765157600080fd5b61203f82616fe4565b60006040828403121561766c57600080fd5b604051604081018181106001600160401b038211171561768e5761768e6187ea565b6040528235815260208301356176a381618810565b60208201529392505050565b600080600080606085870312156176c557600080fd5b84356001600160401b03808211156176dc57600080fd5b9086019060a082890312156176f057600080fd5b9094506020860135908082111561770657600080fd5b5061771387828801616db7565b9598909750949560400135949350505050565b60006020828403121561773857600080fd5b81356001600160401b0381111561774e57600080fd5b8201610240818503121561203f57600080fd5b600060c0828403121561777357600080fd5b61203f83836170a8565b60006040828403121561778f57600080fd5b61203f838361713b565b600060a082840312156177ab57600080fd5b61203f8383617189565b6000602082840312156177c757600080fd5b81356001600160401b038111156177dd57600080fd5b611be8848285016171e9565b600080604083850312156177fc57600080fd5b82356001600160401b0381111561781257600080fd5b83016040818603121561782457600080fd5b946020939093013593505050565b600081518084526020808501945080840160005b8381101561786257815187529582019590820190600101617846565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b85811015617919578284038952815180516001600160a01b039081168652868201518116878701526040808301519091169086015260608082015160c082880181905291906178dc83890182617832565b92505050608080830151878303828901526178f78382617832565b60a094850151989094019790975250509885019893509084019060010161788b565b5091979650505050505050565b600081518084526020808501945080840160005b83811015617862578151805161794f81618800565b8852808401516001600160a01b03908116858a01526040808301518216908a0152606080830151909116908901526080808201519089015260a0908101519088015260c0909601959082019060010161793a565b600081518084526020808501945080840160005b838110156178625781516179cc888251617bc4565b808401516001600160a01b0390811689860152604080830151908a0152606080830151908a0152608080830151908a015260a091820151169088015260c090960195908201906001016179b7565b600081518084526020808501808196508360051b8101915082860160005b85811015617919578284038952815160a08151865286820151617a5d88880182617be1565b506040828101519087015260608083015190870152608091820151918601819052617a8a81870183617832565b9a87019a9550505090840190600101617a38565b600081518084526020808501945080840160005b83811015617862578151617ac7888251617bf1565b808401516001600160a01b031660a08901526040015160c088015260e09096019590820190600101617ab2565b600081518084526020808501945080840160005b83811015617862578151617b1d888251617bc4565b838101516001600160a01b03168885015260408082015190890152606080820151908901526080908101519088015260a09096019590820190600101617b08565b600081518084526020808501945080840160005b8381101561786257617b85878351617bf1565b60a0969096019590820190600101617b72565b60008151808452617bb0816020860160208601618712565b601f01601f19169290920160200192915050565b60068110617bd457617bd46187be565b9052565b617bd481618800565b60028110617bd457617bd46187be565b617bfc828251617bc4565b6020818101516001600160a01b0390811691840191909152604080830151908401526060808301519084015260809182015116910152565b60008183825b6001811015617c59578151835260209283019290910190600101617c3a565b50505060208201905092915050565b815160009082906020808601845b83811015617c9257815185529382019390820190600101617c76565b50929695505050505050565b60008251617cb0818460208701618712565b9190910192915050565b6001600160a01b0385811682528416602082015260a060408201819052600090617ce690830185617832565b8281036060840152617cf88185617832565b838103608090940193909352505060008152602001949350505050565b606080825284519082018190526000906020906080840190828801845b82811015617d50578151151584529284019290840190600101617d32565b50505083810382850152617d648187617a9e565b915050828103604084015261346f818561786d565b60208152600061203f6020830184617926565b60006040808352617d9f81840186617926565b6020848203818601528186518084528284019150828160051b85010183890160005b83811015617e4457868303601f19018552815180516001600160a01b0390811685528782015181168886015289820151168985015260608082015160a08287018190529190617e1283880182617832565b9250505060808083015192508582038187015250617e308183617832565b968801969450505090850190600101617dc1565b50909a9950505050505050505050565b604081526000617e676040830185617a9e565b828103602084015261678f818561786d565b8c81526001600160a01b038c811660208301528b166040820152606081018a9052608081018990526101808101617eaf89618800565b60a082019890985260c081019690965260e08601949094526101008501929092526101208401526101408301526101609091015295945050505050565b60006080808301878452602060018060a01b03808916828701526040848188015283895180865260a089019150848b01955060005b81811015617f62578651617f36848251617bc4565b808701518616848801528481015185850152606090810151908401529585019591870191600101617f21565b50508781036060890152617f76818a617b5e565b9c9b505050505050505050505050565b85815260018060a01b038516602082015260a060408201526000610140855160a080850152617fc082850182516001600160a01b03169052565b6020810151610160617fdc818701836001600160a01b03169052565b604083015191508061018087015250617ff96102a0860182617af4565b9050606082015161013f19868303016101a087015261801882826179a3565b915050608082015161802e6101c0870182617bd8565b5060a08201516101e086015260c082015161020086015260e082015161022086015261010080830151610240870152610120808401516102608801528484015161028088015260208a0151945061809060c08801866001600160781b03169052565b60408a01516001600160781b031660e088015260608a0151878403609f19908101848a015290955093506180c48386617b98565b945060808a0151925083878603018188015250506180e28382617b98565b9250505082810360608401526180f88186617832565b905082810360808401526162bf8185617a1a565b828152604060208201526000611be86040830184617b98565b86815260c081016181396020830188617bc4565b6001600160a01b039590951660408201526060810193909352608083019190915260a09091015292915050565b87815260e0810161817a6020830189617bc4565b6001600160a01b0396871660408301526060820195909552608081019390935260a083019190915290921660c09092019190915292915050565b602081016105048284617be1565b60208152600061203f6020830184617b98565b6060815260006181e86060830186617b98565b6020830194909452506001600160a01b0391909116604090910152919050565b6000808335601e1984360301811261821f57600080fd5b8301803591506001600160401b0382111561823957600080fd5b6020019150600681901b3603821315616dfb57600080fd5b6000808335601e1984360301811261826857600080fd5b8301803591506001600160401b0382111561828257600080fd5b602001915060c081023603821315616dfb57600080fd5b6000808335601e198436030181126182b057600080fd5b8301803591506001600160401b038211156182ca57600080fd5b602001915060a081023603821315616dfb57600080fd5b6000808335601e198436030181126182f857600080fd5b8301803591506001600160401b0382111561831257600080fd5b602001915036819003821315616dfb57600080fd5b60008235603e19833603018112617cb057600080fd5b6000823561015e19833603018112617cb057600080fd5b60405160a081016001600160401b0381118282101715618376576183766187ea565b60405290565b60405161016081016001600160401b0381118282101715618376576183766187ea565b604051601f8201601f191681016001600160401b03811182821017156183c7576183c76187ea565b604052919050565b60006001600160401b038211156183e8576183e86187ea565b5060051b60200190565b6000808585111561840257600080fd5b8386111561840f57600080fd5b5050820193919092039150565b6000821982111561842f5761842f618792565b500190565b600060ff821660ff84168060ff0382111561845157618451618792565b019392505050565b600082618468576184686187a8565b500490565b600060ff831680618480576184806187a8565b8060ff84160491505092915050565b60008160001904831182151516156184a9576184a9618792565b500290565b6000828210156184c0576184c0618792565b500390565b600060ff821660ff8416808210156184df576184df618792565b90039392505050565b60006184f6616e23846183cf565b808482526020808301925084368760051b8701111561851457600080fd5b60005b878110156185b55781356001600160401b0381111561853557600080fd5b870136601f82011261854657600080fd5b8035618554616e23826183cf565b8181528581019083870136600685901b86018901111561857357600080fd5b600094505b8385101561859f5761858a368261713b565b83526001949094019391870191604001618578565b5088525050509382019390820190600101618517565b50919695505050505050565b60006185cf616e23846183cf565b838152602080820191908460053688821b830111156185ed57600080fd5b60005b888110156186ed5782356001600160401b038082111561860f57600080fd5b818a01915060a0823603121561862457600080fd5b61862c618354565b82358152868301356002811061864157600080fd5b8188015260408381013590820152606080840135908201526080808401358381111561866c57600080fd5b939093019236601f85011261868057600080fd5b83359250618690616e23846183cf565b83815288810190858a0136868a1b88018c0111156186ad57600080fd5b600096505b858710156186d0578035835260019690960195918a01918a016186b2565b5091830191909152508852505094830194918301916001016185f0565b5092979650505050505050565b60006105043683616ff3565b600061050436836171e9565b60005b8381101561872d578181015183820152602001618715565b8381111561383c5750506000910152565b60008161874d5761874d618792565b506000190190565b600060001982141561876957618769618792565b5060010190565b600060ff831680618783576187836187a8565b8060ff84160691505092915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60048110614ac157614ac16187be565b6001600160a01b0381168114614ac157600080fdfea2646970667358221220c1d0c8bd67ef87e8ea7bb7cf4b07e48514b0080290c49de502d8e39eec7fdaba64736f6c63430008070033",
    "sourceMap": "1503:39712:13:-:0;;;2038:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2719:5:16;;;;;;;;;;;-1:-1:-1;;;2719:5:16;;;;;2778:8;;;;;;;;;;-1:-1:-1;;;2778:8:16;;;;2861:264;;2116:17:13;;;;;;;;2703:23:16;;2762:26;;2680:20;;2861:264;;;-1:-1:-1;;;5827:25:23;;-1:-1:-1;;;5877:2:23;5868:12;;5861:39;-1:-1:-1;;;5925:2:23;5916:12;;5909:38;5977:31;5972:2;5963:12;;5956:53;6039:22;6034:2;6025:12;;6018:44;-1:-1:-1;;;6087:2:23;6078:12;;6071:41;-1:-1:-1;;;6137:3:23;6128:13;;6121:26;6172:3;6163:13;;5019:1163;2861:264:16;;;;-1:-1:-1;;2861:264:16;;;;;;;;;-1:-1:-1;;;2861:264:16;3205:310;;2531:33:23;-1:-1:-1;;;2580:12:23;;;2573:39;-1:-1:-1;;;2628:12:23;;;2621:38;2689:31;2675:12;;;2668:53;2751:22;2737:12;;;2730:44;-1:-1:-1;;;2790:12:23;;;2783:42;-1:-1:-1;;;2841:13:23;;;2834:42;-1:-1:-1;;;2892:13:23;;;2885:26;;;3205:310:16;;;;;;;;;2927:13:23;;;3205:310:16;;;-1:-1:-1;;;3600:488:16;;;4365:31:23;-1:-1:-1;;;4412:12:23;;;4405:40;-1:-1:-1;;;4461:12:23;;;4454:37;-1:-1:-1;;;4507:12:23;;;4500:42;4572:34;4558:12;;;4551:56;-1:-1:-1;;;4623:12:23;;;4616:26;-1:-1:-1;;;4658:12:23;;;4651:40;-1:-1:-1;;;4707:13:23;;;4700:43;-1:-1:-1;;;4759:13:23;;;4752:41;-1:-1:-1;;;4809:13:23;;;4802:42;-1:-1:-1;;;4860:13:23;;;4853:38;1223:21;4992:13;;;1211:34;-1:-1:-1;;;1261:12:23;;;960:28;1004:12;;;1092:16;2861:264:16;-1:-1:-1;3205:310:16;-1:-1:-1;;1124:11:23;;3600:488:16;;;-1:-1:-1;;3600:488:16;;;;;;;;;;-1:-1:-1;;;3600:488:16;4176:248;;6894:28:23;-1:-1:-1;;;6938:12:23;;;6931:36;-1:-1:-1;;;6983:12:23;;;6976:39;-1:-1:-1;;;7031:12:23;;;7024:40;7094:27;7080:12;;;7073:49;-1:-1:-1;;;7138:12:23;;;7131:25;3600:488:16;-1:-1:-1;4126:24:16;;7172:12:23;;4176:248:16;;;-1:-1:-1;;4176:248:16;;;;;;;;;;4153:281;;4176:248;4153:281;;;;4467:30;;;;;;4444:53;;4538:38;;;;;;4507:69;;4153:281;-1:-1:-1;4627:162:16;;4661:32;;4548:27;;4477:19;;4627:162;;:::i;:::-;;;;;;;-1:-1:-1;;4627:162:16;;;;;;4604:195;;4627:162;4604:195;;;;4586:213;;4821:13;4809:25;;;;4845:43;;;;-1:-1:-1;4898:25:16;;;-1:-1:-1;4933:31:16;;;6457:187;;;7454:25:23;;;7495:18;;;7488:34;;;-1:-1:-1;7538:18:23;;7531:34;;;7581:18;;;7574:34;;;;6625:4:16;7624:19:23;;;7617:61;6457:187:16;;;;;;;;;;7426:19:23;;;6457:187:16;;;6434:220;;;;;4975:144;;-1:-1:-1;;;;;;5266:43:16;;;;;;;5368:44;;;-1:-1:-1;;;5368:44:16;;;;5225:17;;-1:-1:-1;;;;;5266:43:16;;;5368:42;;:44;;;;;;;;;;;5266:43;5368:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5320:102:16;;-1:-1:-1;;964:1:16;5496:16;:31;-1:-1:-1;1503:39712:13;;-1:-1:-1;;;;;;;;;1503:39712:13;14:290:23;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:23;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:23:o;309:245::-;388:6;396;449:2;437:9;428:7;424:23;420:32;417:52;;;465:1;462;455:12;417:52;-1:-1:-1;;488:16:23;;544:2;529:18;;;523:25;488:16;;523:25;;-1:-1:-1;309:245:23:o;559:336::-;600:3;638:5;632:12;662:1;672:128;686:6;683:1;680:13;672:128;;;783:4;768:13;;;764:24;;758:31;745:11;;;738:52;701:12;672:128;;;818:6;815:1;812:13;809:48;;;853:1;844:6;839:3;835:16;828:27;809:48;-1:-1:-1;873:16:23;;;;;559:336;-1:-1:-1;;559:336:23:o;1284:333::-;1505:3;1530:81;1555:55;1580:29;1605:3;1597:6;1580:29;:::i;:::-;1572:6;1555:55;:::i;:::-;1547:6;1530:81;:::i;:::-;1523:88;1284:333;-1:-1:-1;;;;;1284:333:23:o;7195:489::-;1503:39712:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1503:39712:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41077:136;;;;;;;;;;-1:-1:-1;41201:5:13;;;;;;;;;;;-1:-1:-1;;;41201:5:13;;;;41077:136;;;;41201:5;41077:136;:::i;:::-;;;;;;;;40093:206;;;;;;;;;;-1:-1:-1;40093:206:13;;;;;:::i;:::-;-1:-1:-1;;;;;40276:16:13;40192:7;40276:16;;;:7;:16;;;;;;;40093:206;;;;39637:25:23;;;39625:2;39610:18;40093:206:13;39491:177:23;39312:601:13;;;;;;;;;;-1:-1:-1;39312:601:13;;;;;:::i;:::-;39432:16;39659:23;;;:12;:23;;;;;;;;;39626:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;39626:56:13;;;;;;;;;;;-1:-1:-1;;;39626:56:13;;;;;;;;;;;;;;;;;39312:601;;;;;39319:14:23;;39312:22;39294:41;;39378:14;;39371:22;39366:2;39351:18;;39344:50;39410:18;;;39403:34;39468:2;39453:18;;39446:34;39281:3;39266:19;39312:601:13;39075:411:23;31408:1072:13;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;37206:333::-;;;;;;;;;;;;;:::i;37713:712::-;;;;;;;;;;-1:-1:-1;37713:712:13;;;;;:::i;:::-;;:::i;34990:1961::-;;;;;;;;;;-1:-1:-1;34990:1961:13;;;;;:::i;:::-;;:::i;:::-;;;39048:14:23;;39041:22;39023:41;;39011:2;38996:18;34990:1961:13;38883:187:23;27618:1111:13;;;;;;:::i;:::-;;:::i;12011:567::-;;;;;;:::i;:::-;;:::i;15009:524::-;;;;;;:::i;:::-;;:::i;18770:1306::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;40604:351::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;3787:6914::-;;;;;;:::i;:::-;;:::i;24683:1188::-;;;;;;:::i;:::-;;:::i;32798:1701::-;;;;;;;;;;-1:-1:-1;32798:1701:13;;;;;:::i;:::-;;:::i;31408:1072::-;31710:37;31761:39;1008:1:16;2636:16:18;;:28;2632:84;;;2687:18;;-1:-1:-1;;;2687:18:18;;;;;;;;;;;2632:84;1008:1:16::1;2361:16:18;:27:::0;;;31935:79:13::2;31986:14:::0;31935:33:::2;:79::i;:::-;31881:133:::0;-1:-1:-1;32106:233:13::2;32154:14:::0;31881:133;32106:233:::2;32211:17:::0;;32106:233:::2;:::i;:::-;32242:4;32308:14;:21;32106:34;:233::i;:::-;32420:53;32443:15;32460:12;;32420:22;:53::i;:::-;964:1:16::1;2409:16:18;:31:::0;32413:60:13;;;;-1:-1:-1;31408:1072:13;-1:-1:-1;;;;;;;31408:1072:13:o;37206:333::-;37302:16;1008:1:16;2636:16:18;;:28;2632:84;;;2687:18;;-1:-1:-1;;;2687:18:18;;;;;;;;;;;2632:84;37416:10:13::1;37408:19;::::0;;;:7:::1;:19;::::0;;;;37406:21;;37408:19;;;37406:21:::1;::::0;::::1;:::i;:::-;::::0;;;;-1:-1:-1;37494:38:13::1;::::0;39637:25:23;;;37406:21:13;;-1:-1:-1;37521:10:13::1;::::0;37494:38:::1;::::0;39625:2:23;39610:18;37494:38:13::1;;;;;;;37206:333:::0;:::o;37713:712::-;37829:7;37967:451;37994:389;;;;;;;;38027:5;:13;;;-1:-1:-1;;;;;37994:389:13;;;;;38058:5;:10;;;-1:-1:-1;;;;;37994:389:13;;;;;38086:5;:11;;;37994:389;;;;38115:5;:19;;;37994:389;;;;38152:5;:15;;;37994:389;;;;;;;;:::i;:::-;;;;;38185:5;:15;;;37994:389;;;;38218:5;:13;;;37994:389;;;;38249:5;:14;;;37994:389;;;;38281:5;:10;;;37994:389;;;;38309:5;:16;;;37994:389;;;;38343:5;:19;;;:26;37994:389;;;38397:5;:11;;;37967:13;:451::i;:::-;37960:458;37713:712;-1:-1:-1;;37713:712:13:o;34990:1961::-;35103:4;1008:1:16;2636:16:18;;:28;2632:84;;;2687:18;;-1:-1:-1;;;2687:18:18;;;;;;;;;;;2632:84;35173:17:13::1;::::0;35323:6;35173:17;35383:1540:::1;35407:11;35403:1;:15;35383:1540;;;35474:20;35497:6;;35504:1;35497:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;35474:32:::0;-1:-1:-1;35567:40:13::1;35610:16;35474:32:::0;;35610:16:::1;:::i;:::-;35567:59:::0;-1:-1:-1;35705:23:13::1;;::::0;::::1;35567:59:::0;35705:23:::1;:::i;:::-;35695:33:::0;-1:-1:-1;35831:94:13::1;;35896:15:::0;35831:94:::1;:::i;:::-;:47;:94::i;:::-;36011:30;36044:23:::0;;;:12:::1;:23;::::0;;;;;;;36011:56;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;;;::::0;;::::1;::::0;::::1;;;;::::0;;::::1;::::0;;;;-1:-1:-1;;;;;36011:56:13;;::::1;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;36011:56:13;;::::1;;::::0;;;;35819:106;;-1:-1:-1;36154:234:13::1;::::0;35819:106;;36011:56;;:30;36154:18:::1;:234::i;:::-;-1:-1:-1::0;36470:23:13;;36465:448:::1;;36563:53;36580:7:::0;36589:9;36600:15:::1;;::::0;::::1;:5:::0;:15:::1;:::i;:::-;36563:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;36563:16:13::1;::::0;-1:-1:-1;;;36563:53:13:i:1;:::-;36702:23;::::0;;;36740:4:::1;36702:23;::::0;;;;;;;;:42;;-1:-1:-1;;36702:42:13::1;::::0;;::::1;::::0;;;36877:20:::1;::::0;;;;;::::1;;:::i;:::-;-1:-1:-1::0;;;;;36842:56:13::1;36868:7;-1:-1:-1::0;;;;;36842:56:13::1;;36857:9;36842:56;;;;39637:25:23::0;;39625:2;39610:18;;39491:177;36842:56:13::1;;;;;;;;36465:448;35425:1498;;;35420:3;;;;:::i;:::-;;;35383:1540;;;-1:-1:-1::0;36940:4:13::1;::::0;34990:1961;-1:-1:-1;;;;;;34990:1961:13:o;27618:1111::-;27843:37;27894:39;1008:1:16;2636:16:18;;:28;2632:84;;;2687:18;;-1:-1:-1;;;2687:18:18;;;;;;;;;;;2632:84;1008:1:16::1;2361:16:18;:27:::0;;;28046:54:13::2;28084:6:::0;;28046:24:::2;:54::i;:::-;28006:94;;28168:51;28222:79;28273:14;28222:33;:79::i;:::-;28168:133:::0;-1:-1:-1;28312:276:13::2;28360:14:::0;28168:133;28440:1:::2;28417:25;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28417:25:13::2;;;;;;;;;;;;;;;;;28491:4;28557:14;:21;28312:34;:276::i;:::-;28669:53;28692:15;28709:12;;28669:22;:53::i;12011:567::-:0;12191:4;1008:1:16;2636:16:18;;:28;2632:84;;;2687:18;;-1:-1:-1;;;2687:18:18;;;;;;;;;;;2632:84;1008:1:16::1;2361:16:18;:27:::0;12321:193:13::2;12367:30;12391:5:::0;12367:23:::2;:30::i;:::-;12411:25;::::0;;12434:1:::2;12411:25:::0;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12411:25:13::2;;;;;;;;;;;;;;;;;12485:19;12321:32;:193::i;:::-;964:1:16::1;2409:16:18;:31:::0;12314:200:13;12011:567;-1:-1:-1;;;12011:567:13:o;15009:524::-;15242:4;1008:1:16;2636:16:18;;:28;2632:84;;;2687:18;;-1:-1:-1;;;2687:18:18;;;;;;;;;;;2632:84;1008:1:16::1;2361:16:18;:27:::0;15320:149:13::2;;15370:13:::0;15320:149:::2;:::i;:::-;;15401:17:::0;;15320:149:::2;:::i;:::-;15436:19;15320:32;:149::i;:::-;964:1:16::1;2409:16:18;:31:::0;15301:168:13;15009:524;-1:-1:-1;;;;;15009:524:13:o;18770:1306::-;19162:29;19205:37;19256:39;1008:1:16;2636:16:18;;:28;2632:84;;;2687:18;;-1:-1:-1;;;2687:18:18;;;;;;;;;;;2632:84;1008:1:16::1;2361:16:18;:27:::0;;;19408:54:13::2;19446:6:::0;;19408:24:::2;:54::i;:::-;19368:94;;19528:51;19582:79;19633:14;19582:33;:79::i;:::-;19528:133:::0;-1:-1:-1;19732:337:13::2;19781:14:::0;19528:133;19869:1:::2;19846:25;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19846:25:13::2;;;;;;;;;;;;;;;;;19924:17;;19959:25;;20002:19;20039:16;19732:31;:337::i;:::-;964:1:16::1;2409:16:18;:31:::0;19713:356:13;;;;-1:-1:-1;19713:356:13;;-1:-1:-1;18770:1306:13;-1:-1:-1;;;;;;;;;;;18770:1306:13:o;40604:351::-;40836:8;;;;;;;;;;;;-1:-1:-1;;;40836:8:13;;;;40739:23;;40872:18;:16;:18::i;:::-;40604:351;;40928:19;;-1:-1:-1;40604:351:13;-1:-1:-1;40604:351:13:o;3787:6914::-;3963:4;1008:1:16;2636:16:18;;:28;2632:84;;;2687:18;;-1:-1:-1;;;2687:18:18;;;;;;;;;;;2632:84;1008:1:16::1;2361:16:18;:27:::0;;;4159:1:13::2;4130:25;::::0;;;::::2;::::0;::::2;;:::i;:::-;4124:32;;;;;;;;:::i;:::-;:36;;;;:::i;:::-;4091:79;;;;;;;;;;:::i;:::-;4063:107:::0;-1:-1:-1;4181:19:13::2;4248:1;4219:25;::::0;;;::::2;::::0;::::2;;:::i;:::-;4213:32;;;;;;;;:::i;:::-;:36;;;;:::i;:::-;4203:47;;;;;;;;;;:::i;:::-;4181:69;;4342:37;4419:1;4410:5;4404:12;;;;;;;;:::i;:::-;:16;;;:24;;4427:1;4404:24;;;4423:1;4404:24;4382:56;;;;;;;;;;:::i;:::-;4342:96:::0;-1:-1:-1;4535:25:13::2;4564:9;:14:::0;;::::2;::::0;:81:::2;;-1:-1:-1::0;4630:15:13::2;4598:28;:47;;;;;;;;:::i;:::-;;4564:81;4563:189;;;-1:-1:-1::0;4667:9:13::2;:14:::0;:84;::::2;;;-1:-1:-1::0;4737:14:13::2;4705:28;:46;;;;;;;;:::i;:::-;;4667:84;4535:217;;4922:20;4917:93;;4969:26;::::0;-1:-1:-1;;;4969:26:13;;4985:9:::2;4969:26;::::0;::::2;39637:25:23::0;39610:18;;4969:26:13::2;;;;;;;;4917:93;4449:571;5110:33;5161:1;5152:5;5146:12;;;;;;;;:::i;:::-;:16;;;:96;;5213:29;;::::0;::::2;:10:::0;:29:::2;:::i;:::-;5146:96;;;5177:21;::::0;;;::::2;::::0;::::2;;:::i;:::-;5110:132;;5253:25;5296:1;5287:5;5281:12;;;;;;;;:::i;:::-;:16;;;:223;;5380:35;5371:5;:44;;;;;;;;:::i;:::-;;:119;;5475:15;5281:223;;5371:119;5438:14;5281:223;;;5336:1;5327:5;5321:12;;;;;;;;:::i;:::-;:16;;;;:::i;:::-;5312:26;;;;;;;;;;:::i;:::-;5253:251;;5515:24;5557:1;5548:5;5542:12;;;;;;;;:::i;:::-;:16;;;:202;;5635:1;5626:5;5620:12;;;;;;;;:::i;:::-;:16;;;:110;;5719:5;5713:12;;;;;;;;:::i;:::-;:16;::::0;5728:1:::2;5713:16;:::i;:::-;5704:26;;;;;;;;;;:::i;:::-;5542:202;;5620:110;5674:5;5668:12;;;;;;;;:::i;5542:202::-;5573:14;5542:202;5515:229;;5832:233;5882:10;5906:9;5929:16;5959:28;6001:25;6040:15;5832:36;:233::i;:::-;6138:23;6164:18;::::0;;;::::2;::::0;::::2;;:::i;:::-;6138:44;;6260:18;6296:1;6287:5;6281:12;;;;;;;;:::i;:::-;:16;;;:104;;6357:10;:28;;;6281:104;;;6312:10;:30;;;6281:104;6260:125:::0;-1:-1:-1;6456:33:13::2;6447:5;:42;;;;;;;;:::i;:::-;;6443:4230;;;6585:233;6618:21;::::0;;;::::2;::::0;::::2;;:::i;:::-;6657:7;6682:10;6710;:26;;;6754:10;:22;;;6794:10;6585:15;:233::i;:::-;6914:67;6938:10;:30;;;6970:10;6914:23;:67::i;:::-;6443:4230;;;7011:34;7002:5;:43;;;;;;;;:::i;:::-;;6998:3675;;;7142:234;7176:21;::::0;;;::::2;::::0;::::2;;:::i;:::-;7215:7;7240:10;7268;:26;;;7312:10;:22;;;7352:10;7142:16;:234::i;6998:3675::-;7569:35;7560:5;:44;;;;;;;;:::i;:::-;;7556:3117;;;7700:233;7733:21;::::0;;;::::2;::::0;::::2;;:::i;7700:233::-;8016:296;8059:10;8087:7:::0;8112:29:::2;;::::0;::::2;:10:::0;:29:::2;:::i;:::-;8159:10;:30;;;8207:10;8235:5;8016:25;:296::i;7556:3117::-;8342:36;8333:5;:45;;;;;;;;:::i;:::-;;8329:2344;;;8475:234;8509:21;::::0;;;::::2;::::0;::::2;;:::i;8329:2344::-;9118:35;9109:5;:44;;;;;;;;:::i;:::-;;9105:1568;;;9249:257;9282:29;;::::0;::::2;:10:::0;:29:::2;:::i;:::-;9329:10;9357:7;9382:10;:34;;;9434:10;:30;;;9482:10;9249:15;:257::i;:::-;9589:279;9632:7:::0;9657:10:::2;9685:21;::::0;;;::::2;::::0;::::2;;:::i;:::-;9724:10;:22;;;9764:10;9792:4;9589:25;:279::i;9105:1568::-;10042:258;10076:29;;::::0;::::2;:10:::0;:29:::2;:::i;:::-;10123:10;10151:7;10176:10;:34;;;10228:10;:30;;;10276:10;10042:16;:258::i;:::-;10383:279;10426:7:::0;10451:10:::2;10479:21;::::0;;;::::2;::::0;::::2;;:::i;10383:279::-;10690:4;10683:11;;;;;;;;;;964:1:16::1;2409:16:18;:31:::0;3787:6914:13;;-1:-1:-1;3787:6914:13:o;24683:1188::-;25152:29;25195:37;25246:39;1008:1:16;2636:16:18;;:28;2632:84;;;2687:18;;-1:-1:-1;;;2687:18:18;;;;;;;;;;;2632:84;1008:1:16::1;2361:16:18;:27:::0;;;25420:79:13::2;25471:14:::0;25420:33:::2;:79::i;:::-;25366:133;;25570:294;25619:14;25651:15;25684:17;;25570:294;;;;;:::i;:::-;25719:17;;25754:25;;25797:19;25834:16;25570:31;:294::i;32798:1701::-:0;32919:4;1008:1:16;2636:16:18;;:28;2632:84;;;2687:18;;-1:-1:-1;;;2687:18:18;;;;;;;;;;;2632:84;32939:15:13::1;::::0;33084:6;32939:15;33144:1328:::1;33168:11;33164:1;:15;33144:1328;;;33235:30;33268:6;;33275:1;33268:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;33235:42:::0;-1:-1:-1;33302:13:13::1;;::::0;::::1;33235:42:::0;33302:13:::1;:::i;:::-;33292:23:::0;-1:-1:-1;33336:10:13::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;33329:17:::0;-1:-1:-1;33434:10:13::1;-1:-1:-1::0;;;;;33434:21:13;::::1;;::::0;::::1;::::0;:43:::1;;-1:-1:-1::0;33459:10:13::1;-1:-1:-1::0;;;;;33459:18:13;::::1;;;33434:43;33430:107;;;33504:18;;-1:-1:-1::0;;;33504:18:13::1;;;;;;;;;;;33430:107;33626:17;33646:499;33677:425;;;;;;;;33714:7;-1:-1:-1::0;;;;;33677:425:13::1;;;;;33743:4;-1:-1:-1::0;;;;;33677:425:13::1;;;;;33769:5;:11;;;;;;;;:::i;:::-;33677:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;-1:-1:-1::0;;;33677:425:13;;;-1:-1:-1;;33677:425:13::1;;33802:19;;::::0;::::1;:5:::0;:19:::1;:::i;:::-;33677:425;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;-1:-1:-1::0;;;33677:425:13;;;-1:-1:-1;;33677:425:13::1;;33843:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;33677:425;;;;;;;;:::i;:::-;;;;;33880:5;:15;;;33677:425;;;;33917:5;:13;;;33677:425;;;;33952:5;:14;;;33677:425;;;;33988:5;:10;;;33677:425;;;;34020:5;:16;;;33677:425;;;;34058:5;:19;;;;;;;;:::i;:::-;33677:425:::0;;;-1:-1:-1;34120:11:13::1;::::0;::::1;;33646:13;:499::i;:::-;34265:5;34227:23:::0;;;:12:::1;:23;::::0;;;;;;:43;;-1:-1:-1;;34284:42:13;34227:43:::1;34284:42;::::0;;34421:40;33626:519;;-1:-1:-1;;;;;;34421:40:13;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;33626:519;39637:25:23;;39625:2;39610:18;;39491:177;34421:40:13::1;;;;;;;;33186:1286;;33181:3;;;;:::i;:::-;;;33144:1328;;49621:768:20::0;49888:21;;49740:39;;49888:21;-1:-1:-1;;;;;50008:33:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50008:33:20;;-1:-1:-1;;50008:33:20;;;;;;;;;;;;49990:51;;50099:9;50094:207;50118:11;50114:1;:15;50094:207;;;50248:42;50272:14;50287:1;50272:17;;;;;;;;:::i;:::-;;;;;;;50248:23;:42::i;:::-;50227:15;50243:1;50227:18;;;;;;;;:::i;:::-;;;;;;:63;;;;50131:3;;;;:::i;:::-;;;50094:207;;;;50360:22;49621:768;;;:::o;38616:8177:18:-;38983:21;;38961:19;38983:21;-1:-1:-1;;;;;39110:26:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39110:26:18;;39079:57;;39188:9;39183:6385;39207:11;39203:1;:15;39183:6385;;;39282:34;39319:14;39334:1;39319:17;;;;;;;;:::i;:::-;;;;;;;39282:54;;39395:36;39434:15;39450:1;39434:18;;;;;;;;:::i;:::-;;;;;;;39395:57;;39546:16;39566:1;39546:21;39542:383;;;39690:1;39664:23;;;;:27;;;39787:24;;:28;39902:8;;39542:383;40032:17;40067;40102:19;40138:191;40189:13;40224:17;40263:15;40300:11;40138:29;:191::i;:::-;40014:315;;;;;;40425:9;40438:1;40425:14;40421:376;;;-1:-1:-1;;40562:1:18;40536:23;;;;:27;;;-1:-1:-1;40659:24:18;;:28;40774:8;;40421:376;40888:9;40871:11;40883:1;40871:14;;;;;;;;:::i;:::-;;;;;;;;;;:26;40969:18;;;;:::i;:::-;41086:24;;:34;;;;41230:32;;;;;40969:18;;-1:-1:-1;41086:34:18;-1:-1:-1;41066:17:18;;41230:44;;41086:34;;41230:44;:::i;:::-;41211:63;-1:-1:-1;41366:15:18;41384:27;41402:9;41384:15;:27;:::i;:::-;41366:45;-1:-1:-1;41503:17:18;41523:18;41366:45;41523:8;:18;:::i;:::-;41655:24;;:30;;;41503:38;;-1:-1:-1;41628:24:18;41758:1628;41782:5;:12;41778:1;:16;41758:1628;;;41863:26;41892:5;41898:1;41892:8;;;;;;;;:::i;:::-;;;;;;;41863:37;;41990:17;42010:135;42044:9;42075:11;42108:9;:19;;;42010:12;:135::i;:::-;41990:155;;42268:9;:19;;;42243:9;:21;;;:44;42239:499;;;42385:21;;;:33;;;42239:499;;;42566:153;42604:9;42639:11;42676:9;:21;;;42566:12;:153::i;:::-;42542:21;;;:177;42239:499;42832:19;;;:31;;;43019:21;;;;42977:253;;42854:9;43103:7;43132:9;43163:8;43193:5;42977:20;:253::i;:::-;42953:21;;;:277;;;43312:25;;;;:28;;43338:1;;43312:28;;;;;;:::i;:::-;;;;;;;:35;;:59;;;;;41801:1585;;41796:3;;;;:::i;:::-;;;41758:1628;;;-1:-1:-1;43537:24:18;;:38;;;43476:40;43670:1888;43694:13;:20;43690:1;:24;43670:1888;;;43791:42;43837:13;43851:1;43837:16;;;;;;;;:::i;:::-;;;;;;;43791:63;;43941:17;43961:143;43995:9;44026:11;44059:17;:27;;;43961:12;:143::i;:::-;43941:163;;44256:17;:27;;;44223:17;:29;;;:60;44198:574;;;44398:29;;;:41;;;44198:574;;;44592:161;44630:9;44665:11;44702:17;:29;;;44592:12;:161::i;:::-;44560:29;;;:193;44198:574;44866:27;;;:39;;;45101:29;;;;45055:294;;44896:9;45209:7;45242:9;45277:8;45311:4;45055:20;:294::i;:::-;45001:29;;;:366;;;45452:28;;;;:31;;45481:1;;45452:31;;;;;;:::i;:::-;;;;;;;:38;;:91;;;;;43721:1837;;43716:3;;;;:::i;:::-;;;43670:1888;;;;39225:6343;;;;;;;;;;;39183:6385;39220:3;;;:::i;:::-;;;39183:6385;;;;45643:59;45667:15;45684:17;45643:23;:59::i;:::-;45792:17;45812:15;:41;;45843:10;45812:41;;;45838:1;45812:41;45792:61;;45985:9;45980:807;46004:11;46000:1;:15;45980:807;;;46131:1;46123:10;;46105:11;46117:1;46105:14;;;;;;;;:::i;:::-;;;;;;;:28;46101:75;;;46153:8;;46101:75;46252:38;46311:14;46326:1;46311:17;;;;;;;;:::i;:::-;;;;;;;:28;;;46252:101;;46368:29;46400:15;46416:1;46400:18;;;;;;;;:::i;:::-;;;;;;;:29;;;46368:61;;46444:35;46482:15;46498:1;46482:18;;;;;;;;:::i;:::-;;;;;;;:49;;;46444:87;;46656:15;:20;;;-1:-1:-1;;;;;46551:225:18;46615:15;:23;;;-1:-1:-1;;;;;46551:225:18;;46583:11;46595:1;46583:14;;;;;;;;:::i;:::-;;;;;;;46694:9;46721:10;46749:13;46551:225;;;;;;;;;:::i;:::-;;;;;;;;46022:765;;;45980:807;46017:3;;;:::i;:::-;;;45980:807;;;;38888:7905;;;38616:8177;;;;;:::o;47955:2874::-;48134:37;;48347:12;48319:25;48347:12;-1:-1:-1;;;;;48489:34:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;48457:66;;48582:31;48675:9;48670:876;48694:17;48690:1;:21;48670:876;;;48786:32;48821:12;;48834:1;48821:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;48786:50;-1:-1:-1;48923:26:18;48952:162;48987:15;49020:27;48786:50;;49020:27;:::i;:::-;49065:35;;;;:11;:35;:::i;:::-;48952:17;:162::i;:::-;48923:191;;49234:9;:17;;;-1:-1:-1;;;;;49206:45:18;:9;:14;;;:24;;;-1:-1:-1;;;;;49206:45:18;;49202:334;;;49327:28;49354:1;49327:28;;:::i;:::-;;;49202:334;;;49512:9;49470:10;49481:27;49485:23;49481:1;:27;:::i;:::-;49470:39;;;;;;;;:::i;:::-;;;;;;:51;;;;49202:334;48718:828;;48713:3;;;;:::i;:::-;;;48670:876;;;-1:-1:-1;49622:28:18;;49618:1088;;49666:23;49692:59;49728:23;49692:17;:59;:::i;:::-;49666:85;;49765:37;49838:15;-1:-1:-1;;;;;49805:62:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;49765:102;;49934:9;49929:116;49953:15;49949:1;:19;49929:116;;;50017:10;50028:1;50017:13;;;;;;;;:::i;:::-;;;;;;;49993:18;50012:1;49993:21;;;;;;;;:::i;:::-;;;;;;:37;;;;49970:3;;;;:::i;:::-;;;49929:116;;;;50247:118;50300:15;50333:18;50247:35;:118::i;:::-;50143:222;;-1:-1:-1;50143:222:18;-1:-1:-1;49618:1088:18;;-1:-1:-1;;;49618:1088:18;;50585:110;50638:15;50671:10;50585:35;:110::i;:::-;50481:214;;-1:-1:-1;50481:214:18;-1:-1:-1;;49618:1088:18;50778:44;;;47955:2874;;;;;;:::o;9425:1859:19:-;9548:17;9658:28;9716:15;:21;;;:28;-1:-1:-1;;;;;9689:65:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9689:65:19;;9658:96;;9764:36;9830:15;:47;;;-1:-1:-1;;;;;9803:84:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9803:84:19;;9764:123;;9952:9;9947:205;9971:15;:21;;;:28;9967:1;:32;9947:205;;;10101:40;10116:15;:21;;;10138:1;10116:24;;;;;;;;:::i;:::-;;;;;;;10101:14;:40::i;:::-;10084:11;10096:1;10084:14;;;;;;;;:::i;:::-;;;;;;;;;;:57;10001:3;;;:::i;:::-;;;9947:205;;;;10237:9;10219:332;10268:15;:47;;;10264:1;:51;10219:332;;;10454:86;10494:15;:29;;;10524:1;10494:32;;;;;;;;:::i;:::-;;;;;;;10454:22;:86::i;:::-;10429:19;10449:1;10429:22;;;;;;;;:::i;:::-;;;;;;;;;;:111;10329:3;;;:::i;:::-;;;10219:332;;;;10709:15;10746;:23;;;10791:15;:20;;;10860:11;10843:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;10833:40;;;;;;10922:19;10905:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;10895:48;;;;;;10965:15;:25;;;11012:15;:25;;;11059:15;:23;;;11104:15;:24;;;11150:15;:20;;;11192:15;:26;;;11240:5;10677:586;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10650:627;;;;;;10631:646;;;;9425:1859;;;;:::o;11768:587::-;11902:7;12002:187;12082:15;:29;;;:36;12132:15;:47;;;12002:66;:187::i;:::-;12323:23;;-1:-1:-1;;;;;12315:32:19;;;;;:7;:32;;;;;;12284:64;;12298:15;;12284:13;:64::i;39738:1454:20:-;39922:10;40005:11;:23;;;40001:301;;;40121:15;40117:88;;;40163:27;;-1:-1:-1;;;40163:27:20;;;;;39637:25:23;;;39610:18;;40163:27:20;39491:177:23;40117:88:20;-1:-1:-1;40286:5:20;40279:12;;40001:301;40366:21;;;;-1:-1:-1;;;;;40366:26:20;;40362:748;;40492:15;40488:612;;;40614:31;;-1:-1:-1;;;40614:31:20;;;;;39637:25:23;;;39610:18;;40614:31:20;39491:177:23;40488:612:20;40773:11;:23;;;-1:-1:-1;;;;;40748:48:20;:11;:21;;;-1:-1:-1;;;;;40748:48:20;;40744:356;;40897:15;40893:98;;;40943:29;;-1:-1:-1;;;40943:29:20;;;;;39637:25:23;;;39610:18;;40943:29:20;39491:177:23;40744:356:20;-1:-1:-1;41181:4:20;39738:1454;;;;;;;:::o;3319:2884:19:-;-1:-1:-1;;;;;3532:21:19;;3543:10;3532:21;3528:58;;;3319:2884;;;:::o;3528:58::-;3676:14;3693:42;3705:18;:16;:18::i;:::-;3725:9;43798:60:20;;-1:-1:-1;;;43798:60:20;;;31429:51:23;31496:11;;;31489:27;;;31532:12;;;31525:28;;;43738:13:20;;31569:12:23;;43798:60:20;;;;;;;;;;;;43775:93;;;;;;43767:101;;43626:249;;;;;3693:42:19;3676:59;;3799:9;3818;3837:7;3939:9;:16;3959:2;3939:22;3935:1736;;;-1:-1:-1;;;4287:4:19;4272:20;;4266:27;4418:4;4403:20;;4397:27;-1:-1:-1;;;;;4521:37:19;;;4668:3;4664:12;4678:2;4660:21;3935:1736;;;4795:9;:16;4815:2;4795:22;4791:880;;;-1:-1:-1;;;4966:4:19;4951:20;;4945:27;5047:4;5032:20;;5026:27;5135:4;5120:20;;5114:27;5111:1;5106:36;5254:2;5249:7;;;;;:18;;;5260:1;:7;;5265:2;5260:7;;5249:18;5245:80;;;5294:16;;-1:-1:-1;;;5294:16:19;;50850:4:23;50838:17;;5294:16:19;;;50820:36:23;50793:18;;5294:16:19;50678:184:23;5245:80:19;4791:880;;;5514:54;5541:7;5550:6;5558:9;5514:26;:54::i;:::-;5654:7;;;;3319:2884;;;:::o;4791:880::-;5778:26;;;5761:14;5778:26;;;;;;;;;49178:25:23;;;49251:4;49239:17;;49219:18;;;49212:45;;;;49273:18;;;49266:34;;;49316:18;;;49309:34;;;5778:26:19;;49150:19:23;;5778:26:19;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5778:26:19;;-1:-1:-1;;5778:26:19;;;-1:-1:-1;;;;;;;5856:20:19;;5852:345;;5899:18;;-1:-1:-1;;;5899:18:19;;;;;;;;;;;5852:345;6029:7;-1:-1:-1;;;;;6019:17:19;:6;-1:-1:-1;;;;;6019:17:19;;6015:182;;6132:54;6159:7;6168:6;6176:9;6132:26;:54::i;:::-;3449:2754;;;;;3319:2884;;;:::o;46266:736:20:-;46372:37;46522:6;;-1:-1:-1;;;;;46633:32:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;46616:49;;46723:9;46718:198;46742:11;46738:1;:15;46718:198;;;46871:34;46895:6;;46902:1;46895:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;46871:23;:34::i;:::-;46851:14;46866:1;46851:17;;;;;;;;:::i;:::-;;;;;;:54;;;;46755:3;;;;:::i;:::-;;;46718:198;;;;46974:21;46266:736;;;;:::o;45598:380::-;45700:34;;:::i;:::-;45843:128;;;;;;;;;;45870:16;:5;;:16;:::i;:::-;45843:128;;;:::i;:::-;;;;;45900:1;-1:-1:-1;;;;;45843:128:20;;;;;45915:1;-1:-1:-1;;;;;45843:128:20;;;;;45930:5;:15;;;;;;;;:::i;:::-;45843:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;45843:128:20;;;-1:-1:-1;;45843:128:20;;;;;;;;;;;;;;;;;-1:-1:-1;45827:144:20;45598:380;-1:-1:-1;;45598:380:20:o;26662:1839:18:-;26862:4;26946:33;27078:17;27109:21;27144:23;27180:165;27227:13;27258:17;27293:4;27315:16;27180:29;:165::i;:::-;27459:22;;;27479:1;27459:22;;;;;;;;;27064:281;;-1:-1:-1;27064:281:18;;-1:-1:-1;27064:281:18;-1:-1:-1;27419:37:18;;27459:22;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;27419:62;;27511:13;27491:14;27506:1;27491:17;;;;;;;;:::i;:::-;;;;;;:33;;;;27614:66;27646:14;27662:17;27614:31;:66::i;:::-;27767:38;27808:14;27823:1;27808:17;;;;;;;;:::i;:::-;;;;;;;:28;;;27767:69;;27925:36;27964:198;28008:15;28037:13;28064:15;28093;:26;;;28133:19;27964:30;:198::i;:::-;27925:237;;28337:15;:20;;;-1:-1:-1;;;;;28249:223:18;28300:15;:23;;;-1:-1:-1;;;;;28249:223:18;;28277:9;28371:10;28395:14;:25;;;28434:14;:28;;;28249:223;;;;;;;;;:::i;:::-;;;;;;;;28490:4;28483:11;;;;;;;;;26662:1839;;;;;;:::o;55533:1418::-;55977:29;56020:37;56071:39;56215:233;56263:14;56291:15;56320:17;56351:5;56422:16;56215:34;:233::i;:::-;56641:171;56684:15;56641:171;56713:17;;56641:171;:::i;:::-;;56744:25;;56641:171;:::i;:::-;56783:19;56641:29;:171::i;:::-;56538:274;;;;-1:-1:-1;56538:274:18;;-1:-1:-1;55533:1418:18;-1:-1:-1;;;;;;;;;;55533:1418:18:o;7258:291:19:-;7309:7;7379:9;7362:13;:26;:180;;-1:-1:-1;6457:187:16;;;7458:24:19;6457:187:16;;;;47117:25:23;;;;7500:10:19;47158:18:23;;;47151:34;7528:13:19;47201:18:23;;;47194:34;6586:13:16;47244:18:23;;;47237:34;6625:4:16;47287:19:23;;;;47280:61;;;;6457:187:16;;;;;;;;;;47089:19:23;;;;6457:187:16;;;6434:220;;;;;;7258:291:19:o;7362:180::-;-1:-1:-1;7403:17:19;;7258:291::o;4592:10966:18:-;4982:59;4994:10;:20;;;5016:10;:18;;;5036:4;4982:11;:59::i;:::-;;5326:40;:38;:40::i;:::-;5458:190;5538:31;;;;:10;:31;:::i;:::-;:42;;-1:-1:-1;5579:1:18;5538:42;:::i;:::-;5594:10;:44;;;5458:66;:190::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5794:48:18;5845:193;;;;;;;;5879:9;5845:193;;;;;;;;:::i;:::-;;;;;5902:16;5845:193;;;;;;;;:::i;:::-;;;;;5932:28;5845:193;;;;;;;;:::i;:::-;;;;;5974:25;-1:-1:-1;;;;;5845:193:18;;;;;6013:15;5845:193;;;;;;;;:::i;:::-;;;5794:244;-1:-1:-1;6175:35:18;6245:31;;;;:10;:31;:::i;:::-;:42;;-1:-1:-1;6286:1:18;6245:42;:::i;:::-;-1:-1:-1;;;;;6213:84:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;6391:18:18;;;6407:1;6391:18;;;;;;;;;6175:122;;-1:-1:-1;6364:24:18;;6391:18;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;7542:28:18;7524:46;;7696:345;;;;;;;;;7735:37;;;;6364:45;;-1:-1:-1;;;7696:345:18;;;;;;;;;;:::i;:::-;;;;;;;;7794:29;;;;:10;:29;:::i;:::-;-1:-1:-1;;;;;7696:345:18;;;;;7845:10;:34;;;7696:345;;;;7901:10;:30;;;7696:345;;;;7953:10;:30;;;7696:345;;;;8005:10;:18;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7696:345:18;;;7626:429;-1:-1:-1;8184:48:18;:44;;;;8231:1;8184:48;:::i;:::-;-1:-1:-1;;;;;8153:93:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8153:93:18;-1:-1:-1;8124:26:18;;;;:122;;;;8381:15;;8418:33;;8473:30;;;;;8525:45;;;;;8592:36;;;;8650:34;;;;8706;;;;8349:409;;;;8473:30;;8592:36;;8650:34;;8349:409;;:::i;:::-;;;;;;;;;;;;;8322:450;;;;;;8290:6;:26;;;8317:1;8290:29;;;;;;;;:::i;:::-;;;;;;:482;;;;;8787:42;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8942:39:18;8984:296;;;;;;;;9014:20;:37;;;8984:296;;;;;;;;:::i;:::-;;;;;9069:24;:30;;;-1:-1:-1;;;;;8984:296:18;;;;;9117:24;:45;;;8984:296;;;;9180:24;:34;;;8984:296;;;;9232:24;:34;;;-1:-1:-1;;;;;8984:296:18;;;;8942:338;;9402:19;9383:13;9397:1;9383:16;;;;;;;;:::i;:::-;;;;;;:38;;;;9458:22;9436:2255;9519:10;:31;;;;;;;;:::i;:::-;:38;;9502:14;:55;9436:2255;;;9624:46;9695:10;:31;;;;;;;;:::i;:::-;9727:14;9695:47;;;;;;;:::i;:::-;;;;;;9624:136;;;;;;;;;;:::i;:::-;;;9877:291;;;;;;;;9911:20;:49;;;9877:291;;;;;;;;:::i;:::-;;;;;9982:20;:46;;;-1:-1:-1;;;;;9877:291:18;;;;;10050:1;9877:291;;;;10073:19;:26;;;9877:291;;;;10121:19;:29;;;-1:-1:-1;;;;;9877:291:18;;;;9852:316;;10326:22;10290:13;10304:14;10321:1;10304:18;;;;:::i;:::-;10290:33;;;;;;;;:::i;:::-;;;;;;:58;;;;10430:10;:44;;;10392:14;:82;10367:175;;10515:8;;;10367:175;10667:344;;;;;;;;10706:20;:49;;;10667:344;;;;;;;;:::i;:::-;;;;;10777:20;:46;;;-1:-1:-1;;;;;10667:344:18;;;;;10845:1;10667:344;;;;10868:19;:26;;;10667:344;;;;10916:19;:26;;;10667:344;;;;10964:19;:29;;;-1:-1:-1;;;;;10667:344:18;;;;10641:370;;11259:6;:15;;;11300:23;:32;;;11358:23;:29;;;11413:23;:44;;;11483:23;:35;;;11544:23;:33;;;11603:23;:33;;;11223:435;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11192:484;;;;;;11143:6;:26;;;11170:14;11187:1;11170:18;;;;:::i;:::-;11143:46;;;;;;;;:::i;:::-;;;;;;:533;;;;;9606:2085;9436:2255;9575:16;;;;:::i;:::-;;;;9436:2255;;;;12189:6;:26;;;12172:44;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12172:44:18;;;;;;;;;12145:85;;12172:44;12145:85;;;;12118:24;;;:112;12354:65;;;;12307:918;12454:10;:31;;;;;;;;:::i;:::-;:38;;12437:14;:55;12307:918;;;12559:46;12630:10;:31;;;;;;;;:::i;:::-;12662:14;12630:47;;;;;;;:::i;:::-;;;;;;12559:136;;;;;;;;;;:::i;:::-;;;12739:291;;;;;;;;12773:20;:49;;;12739:291;;;;;;;;:::i;:::-;;;;;12844:20;:46;;;-1:-1:-1;;;;;12739:291:18;;;;;12912:1;12739:291;;;;12935:19;:26;;;12739:291;;;;12983:19;:29;;;-1:-1:-1;;;;;12739:291:18;;;;12714:316;;13188:22;13152:13;13166:14;13183:1;13166:18;;;;:::i;:::-;13152:33;;;;;;;;:::i;:::-;;;;;;:58;;;;12541:684;12510:16;;;;;:::i;:::-;;;;12307:918;;;-1:-1:-1;;13381:20:18;13363:38;;-1:-1:-1;;13478:200:18;;;;;;;;;;13505:36;;;;13363:15;;-1:-1:-1;13478:200:18;;;;;;;;;;:::i;:::-;;;;;13559:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13478:200:18;;;;;13598:10;:26;;;13478:200;;;;13642:10;:22;;;13478:200;;;13449:229;;13704:9;13693:5;13699:1;13693:8;;;;;;;;:::i;:::-;;;;;;:20;;;;13801:33;:452;;;;;;;;13922:6;:15;;;13963:9;:18;;;14007:9;:15;;;14048:9;:20;;;14094:9;:16;;;14136:9;:16;;;13886:335;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13855:384;;;;;;13801:452;;;;;14379:15;14362:33;;;;;;;;:::i;:::-;;;;-1:-1:-1;;14362:33:18;;;;;;;;;14335:74;;14362:33;14335:74;;;;;;;14311:21;;;:98;-1:-1:-1;;14625:15:18;14607:33;;14674:114;14311:6;14726:10;14754:20;14674:10;:114::i;:::-;14655:16;;;:133;14936:15;;;;;;;;:::i;:::-;-1:-1:-1;;;;;14834:213:18;14900:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;14834:213:18;;14866:6;:16;;;14969:10;14997:5;15020:13;14834:213;;;;;;;;;:::i;:::-;;;;;;;;15146:192;15195:6;:16;;;15225:10;:19;;;15258:9;15281:10;:18;;;;;;;;;;:::i;:::-;15313:10;:15;;;;;;;;;;:::i;:::-;15146:35;:192::i;:::-;15459:16;;;;15411:140;;15489:18;;;;;;;;:::i;:::-;15521:20;;;;:10;:20;:::i;:::-;15411:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15411:34:18;;-1:-1:-1;;;15411:140:18:i;:::-;4891:10667;;;;4592:10966;;;;;;:::o;75814:1022::-;76060:24;76056:774;;76174:6;76184:1;76174:11;76170:86;;76212:29;;-1:-1:-1;;;76212:29:18;;;;;;;;;;;76170:86;76335:51;76358:5;76365:4;76371:2;76375:10;76335:22;:51::i;:::-;76056:774;;;76455:24;;;76477:1;76455:24;;;;;;;;;76417:34;;76455:24;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;76510:186:18;;;;;;;;;76417:63;;-1:-1:-1;76510:186:18;76543:22;76510:186;;;;;76583:5;-1:-1:-1;;;;;76510:186:18;;;;;76606:4;-1:-1:-1;;;;;76510:186:18;;;;;76628:2;-1:-1:-1;;;;;76510:186:18;;;;;76648:10;76510:186;;;;76676:6;76510:186;;;76495:9;76505:1;76495:12;;;;;;;;:::i;:::-;;;;;;:201;;;;76776:23;76788:10;76776:11;:23::i;:::-;-1:-1:-1;;;;;76759:49:18;;76809:9;76759:60;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;76056:774::-;75814:1022;;;;;;:::o;81112:1696::-;81333:9;81308:22;81404:896;81428:31;;;;:10;:31;:::i;:::-;:38;;81424:1;:42;81404:896;;;81537:48;81606:31;;;;:10;:31;:::i;:::-;81638:1;81606:34;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;81783:26:18;;81886:42;;;81882:115;;;81955:27;;-1:-1:-1;;;81955:27:18;;;;;;;;;;;81882:115;82070:116;82100:29;;;;;;;;:::i;:::-;82147:25;82070:12;:116::i;:::-;82246:43;82264:25;82246:43;;:::i;:::-;;;81473:827;;81468:3;;;;:::i;:::-;;;81404:896;;;;82383:14;82374:6;:23;82370:88;;;82420:27;;-1:-1:-1;;;82420:27:18;;;;;;;;;;;82370:88;82510:40;82523:18;;;;;;;;:::i;:::-;82543:6;82510:12;:40::i;:::-;82656:6;82639:14;:23;82635:167;;;82733:58;82754:10;82767:23;82784:6;82767:14;:23;:::i;:::-;82733:12;:58::i;:::-;81234:1574;81112:1696;;:::o;77786:958::-;78038:28;78059:6;78038:20;:28::i;:::-;78128:24;78124:614;;78233:60;78257:5;78264:4;78270:2;78274:10;78286:6;78233:23;:60::i;78124:614::-;78362:24;;;78384:1;78362:24;;;;;;;;;78324:34;;78362:24;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;78417:187:18;;;;;;;;;78324:63;;-1:-1:-1;78417:187:18;78450:23;78417:187;;83420:1348;83707:18;83728:11;:99;;83797:10;:30;;;83728:99;;;83754:10;:28;;;83728:99;83707:120;;83894:9;83889:725;83913:31;;;;:10;:31;:::i;:::-;:38;;83909:1;:42;83889:725;;;84022:48;84091:31;;;;:10;:31;:::i;:::-;84123:1;84091:34;;;;;;;:::i;:::-;;;;;;84022:117;;84233:11;84229:86;;;84264:36;84274:26;;84264:36;;:::i;:::-;;;84229:86;84406:197;84438:10;84466:4;84488:29;;;;;;;;:::i;:::-;84535:26;;84579:10;84406:14;:197::i;:::-;-1:-1:-1;83953:3:18;;;:::i;:::-;;;83889:725;;;;84705:56;84720:10;84732:4;84738:2;84742:6;84750:10;84705:14;:56::i;47273:2067:20:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47468:24:20;;:30;;;47557:12;;47441:24;;-1:-1:-1;;;;;47541:29:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;47509:61;;47640:9;47635:497;47659:5;:12;47655:1;:16;47635:497;;;47732:26;47761:5;47767:1;47761:8;;;;;;;;:::i;:::-;;;;;;;47732:37;;47827:26;47856:179;;;;;;;;47883:9;:18;;;47856:179;;;;;;;;:::i;:::-;;;;;47919:9;:15;;;-1:-1:-1;;;;;47856:179:20;;;;;47952:9;:30;;;47856:179;;;;48000:9;:21;;;47856:179;;;47827:208;;48112:9;48096:10;48107:1;48096:13;;;;;;;;:::i;:::-;;;;;;:25;;;;47678:454;;47673:3;;;;:::i;:::-;;;47635:497;;;-1:-1:-1;48185:37:20;;:64;;;48330:20;;48142:40;;-1:-1:-1;;;;;48298:62:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;48260:100;;48438:9;48433:634;48457:13;:20;48453:1;:24;48433:634;;;48546:42;48592:13;48606:1;48592:16;;;;;;;;:::i;:::-;;;;;;;48546:63;;48670:32;48705:259;;;;;;;;48735:17;:26;;;48705:259;;;;;;;;:::i;:::-;;;;;48779:17;:23;;;-1:-1:-1;;;;;48705:259:20;;;;;48820:17;:38;;;48705:259;;;;48876:17;:29;;;48705:259;;;;48923:17;:27;;;-1:-1:-1;;;;;48705:259:20;;;;48670:294;;49044:12;49025:13;49039:1;49025:16;;;;;;;;:::i;:::-;;;;;;:31;;;;48484:583;;48479:3;;;;:::i;:::-;;;48433:634;;;-1:-1:-1;49094:207:20;;;;;;;;49122:24;;:32;-1:-1:-1;;;;;49094:207:20;;;;;;;;;;;;;;;;;;49219:24;;:35;;;49094:207;;;;49268:23;;;;;-1:-1:-1;;;;;49094:207:20;;;;;;47273:2067;-1:-1:-1;;;47273:2067:20:o;19619:5287:18:-;19881:17;19912:20;19946:22;20043:38;20084:13;:24;;;20043:65;;20218:142;20247:15;:25;;;20290:15;:23;;;20331:15;20218:11;:142::i;:::-;20200:302;;-1:-1:-1;20482:1:18;;-1:-1:-1;20482:1:18;;-1:-1:-1;20482:1:18;;-1:-1:-1;20466:25:18;;20200:302;20618:23;;;;20682:25;;;;-1:-1:-1;;;;;20610:32:18;;;;20674:34;20796:23;;;;:41;;-1:-1:-1;20823:14:18;;20796:41;20792:92;;;20860:13;;-1:-1:-1;;;20860:13:18;;;;;;;;;;;20792:92;21004:11;20992:9;:23;:93;;;;;21031:54;21059:15;:25;;;21031:27;:54::i;:::-;20975:262;;;21194:32;;-1:-1:-1;;;21194:32:18;;;;;;;;;;;20975:262;21340:86;21401:15;21340:47;:86::i;:::-;21328:98;;21518:307;21570:13;21597:17;21628:16;21658:9;21681:15;:24;;;21719:15;:25;;;21758:15;:23;;;21795:15;:20;;;21518:38;:307::i;:::-;21903:30;21936:23;;;:12;:23;;;;;;;;21903:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21903:56:18;;;;;;;;;;;;-1:-1:-1;;;21903:56:18;;;;;;;;;22046:189;;21949:9;;21903:56;;22206:15;22046:18;:189::i;:::-;22028:348;;-1:-1:-1;22360:1:18;;-1:-1:-1;22360:1:18;;-1:-1:-1;22341:24:18;;-1:-1:-1;;;22341:24:18;22028:348;22472:23;;22467:194;;22511:139;22545:15;:23;;;22586:9;22613:13;:23;;;22511:16;:139::i;:::-;22778:21;;;;22837:23;;;;-1:-1:-1;;;;;22752:47:18;;;;22809:51;22956:22;;22952:1815;;23079:11;23094:1;23079:16;23075:668;;;23206:17;23194:29;;23255:17;23241:31;;23075:668;;;23408:11;23387:17;:32;23383:360;;23519:30;23538:11;23519:30;;:::i;:::-;;-1:-1:-1;23648:30:18;23661:17;23648:30;;:::i;:::-;;-1:-1:-1;23696:32:18;23711:17;23696:32;;:::i;:::-;;;23383:360;23872:11;23842:27;23860:9;23842:15;:27;:::i;:::-;:41;23838:197;;;23991:29;24005:15;23991:11;:29;:::i;:::-;23979:41;;23838:197;24124:23;;;;24162:4;24124:23;;;;;;;;:42;;-1:-1:-1;;24180:43:18;;;;;;24298:27;24316:9;24298:15;:27;:::i;:::-;24237:23;;;;:12;:23;;;;;:102;;24353:58;;24237:102;-1:-1:-1;;;;;24237:102:18;;;;-1:-1:-1;;;;;24353:58:18;;-1:-1:-1;;;24353:58:18;;;;;;;;;;;;;22952:1815;;;24517:23;;;;24555:4;24517:23;;;;;;;;:42;;-1:-1:-1;;;;;24698:58:18;;;-1:-1:-1;;;24698:58:18;-1:-1:-1;;;;;24630:54:18;;;;;-1:-1:-1;;24630:54:18;;;;;;;;;;24698:58;;;;;;;;;;22952:1815;-1:-1:-1;24876:9:18;;-1:-1:-1;24887:11:18;;-1:-1:-1;;;;19619:5287:18;;;;;;;;;:::o;17996:777:20:-;18126:16;18244:11;18231:9;:24;18227:67;;;-1:-1:-1;18278:5:20;18271:12;;18227:67;18382:27;18412:17;18420:9;18412:5;:17;:::i;:::-;18382:47;-1:-1:-1;18521:33:20;18543:11;18382:47;18521:33;:::i;:::-;18510:44;-1:-1:-1;18636:10:20;18691:5;18677:9;18651:22;18662:11;18510:44;18651:22;:::i;:::-;18650:36;;;;:::i;:::-;18649:47;18636:60;;18711:5;18706:61;;18739:17;;-1:-1:-1;;;18739:17:20;;;;;;;;;;;18706:61;18144:629;;17996:777;;;;;:::o;16254:1220::-;16469:7;16583:9;16568:11;:24;16564:798;;16689:20;16813:7;16809:73;;;16855:12;16866:1;16855:8;:12;:::i;:::-;16840:27;;16809:73;16971:27;17086:12;17047:19;17059:7;17047:9;:19;:::i;:::-;17003:23;17017:9;17003:11;:23;:::i;:::-;17002:65;;;;:::i;:::-;:96;;;;:::i;:::-;16971:128;-1:-1:-1;17192:17:20;17212:30;17234:8;16971:128;17212:30;:::i;:::-;17192:50;-1:-1:-1;17335:16:20;;-1:-1:-1;;;17335:16:20;16564:798;-1:-1:-1;17458:9:20;16254:1220;;;;;;;;;:::o;2360:6030::-;2620:24;;2600:17;2703:3936;2727:9;2723:1;:13;2703:3936;;;2804:40;2848:17;2866:1;2848:20;;;;;;;;:::i;:::-;;;;;;;2804:65;;2959:18;2980:16;:27;;;2959:48;;3096:15;:22;3082:10;:36;3078:115;;3145:33;;-1:-1:-1;;;3145:33:20;;;;;;;;;;;3078:115;3279:15;3295:10;3279:27;;;;;;;;:::i;:::-;;;;;;;:37;;;-1:-1:-1;;;;;3279:42:20;3320:1;3279:42;3275:89;;;3341:8;;;;3275:89;3478:22;;;;3453;;;3720:16;:21;;;:35;;;;;;;;:::i;:::-;;3716:2317;;;3775:29;3807:15;3823:10;3807:27;;;;;;;;:::i;:::-;;;;;;;:59;;;3775:91;;3970:10;:17;3952:14;:35;3948:122;;4018:33;;-1:-1:-1;;;4018:33:20;;;;;;;;;;;3948:122;4163:22;4189:10;4200:14;4189:26;;;;;;;;:::i;:::-;;;;;;;;;;;4323:14;;4378:16;;;;4323:14;;-1:-1:-1;4378:16:20;-1:-1:-1;4189:26:20;-1:-1:-1;4520:29:20;4508:8;:41;;;;;;;;:::i;:::-;;4507:120;;4611:16;4507:120;;;4573:15;4507:120;4490:5;;:137;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;4741:27:20;;;;4722:16;;;;:46;-1:-1:-1;3716:2317:20;;;4807:35;4845:15;4882:10;4845:65;;;;;;;;:::i;:::-;;;;;;;:79;;;4807:117;;5103:13;:20;5085:14;:38;5081:133;;5154:41;;-1:-1:-1;;;5154:41:20;;;;;;;;;;;5081:133;5307:33;5365:13;5379:14;5365:29;;;;;;;;:::i;:::-;;;;;;;;;;;5519:22;;5582:24;;;;5519:22;;-1:-1:-1;5582:24:20;-1:-1:-1;5365:29:20;-1:-1:-1;5760:29:20;5728:8;:61;;;;;;;;:::i;:::-;;5727:140;;5851:16;5727:140;;;5813:15;5727:140;5702:13;;:165;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;5990:27:20;;;;5962:24;;;;:56;-1:-1:-1;3716:2317:20;6124:29;6144:8;6124:19;:29::i;:::-;6119:103;;6180:27;;-1:-1:-1;;;6180:27:20;;;;;;;;;;;6119:103;6310:34;;6306:323;;6441:173;6475:16;:27;;;6524:20;6566:16;:30;;;6441:12;:173::i;:::-;2743:3896;;;;;2703:3936;2738:3;;;:::i;:::-;;;2703:3936;;;-1:-1:-1;;6724:22:20;;6807:9;6802:1582;6826:9;6822:1;:13;6802:1582;;;7038:36;7077:15;7093:1;7077:18;;;;;;;;:::i;:::-;;;;;;;7038:57;;7175:18;7196:14;:25;;;:32;7175:53;;7315:14;:24;;;-1:-1:-1;;;;;7315:29:20;7343:1;7315:29;7311:76;;;7364:8;;;;7311:76;7464:9;7459:320;7483:10;7479:1;:14;7459:320;;;7615:58;7635:14;:25;;;7661:1;7635:28;;;;;;;;:::i;:::-;;;;;;;:37;;;7615:19;:58::i;:::-;7590:175;;;7721:25;;-1:-1:-1;;;7721:25:20;;;;;;;;;;;7590:175;7495:3;;;:::i;:::-;;;7459:320;;;-1:-1:-1;;7880:28:20;;;;:35;8002:9;7997:377;8021:10;8017:1;:14;7997:377;;;8153:107;8198:14;:28;;;8227:1;8198:31;;;;;;;;:::i;8153:107::-;8128:232;;;8308:33;;-1:-1:-1;;;;;;8308:33:20;;;;;;;;;;;8128:232;8033:3;;;:::i;:::-;;;7997:377;;;;6842:1542;;6802:1582;6837:3;;;:::i;:::-;;;6802:1582;;;;2515:5875;2360:6030;;:::o;17591:3266:19:-;17818:26;;:::i;:::-;17951:27;;;:66;;-1:-1:-1;17982:35:19;;17951:66;17934:170;;;18049:44;;-1:-1:-1;;;18049:44:19;;;;;;;;;;;17934:170;18219:37;18273:151;18335:15;18368:23;;18273:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;18409:1;18273:44;:151::i;:::-;18219:215;;18792:119;18842:15;18871;;18792:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;18900:1;18792:36;:119::i;:::-;19045:26;;18523:388;;-1:-1:-1;19018:53:19;;;;;;;;:::i;:::-;:14;;:23;:53;;;;;;;;:::i;:::-;;;:116;;;;19111:17;:23;;;-1:-1:-1;;;;;19087:47:19;:9;:14;;;:20;;;-1:-1:-1;;;;;19087:47:19;;;19018:116;:189;;;;19179:17;:28;;;19150:9;:14;;;:25;;;:57;;19018:189;19001:303;;;19239:54;;-1:-1:-1;;;19239:54:19;;;;;;;;;;;19001:303;19414:9;:14;;;:21;;;19387:17;:24;;;:48;19383:1108;;;19531:43;19595:23;;19619:1;19595:26;;;;;;;:::i;:::-;;;;;;19531:104;;;;;;;;;;:::i;:::-;;;19886:9;:14;;;:21;;;19859:17;:24;;;:48;;;;:::i;:::-;19731:15;19747;:26;;;19731:43;;;;;;;;:::i;:::-;;;;;;;:74;;;19806:15;:25;;;19731:101;;;;;;;;:::i;:::-;;;;;;;;;;;:125;;;;:176;;;;20025:14;;:21;;;19998:24;;;:48;-1:-1:-1;19383:1108:19;;;20149:43;20196:15;;20212:1;20196:18;;;;;;;:::i;:::-;;;;;;20149:66;;;;;;;;;;:::i;:::-;;;20456:17;:24;;;20432:9;:14;;;:21;;;:48;;;;:::i;:::-;20307:15;20323;:26;;;20307:43;;;;;;;;:::i;:::-;;;;;;;:71;;;20379:15;:25;;;20307:98;;;;;;;;:::i;:::-;;;;;;;:122;;:173;;;;;20063:428;19383:1108;20600:24;;;;;20576:14;;:21;;;:48;20661:27;;;;;20634:14;;-1:-1:-1;;;;;20634:54:19;;;:24;;:54;17591:3266;;;;;;;:::o;66591:3638:18:-;66777:29;66820:37;66871:39;67015:19;67037:15;:22;67015:44;;67158:11;-1:-1:-1;;;;;67147:23:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;67147:23:18;;67129:41;;67254:9;67249:1311;67273:11;67269:1;:15;67249:1311;;;67352:36;67391:15;67407:1;67391:18;;;;;;;;:::i;:::-;;;;;;;67352:57;;67502:14;:24;;;-1:-1:-1;;;;;67502:29:18;67530:1;67502:29;67498:304;;;67779:8;;;67498:304;67881:4;67860:15;67876:1;67860:18;;;;;;;;:::i;:::-;:25;;;:18;;;;;;;;;;;:25;68030:28;;;;67974:35;68160:390;68184:13;:20;68180:1;:24;68160:390;;;68301:19;68323:13;68337:1;68323:16;;;;;;;;:::i;:::-;;;;;;;:23;;;68301:45;;68432:11;68447:1;68432:16;68428:108;;68479:38;;-1:-1:-1;;;68479:38:18;;;;;50556:25:23;;;50597:18;;;50590:34;;;50640:18;;;50633:34;;;50529:18;;68479:38:18;50354:319:23;68428:108:18;-1:-1:-1;68206:3:18;;;:::i;:::-;;;68160:390;;;;67291:1269;;67249:1311;67286:3;;;:::i;:::-;;;67249:1311;;;;68689:31;68709:10;68689:19;:31::i;:::-;68649:71;;-1:-1:-1;68649:71:18;-1:-1:-1;68820:9:18;68795:22;68889:785;68913:18;:25;68909:1;:29;68889:785;;;69031:26;69060:18;69079:1;69060:21;;;;;;;;:::i;:::-;;;;;;;;;;;69122:14;;69060:21;;-1:-1:-1;69095:24:18;69232:13;;:32;;;;;;;;:::i;:::-;;69228:304;;;69379:14;69365:4;:11;;;:28;69361:109;;;69424:27;;-1:-1:-1;;;69424:27:18;;;;;;;;;;;69361:109;69506:11;;;;69488:29;;;;:::i;:::-;;;69228:304;69607:56;69617:4;69623:9;:17;;;69642:9;:20;;;69607:9;:56::i;:::-;68945:729;;68940:3;;;;:::i;:::-;;;68889:785;;;;69735:9;69730:162;69754:15;:22;69750:1;:26;69730:162;;;69840:41;69862:15;69878:1;69862:18;;;;;;;;:::i;:::-;;;;;;;69840:21;:41::i;:::-;69778:3;;;:::i;:::-;;;69730:162;;;-1:-1:-1;69983:19:18;;69979:99;;70018:49;70039:10;70052:14;70018:12;:49::i;:::-;70161:61;;66591:3638;;;;;:::o;7714:472:19:-;7813:7;7914:20;7956:9;:18;;;7996:9;:15;;;8033:9;:30;;;8085:9;:21;;;8128:9;:19;;;7882:283;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7855:324;;;;;;7836:343;;7714:472;;;:::o;8372:593::-;8495:7;8596:28;8646:17;:26;;;8694:17;:23;;;8739:17;:38;;;8799:17;:29;;;8850:17;:27;;;8899:17;:27;;;8564:380;;;;;;;;;;;;;;:::i;52373:425:20:-;52693:30;52660;:63;52656:136;;;52746:35;;-1:-1:-1;;;52746:35:20;;;;;;;;;;;52656:136;52373:425;;:::o;6637:347:19:-;6801:61;;-1:-1:-1;;;6801:61:19;;;6878:42;-1:-1:-1;;;;;6801:42:19;;;6878;;6801:61;;6844:6;;6852:9;;6801:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6801:119:19;;6784:194;;6952:15;;-1:-1:-1;;;6952:15:19;;;;;;;;;;;9339:6116:20;9605:24;;9585:17;9688:4044;9712:9;9708:1;:13;9688:4044;;;9789:40;9833:17;9851:1;9833:20;;;;;;;;:::i;:::-;;;;;;;9789:65;;9944:18;9965:16;:27;;;9944:48;;10081:14;:21;10067:10;:35;10063:114;;10129:33;;-1:-1:-1;;;10129:33:20;;;;;;;;;;;10063:114;10263:14;10278:10;10263:26;;;;;;;;:::i;:::-;;;;;;;:36;;;-1:-1:-1;;;;;10263:41:20;10303:1;10263:41;10259:88;;;10324:8;;;;10259:88;10415:38;10474:14;10489:10;10474:26;;;;;;;;:::i;:::-;;;;;;;;;;;:37;10640:22;;;;10474:37;;-1:-1:-1;10474:37:20;;;10882:16;:21;;;:35;;;;;;;;:::i;:::-;;10878:2248;;;11023:15;:21;;;:28;11005:14;:46;11001:133;;11082:33;;-1:-1:-1;;;11082:33:20;;;;;;;;;;;11001:133;11227:22;11274:15;:21;;;11296:14;11274:37;;;;;;;;:::i;:::-;;;;;;;;;;;11436:14;;11491:26;;;;11436:14;;-1:-1:-1;11491:26:20;-1:-1:-1;11274:37:20;-1:-1:-1;11643:29:20;11631:8;:41;;;;;;;;:::i;:::-;;11630:120;;11734:16;11630:120;;;11696:15;11630:120;11613:5;;:137;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;11874:27:20;;;;11845:26;;;;:56;10878:2248;;;12101:15;:29;;;:36;12083:14;:54;12079:149;;12168:41;;-1:-1:-1;;;12168:41:20;;;;;;;;;;;12079:149;12321:38;12384:15;:29;;;12414:14;12384:45;;;;;;;;:::i;:::-;;;;;;;;;;;12554:22;;12617:34;;;;12554:22;;-1:-1:-1;12617:34:20;-1:-1:-1;12384:45:20;-1:-1:-1;12805:29:20;12773:8;:61;;;;;;;;:::i;:::-;;12772:140;;12896:16;12772:140;;;12858:15;12772:140;12747:13;;:165;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;13066:27:20;;;;13007:34;;;;:104;10878:2248;13217:29;13237:8;13217:19;:29::i;:::-;13212:103;;13273:27;;-1:-1:-1;;;13273:27:20;;;;;;;;;;;13212:103;13403:34;;13399:323;;13534:173;13568:16;:27;;;13617:20;13659:16;:30;;;13534:12;:173::i;:::-;9728:4004;;;;;;9688:4044;9723:3;;;:::i;:::-;;;9688:4044;;;-1:-1:-1;;13826:21:20;;13908:9;13903:1546;13927:9;13923:1;:13;13903:1546;;;14001:34;14038:14;14053:1;14038:17;;;;;;;;:::i;:::-;;;;;;;14001:54;;14142:13;:23;;;-1:-1:-1;;;;;14142:28:20;14169:1;14142:28;14138:75;;;14190:8;;;14138:75;14339:24;;:38;;;:45;14300:18;14479:387;14503:10;14499:1;:14;14479:387;;;14635:117;14680:13;:24;;;:38;;;14719:1;14680:41;;;;;;;;:::i;14635:117::-;14610:242;;;14800:33;;-1:-1:-1;;;;;;14800:33:20;;;;;;;;;;;14610:242;14515:3;;;:::i;:::-;;;14479:387;;;-1:-1:-1;;14958:24:20;;:30;;;:37;:24;15068:371;15092:10;15088:1;:14;15068:371;;;15224:109;15269:13;:24;;;:30;;;15300:1;15269:33;;;;;;;;:::i;15224:109::-;15199:226;;;15381:25;;-1:-1:-1;;;15381:25:20;;;;;;;;;;;15199:226;15104:3;;;:::i;:::-;;;15068:371;;;;13943:1506;;13903:1546;13938:3;;;:::i;:::-;;;13903:1546;;30220:7022:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30576:16:18;30621:15;:25;;;30595:15;:23;;;:51;;;;:::i;:::-;30576:70;;30656:15;30692;:25;;;30674:15;:43;;;;:::i;:::-;30656:61;-1:-1:-1;30727:17:18;30747:18;30656:61;30747:8;:18;:::i;:::-;32142:21;;;;:28;30727:38;;-1:-1:-1;30865:9:18;;-1:-1:-1;;;;;32113:67:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;32085:25:18;;;:95;32322:9;32317:1890;32341:15;:21;;;:28;32337:1;:32;32317:1890;;;32438:26;32467:15;:21;;;32489:1;32467:24;;;;;;;;:::i;:::-;;;;;;;32438:53;;32590:14;32607:297;32643:9;:21;;;32686:9;:19;;;32727:9;32758:11;32791:7;32820:9;32851:8;32881:5;32607:14;:297::i;:::-;32590:314;;32992:32;33027:228;;;;;;;;33061:9;:18;;;33027:228;;;;;;;;:::i;:::-;;;;;33101:9;:15;;;-1:-1:-1;;;;;33027:228:18;;;;;33138:9;:30;;;33027:228;;;;33190:6;33027:228;;;;33226:10;-1:-1:-1;;;;;33027:228:18;;;;32992:263;;33352:183;;;;;;;;33383:12;:21;;;33352:183;;;;;;;;:::i;:::-;;;;;33426:12;:18;;;-1:-1:-1;;;;;33352:183:18;;;;;33466:12;:23;;;33352:183;;;;33511:6;33352:183;;;33321:14;:25;;;33347:1;33321:28;;;;;;;;:::i;:::-;;;;;;;;;;:214;33663:15;33638:21;;:40;;;;;;;;:::i;:::-;;33634:326;;;33796:14;33787:6;:23;33783:112;;;33845:27;;-1:-1:-1;;;33845:27:18;;;;;;;;;;;33783:112;33917:24;33935:6;33917:24;;:::i;:::-;;;33634:326;34047:145;34078:12;34112:15;:23;;;34157:17;34047:9;:145::i;:::-;32376:1831;;;32371:3;;;;:::i;:::-;;;32317:1890;;;;35090:15;:29;;;:36;-1:-1:-1;;;;;35058:78:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;35027:28:18;;;:109;35286:9;35281:1711;35305:15;:29;;;:36;35301:1;:40;35281:1711;;;35418:42;35485:15;:29;;;35515:1;35485:32;;;;;;;;:::i;:::-;;;;;;;35418:117;;35635:14;35652:312;35688:17;:29;;;35739:17;:27;;;35788:9;35819:11;35852:7;35881:9;35912:8;35942:4;35652:14;:312::i;:::-;35635:329;;36039:32;36074:260;;;;;;;;36108:17;:26;;;36074:260;;;;;;;;:::i;:::-;;;;;36156:17;:23;;;-1:-1:-1;;;;;36074:260:18;;;;;36201:17;:38;;;36074:260;;;;36261:6;36074:260;;;;36289:17;:27;;;-1:-1:-1;;;;;36074:260:18;;;;36039:295;;36386:12;36352:14;:28;;;36381:1;36352:31;;;;;;;;:::i;:::-;;;;;;;;;;:46;36526:15;36501:21;;:40;;;;;;;;:::i;:::-;;36497:325;;;36659:14;36650:6;:23;36646:112;;;36708:27;;-1:-1:-1;;;36708:27:18;;;;;;;;;;;36646:112;36779:24;36797:6;36779:24;;:::i;:::-;;;36497:325;36921:56;36931:12;36945:10;36957:19;36921:9;:56::i;:::-;35348:1644;;;35343:3;;;;:::i;:::-;;;35281:1711;;;-1:-1:-1;37070:19:18;;37066:139;;37145:49;37166:10;37179:14;37145:12;:49::i;:::-;37214:21;;;;30220:7022;;;;;;;:::o;60758:4563::-;61332:24;;61503:32;;61062:29;;;;;;61332:24;61299:30;61696:55;61503:32;61332:24;61696:55;:::i;:::-;-1:-1:-1;;;;;61667:94:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;61635:126;;61820:31;61919:9;61914:913;61938:22;61934:1;:26;61914:913;;;62052:40;62096:17;62114:1;62096:20;;;;;;;;:::i;:::-;;;;;;;62052:65;;62207:26;62236:159;62273:15;62306:10;62334;62362:19;62236;:159::i;:::-;62207:188;;62515:9;:17;;;-1:-1:-1;;;;;62487:45:18;:9;:14;;;:24;;;-1:-1:-1;;;;;62487:45:18;;62483:334;;;62608:28;62635:1;62608:28;;:::i;:::-;;;62483:334;;;62793:9;62751:10;62762:27;62766:23;62762:1;:27;:::i;:::-;62751:39;;;;;;;;:::i;:::-;;;;;;:51;;;;62483:334;61967:860;;61962:3;;;;:::i;:::-;;;61914:913;;;;62898:9;62893:1034;62917:30;62913:1;:34;62893:1034;;;63043:40;63104:25;63130:1;63104:28;;;;;;;;:::i;:::-;;;;;;;63043:103;;63236:26;63265:167;63302:15;63335:18;63371:10;63399:19;63265;:167::i;:::-;63236:196;;63552:9;:17;;;-1:-1:-1;;;;;63524:45:18;:9;:14;;;:24;;;-1:-1:-1;;;;;63524:45:18;;63520:397;;;63645:28;63672:1;63645:28;;:::i;:::-;;;63520:397;;;63893:9;63788:10;63849:23;63820:26;63824:22;63820:1;:26;:::i;:::-;:52;;;;:::i;:::-;63788:102;;;;;;;;:::i;:::-;;;;;;:114;;;;63520:397;62954:973;;62949:3;;;;:::i;:::-;;;62893:1034;;;-1:-1:-1;64003:28:18;;63999:1316;;64047:23;64149;64074:71;64115:30;64074:22;:71;:::i;:::-;64073:99;;;;:::i;:::-;64047:125;;64186:37;64259:15;-1:-1:-1;;;;;64226:62:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;64186:102;;64355:9;64350:116;64374:15;64370:1;:19;64350:116;;;64438:10;64449:1;64438:13;;;;;;;;:::i;:::-;;;;;;;64414:18;64433:1;64414:21;;;;;;;;:::i;:::-;;;;;;:37;;;;64391:3;;;;:::i;:::-;;;64350:116;;;-1:-1:-1;64533:25:18;;64529:104;;64590:28;;-1:-1:-1;;;64590:28:18;;;;;;;;;;;64529:104;64754:130;64811:15;64848:18;64754:35;:130::i;:::-;64731:153;;;;;;;;;;;;;;63999:1316;64969:17;;64965:96;;65018:28;;-1:-1:-1;;;65018:28:18;;;;;;;;;;;64965:96;65182:122;65239:15;65276:10;65182:35;:122::i;:::-;65159:145;;;;;;;;;;;;2017:627:19;2149:10;2266:15;2254:9;:27;:57;;;;2296:15;2285:7;:26;;2254:57;2250:314;;;2404:15;2400:74;;;2446:13;;-1:-1:-1;;;2446:13:19;;;;;;;;;;;2400:74;-1:-1:-1;2548:5:19;2541:12;;2250:314;-1:-1:-1;2633:4:19;2017:627;;;;;:::o;53498:807:20:-;53872:17;53904:14;53915:2;53913:1;53904:8;53872:17;53904:14;:::i;:::-;53893:37;;;;;;;:::i;:::-;53934:2;53893:43;:106;;;;-1:-1:-1;53963:17:20;53976:3;53972;53963:8;;:17;:::i;:::-;53952:40;;;;;;;:::i;:::-;53996:3;53952:47;53893:106;:229;;;;-1:-1:-1;54093:17:20;54106:3;54102;54093:8;;:17;:::i;:::-;54082:40;;;;;;;:::i;:::-;54077:45;;:2;:45;:::i;:::-;54071:51;;:3;:51;:::i;:::-;54026:17;54039:3;54035;54026:8;;:17;:::i;:::-;54015:40;;;;;;;:::i;:::-;:107;53893:229;53872:251;;54217:12;54212:87;;54252:36;;-1:-1:-1;;;54252:36:20;;;;;;;;;;;54212:87;53562:743;53498:807::o;15564:883:18:-;15767:17;;15889:7;15767:17;15897:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15889:27:18;;;;;;;;;;;;-1:-1:-1;15889:27:18;;15990:15;;15889:27;;-1:-1:-1;16023:18:18;;;;;;;;:::i;:::-;16059:15;;;;;;;;:::i;:::-;16092:6;:21;;;16131:6;:24;;;16173:20;:30;;;16221:10;:20;;;16259:10;:18;;;16295:10;:19;;;16332:10;:15;;;16365:10;:28;;;16411:5;15962:468;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15939:501;;;;;;15927:513;;15786:661;15564:883;;;;;:::o;12959:755:19:-;13281:1;13268:9;13260:18;;;;;;;;:::i;:::-;:22;:56;;;;-1:-1:-1;13298:10:19;-1:-1:-1;;;;;13298:18:19;;;;13260:56;:93;;;;-1:-1:-1;13332:10:19;-1:-1:-1;;;;;13332:21:19;;;;13260:93;13243:465;;;13399:172;;-1:-1:-1;;;13399:172:19;;;;;;41296:25:23;;;13484:10:19;41375:18:23;;;41368:43;-1:-1:-1;;;;;41447:15:23;;;41427:18;;;41420:43;41479:18;;;41472:34;;;13575:35:19;;13399:32;;;;13575:35;;41268:19:23;;13399:172:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;13399:211:19;;13378:320;;13650:33;;-1:-1:-1;;;13650:33:19;;;;;39637:25:23;;;39610:18;;13650:33:19;39491:177:23;13378:320:19;12959:755;;;;;:::o;16775:1032:18:-;16991:30;17024:23;;;:12;:23;;;;;;;;;16991:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16991:56:18;;;;;;;;;;;;-1:-1:-1;;;16991:56:18;;;;;;;;;;17116:218;;17037:9;;16991:56;;17024:12;17116:18;:218::i;:::-;-1:-1:-1;17431:23:18;;17426:102;;17470:47;17487:7;17496:9;17507;17470:16;:47::i;:::-;-1:-1:-1;;;17609:23:18;;;;17647:4;17609:23;;;;;17761:39;;;16775:1032::o;2237:301:22:-;-1:-1:-1;;;;;2391:17:22;;;2387:77;;2436:17;;-1:-1:-1;;;2436:17:22;;-1:-1:-1;;;;;31756:32:23;;2436:17:22;;;31738:51:23;31711:18;;2436:17:22;31592:203:23;2387:77:22;2474:57;;-1:-1:-1;;;2474:57:22;;-1:-1:-1;;;;;34241:15:23;;;2474:57:22;;;34223:34:23;34293:15;;;34273:18;;;34266:43;34325:18;;;34318:34;;;2474:35:22;;;;;34158:18:23;;2474:57:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;80415:269:18;80503:15;80544:26;80559:10;33471:239:19;;-1:-1:-1;;;;;;33471:239:19;;;29784:39:23;-1:-1:-1;;33567:19:19;29860:2:23;29856:15;29852:53;29839:11;;;29832:74;29922:12;;;29915:28;;;33657:27:19;29959:12:23;;;29952:28;33274:15:19;;29996:12:23;;33471:239:19;;;-1:-1:-1;;33471:239:19;;;;;;;;;33436:296;;33471:239;33436:296;;;;;33183:598;-1:-1:-1;;33183:598:19;80544:26:18;80534:36;-1:-1:-1;;;;;;80585:19:18;;;80581:97;;80632:35;;-1:-1:-1;;;80632:35:18;;;;;39847:25:23;;;-1:-1:-1;;;;;39908:32:23;;39888:18;;;39881:60;39820:18;;80632:35:18;39673:274:23;80581:97:18;80415:269;;;:::o;72466:486::-;72599:28;72620:6;72599:20;:28::i;:::-;72720:12;72738:2;-1:-1:-1;;;;;72738:7:18;72754:6;72738:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;72719:47;;;72814:7;72809:137;;72896:39;;-1:-1:-1;;;72896:39:18;;-1:-1:-1;;;;;32000:32:23;;72896:39:18;;;31982:51:23;32049:18;;;32042:34;;;31955:18;;72896:39:18;31800:282:23;52964:144:20;53038:11;53034:68;;53072:19;;-1:-1:-1;;;53072:19:20;;;;;;;;;;;3162:413:22;-1:-1:-1;;;;;3341:17:22;;;3337:77;;3386:17;;-1:-1:-1;;;3386:17:22;;-1:-1:-1;;;;;31756:32:23;;3386:17:22;;;31738:51:23;31711:18;;3386:17:22;31592:203:23;3337:77:22;3424:144;;-1:-1:-1;;;3424:144:22;;-1:-1:-1;;;;;34714:15:23;;;3424:144:22;;;34696:34:23;34766:15;;;34746:18;;;34739:43;34798:18;;;34791:34;;;34841:18;;;34834:34;;;34676:3;34884:19;;;34877:32;-1:-1:-1;34925:19:23;;;34918:30;3424:40:22;;;;;34965:19:23;;3424:144:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;73944:890:18;74166:28;74187:6;74166:20;:28::i;:::-;74256:24;74252:576;;74348:46;74370:5;74377:4;74383:2;74387:6;74348:21;:46::i;:::-;74252:576;;;74463:24;;;74485:1;74463:24;;;;;;;;;74425:34;;74463:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;74518:176:18;;;;;;;;;74425:63;;-1:-1:-1;74518:176:18;74551:21;74518:176;;;;74590:5;-1:-1:-1;;;;;74518:176:18;;;;;74613:4;-1:-1:-1;;;;;74518:176:18;;;;;74635:2;-1:-1:-1;;;;;74518:176:18;;;;;74655:1;74518:176;;;;74674:6;74518:176;;;74503:9;74513:1;74503:12;;;;;;;;:::i;:::-;;;;;;:191;;;;74774:23;74786:10;74774:11;:23::i;:::-;-1:-1:-1;;;;;74757:49:18;;74807:9;74757:60;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;45056:266:20:-;45161:16;45296:9;45288:18;;;;;;;;:::i;:::-;45309:1;45288:22;:27;;45056:266;-1:-1:-1;;45056:266:20:o;15139:1624:19:-;15604:1;15591:9;15583:18;;;;;;;;:::i;:::-;:22;:56;;;;-1:-1:-1;15621:10:19;-1:-1:-1;;;;;15621:18:19;;;;15583:56;:93;;;;-1:-1:-1;15655:10:19;-1:-1:-1;;;;;15655:21:19;;;;15583:93;15566:1191;;;15791:23;;;;:30;:35;:84;;;;-1:-1:-1;15846:24:19;;:29;15791:84;15770:977;;;15933:192;;-1:-1:-1;;;15933:192:19;;;;;;41296:25:23;;;16026:10:19;41375:18:23;;;41368:43;-1:-1:-1;;;;;41447:15:23;;;41427:18;;;41420:43;41479:18;;;41472:34;;;16129:35:19;;15933:32;;;;16129:35;;41268:19:23;;15933:192:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;15933:231:19;;15908:356;;16212:33;;-1:-1:-1;;;16212:33:19;;;;;39637:25:23;;;39610:18;;16212:33:19;39491:177:23;15908:356:19;15770:977;;;16327:267;;-1:-1:-1;;;16327:267:19;;-1:-1:-1;;;16598:35:19;-1:-1:-1;;;;;16327:50:19;;;;;:267;;16403:9;;16438:10;;16474:13;;16513:16;;16555:17;;16327:267;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;16327:306:19;;16302:431;;16681:33;;-1:-1:-1;;;16681:33:19;;;;;39637:25:23;;;39610:18;;16681:33:19;39491:177:23;44374:264:20;44469:17;44630:1;44618:8;44610:17;;;;;;;;:::i;:::-;:21;;44374:264;-1:-1:-1;;44374:264:20:o;50723:1085::-;50952:4;50921:20;51012:626;51036:5;:12;51032:1;:16;51012:626;;;51112:20;51135:5;51141:1;51135:8;;;;;;;;:::i;:::-;;;;;;;51112:31;;51178:12;51162;:28;51158:470;;51330:44;;;;;;30662:19:23;;;30697:12;;;30690:28;;;30734:12;;51330:44:20;;;;;;;;;;;;51299:93;;;;;;51284:108;;51158:470;;;51551:44;;;;;;30662:19:23;;;30697:12;;;30690:28;;;30734:12;;51551:44:20;;;;;;;;;;;;51520:93;;;;;;51505:108;;51158:470;-1:-1:-1;51050:3:20;;;:::i;:::-;;;51012:626;;;-1:-1:-1;51725:29:20;;;51721:81;;51777:14;;-1:-1:-1;;;51777:14:20;;;;;;;;;;;34685:4269;34908:32;;:::i;:::-;35032:61;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;35032:61:20;35135:23;35159:10;35135:35;;;;;;;;:::i;:::-;;;;;;;;;;;:59;35103:91;;35235:35;;:23;;35259:10;;35235:35;;;;;;:::i;:::-;;;;;;;;;;;;:58;;;35204:28;;;:89;35390:22;;35344:42;;:68;;35303:37;;;:110;;;35424:3329;;35482:36;35521:15;35554:18;:29;;;35521:76;;;;;;;;:::i;:::-;;;;;;;35482:115;;35730:18;:37;;;:146;;;;35840:14;:28;;;:35;35788:18;:28;;;:87;;35730:146;35674:202;;:37;;;:202;;;35890:2853;;35952:33;35988:14;:49;;;36038:18;:28;;;35988:79;;;;;;;;:::i;:::-;;;;;;;35952:115;;36101:248;;;;;;;;36135:13;:22;;;36101:248;;;;;;;;:::i;:::-;;;;;36179:13;:19;;;-1:-1:-1;;;;;36101:248:20;;;;;36220:13;:24;;;36101:248;;;;36266:13;:20;;;36101:248;;;;36308:13;:23;;;-1:-1:-1;;;;;36101:248:20;;;;36086:263;;36472:1;36449:13;:20;;:24;;;;;36518:9;36530:10;36543:1;36530:14;;;;:::i;:::-;36518:26;;36492:2237;36570:23;:30;36566:1;:34;36492:2237;;;36698:23;36722:1;36698:26;;;;;;;;:::i;:::-;;;;;;;;;;;:62;36666:94;;36813:26;;:23;;36837:1;;36813:26;;;;;;:::i;:::-;;;;;;;;;;;;:61;;;36782:28;;;:92;37067:22;;37034:29;;:55;;;36970:37;;;:119;37151:97;;37220:5;;37151:97;37286:15;37327:18;:29;;;37286:92;;;;;;;;:::i;:::-;;;;;;;37269:109;;37404:14;:24;;;-1:-1:-1;;;;;37404:29:20;37432:1;37404:29;37400:1311;;37667:28;;;;;:35;37606:57;;;;:96;;;37536:66;;;:167;;;;37773:105;;37846:5;;37773:105;37919:14;:28;;;37977:18;:28;;;37919:112;;;;;;;;:::i;:::-;;;;;;;37903:128;;38214:13;:20;;;38164:12;:19;;;:70;;;;:::i;:::-;38114:19;;;;:120;;;;38372:1;38349:20;;;:24;38550:138;38349:13;38114:12;38550:27;:138::i;:::-;38481:207;;:66;;;:207;37400:1311;36622:3;;;:::i;:::-;;;36492:2237;;;;35934:2809;35890:2853;35468:3285;35424:3329;38844:18;:37;;;38840:108;;;38904:33;;-1:-1:-1;;;38904:33:20;;;;;;;;;;;38840:108;34942:4012;34685:4269;;;;;:::o;26845:3531:19:-;27052:26;;:::i;:::-;27090:18;27111:15;27127:10;27111:27;;;;;;;;:::i;:::-;;;;;;;:38;;;27090:59;;27159:17;27179:15;27195:10;27179:27;;;;;;;;:::i;:::-;;;;;;;:37;;;27159:57;;27364:23;27405:15;:22;27391:10;:36;;27364:64;;27443:18;27438:2757;;27477:36;27516:15;27532:10;27516:27;;;;;;;;:::i;:::-;;;;;;;27477:66;;27657:18;:85;;;;27709:14;:25;;;:32;27696:9;:45;;27657:85;27620:122;;27761:18;27756:2429;;27799:22;27824:14;:25;;;27850:9;27824:36;;;;;;;;:::i;:::-;;;;;;;27799:61;;27891:376;;;;;;;;27922:236;;;;;;;;27960:5;:14;;;27922:236;;;;;;;;:::i;:::-;;;;;28000:5;:11;;;-1:-1:-1;;;;;27922:236:19;;;;;28037:5;:16;;;27922:236;;;;28079:5;:12;;;27922:236;;;;28125:10;-1:-1:-1;;;;;27922:236:19;;;;27891:376;;;;28180:14;:22;;;-1:-1:-1;;;;;27891:376:19;;;;;28224:14;:25;;;27891:376;;;27879:388;;28382:1;28367:5;:12;;:16;;;;;28428:9;28440:10;28453:1;28440:14;;;;:::i;:::-;28428:26;;28402:1769;28480:15;:22;28476:1;:26;28402:1769;;;28581:15;28597:1;28581:18;;;;;;;;:::i;:::-;;;;;;;:29;;;28568:42;;28644:15;28660:1;28644:18;;;;;;;;:::i;:::-;;;;;;;:28;;;28632:40;;28802:15;:22;28788:10;:36;;28767:57;;28890:18;28886:78;;;28936:5;;28886:78;29002:15;29018:10;29002:27;;;;;;;;:::i;:::-;;;;;;;28985:44;;29055:14;:24;;;-1:-1:-1;;;;;29055:29:19;29083:1;29055:29;29051:1102;;29250:25;;;;:32;29209:73;;;;;-1:-1:-1;29353:86:19;;29407:5;;29353:86;29472:14;:25;;;29498:9;29472:36;;;;;;;;:::i;:::-;;;;;;;29464:44;;29695:5;:12;;;29643:9;:14;;;:21;;;:64;;;;:::i;:::-;29591:14;;:21;;;;:116;;;;:14;29822:12;;;:16;29967:163;30016:14;29822:5;29591:9;29967:19;:163::i;:::-;29946:184;;29051:1102;28524:3;;;:::i;:::-;;;28402:1769;;;;27781:2404;27756:2429;27463:2732;27438:2757;30285:18;30281:89;;;30326:33;;-1:-1:-1;;;30326:33:19;;;;;;;;;;;30281:89;27080:3296;;;26845:3531;;;;;:::o;19461:7097:20:-;19798:17;;19581:37;;;;19915:1;19896:20;;19892:95;;19952:23;;;19973:1;19952:23;;;;;;;;;19940:10;;19952:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;19932:44;;;;;19461:7097;;;:::o;19892:95::-;20070:27;20187:28;20232:15;-1:-1:-1;;;;;20218:30:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20218:30:20;;20187:61;;20304:9;20299:349;20323:10;:17;20319:1;:21;20299:349;;;20472:16;20441:10;20452:1;20441:13;;;;;;;;:::i;:::-;;;;;;;:18;;;:27;;;:47;;;;;;;;:::i;:::-;;20437:201;;;20622:1;20585:11;20597:21;;;;:::i;:::-;;;20585:34;;;;;;;;:::i;:::-;;;;;;:38;;;;;20437:201;20342:3;;;:::i;:::-;;;20299:349;;;;20758:1;20735:19;:24;20731:99;;20795:23;;;20816:1;20795:23;;;;;;;;;20783:10;;20795:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20775:44;;;;;;;19461:7097;;;:::o;20731:99::-;20911:22;20948:19;-1:-1:-1;;;;;20936:32:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;20936:32:20;;;;;;;;;;;;;;;;20911:57;;21055:29;21087:11;21099:1;21087:14;;;;;;;;:::i;:::-;;;;;;;21055:46;;21187:12;21202:93;21240:10;21264:21;21202:24;:93::i;:::-;21418:16;;;21432:1;21418:16;;;;;;;;;21187:108;;-1:-1:-1;21382:33:20;;21418:16;;;;;;;;;;;;-1:-1:-1;21418:16:20;21382:52;;21539:21;21517:16;21534:1;21517:19;;;;;;;;:::i;:::-;;;;;;:43;;;;;21664:4;21646:7;21654:1;21646:10;;;;;;;;:::i;:::-;;;;;;;:15;;:22;;;;;21708:16;21678:7;21686:1;21678:10;;;;;;;;:::i;:::-;;;;;;;;;;;;:27;:46;21822:1;;21890:2679;21914:19;21910:1;:23;21890:2679;;;22026:22;22051:11;22063:1;22051:14;;;;;;;;:::i;:::-;;;;;;;22026:39;;22164:52;22189:10;22201:14;22164:24;:52::i;:::-;22157:59;;22302:22;22405:9;22400:1586;22424:12;22420:1;:16;22400:1586;;;22549:7;22557:1;22549:10;;;;;;;;:::i;:::-;;;;;;;:15;;;22541:4;:23;22537:1435;;;22663:36;22728:7;22736:1;22728:10;;;;;;;;:::i;:::-;;;;;;;:27;;;22663:114;;22874:22;22899:19;:26;22874:51;;23025:36;23104:14;23121:1;23104:18;;;;:::i;:::-;-1:-1:-1;;;;;23090:33:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23090:33:20;;23025:120;;23237:9;23232:213;23256:14;23252:1;:18;23232:213;;;23400:19;23420:1;23400:22;;;;;;;;:::i;:::-;;;;;;;23375:19;23395:1;23375:22;;;;;;;;:::i;:::-;;;;;;;;;;:47;23272:3;;;:::i;:::-;;;23232:213;;;;23577:14;23539:19;23559:14;23539:35;;;;;;;;:::i;:::-;;;;;;:52;;;;;23709:19;23679:7;23687:1;23679:10;;;;;;;;:::i;:::-;;;;;;;:27;;:49;;;;23845:4;23825:24;;23948:5;;;;;22537:1435;22438:3;;;:::i;:::-;;;22400:1586;;;;24081:17;24076:483;;24194:16;;;24208:1;24194:16;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24194:16:20;24175:35;;24324:14;24302:16;24319:1;24302:19;;;;;;;;:::i;:::-;;;;;;:36;;;;;24463:4;24434:7;24442:12;24434:21;;;;;;;;:::i;:::-;;;;;;;;;;;:33;24528:16;24485:7;24493:14;;;;:::i;:::-;;;24485:23;;;;;;;;:::i;:::-;;;;;;;:40;;:59;;;;24076:483;21940:2629;;21935:3;;;;:::i;:::-;;;21890:2679;;;;24648:19;24632:12;:35;24628:110;;;24703:23;;;24724:1;24703:23;;;;;;;;;24691:10;;24703:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;24683:44;;;;;;;;;;;;19461:7097;;;:::o;24628:110::-;24966:28;25011:15;-1:-1:-1;;;;;24997:30:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24997:30:20;-1:-1:-1;25214:16:20;;;25228:1;25214:16;;;;;;;;24966:61;;-1:-1:-1;25188:23:20;;25214:16;;;;;;;;;;;;-1:-1:-1;25214:16:20;25188:42;;25323:9;25318:923;25342:12;25338:1;:16;25318:923;;;25438:24;25465:7;25473:1;25465:10;;;;;;;;:::i;:::-;;;;;;;:27;;;25438:54;;25583:21;25607:7;:14;25583:38;;25731:1;25714:13;:18;25710:521;;25812:6;25819:1;25812:9;;;;;;;;:::i;:::-;;;;;;25810:11;;;;;:::i;:::-;;;25911:9;;25924:13;;25911:6;;25918:1;;25911:9;;;;:::i;:::-;;;;;;:26;;;;;;;:::i;:::-;;;-1:-1:-1;26029:9:20;26024:193;26048:13;26044:1;:17;26024:193;;;26193:5;:1;26197;26193:5;:::i;:::-;26167:11;26179:7;26187:1;26179:10;;;;;;;;:::i;:::-;;;;;;;26167:23;;;;;;;;:::i;:::-;;;;;;;;;;:31;26063:3;;;:::i;:::-;;;26024:193;;;;25710:521;25361:880;;25356:3;;;;:::i;:::-;;;25318:923;;;;26362:189;26399:10;26431:7;26460:11;26493:6;26500:1;26493:9;;;;;;;;:::i;:::-;;;;;;;26524:6;26531:1;26524:9;;;;;;;;:::i;:::-;;;;;;;26362:15;:189::i;:::-;26355:196;;;;;;;;;;;;;;19461:7097;;;:::o;70905:1330:18:-;71122:15;71105:13;;:32;;;;;;;;:::i;:::-;;71101:1128;;;71213:41;71226:4;:14;;;71242:4;:11;;;71213:12;:41::i;71101:1128::-;71292:14;71275:13;;:31;;;;;;;;:::i;:::-;;71271:958;;;71394:170;71426:4;:10;;;71454:7;71479:4;:14;;;71511:4;:11;;;71540:10;71394:14;:170::i;71271:958::-;71602:15;71585:13;;:32;;;;;;;;:::i;:::-;;71581:648;;;71705:204;71738:4;:10;;;71766:7;71791:4;:14;;;71823:4;:15;;;71856:4;:11;;;71885:10;71705:15;:204::i;71581:648::-;72013:205;72047:4;:10;;;72075:7;72100:4;:14;;;72132:4;:15;;;72165:4;:11;;;72194:10;72013:16;:205::i;79079:1330::-;79275:25;;;;79326:20;;79371:19;;;;79413:17;;;;79515:23;;;;79575:22;;;;79659:39;79655:748;;79779:64;79808:5;79815:4;79821:2;79825:8;79835:7;79779:28;:64::i;:::-;79655:748;;;79943:33;;;79974:1;79943:33;;;;;;;;;79874:48;;79943:33;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;79943:33:18;;-1:-1:-1;;79943:33:18;;;;;;;;;;;79874:116;;80025:154;;;;;;;;80067:5;-1:-1:-1;;;;;80025:154:18;;;;;80090:4;-1:-1:-1;;;;;80025:154:18;;;;;80112:2;-1:-1:-1;;;;;80025:154:18;;;;;80132:8;80025:154;;;;80158:7;80025:154;;;80005:14;80020:1;80005:17;;;;;;;;:::i;:::-;;;;;;:174;;;;80259:23;80271:10;80259:11;:23::i;:::-;-1:-1:-1;;;;;80242:62:18;;80344:1;80322:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;80364:14;80242:150;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;32054:871:20:-;32319:14;32440:9;32425:11;:24;32421:498;;;32474:47;32487:9;32498:11;32511:9;32474:12;:47::i;:::-;32465:56;;32421:498;;;32639:269;32677:49;32690:9;32701:11;32714;32677:12;:49::i;:::-;32744:47;32757:9;32768:11;32781:9;32744:12;:47::i;:::-;32809:7;32834:9;32861:8;32887:7;32639:20;:269::i;:::-;32630:278;;32421:498;32054:871;;;;;;;;;;:::o;22091:3123:19:-;22315:26;;:::i;:::-;22439:22;;22585:28;;22700:31;22696:115;;22795:4;22754:46;;-1:-1:-1;;;22754:46:19;;;;;;;;:::i;22696:115::-;23063:26;23186:9;23181:685;23205:26;23201:1;:30;23181:685;;;23309:18;23330:21;23352:1;23330:24;;;;;;;;:::i;:::-;;;;;;;:35;;;23309:56;;23454:11;23440:10;:25;23436:104;;23492:33;;-1:-1:-1;;;23492:33:19;;;;;;;;;;;23436:104;23633:15;23649:10;23633:27;;;;;;;;:::i;:::-;;;;;;;:37;;;-1:-1:-1;;;;;23633:42:19;23674:1;23633:42;23629:227;;23778:5;:1;23782;23778:5;:::i;:::-;23757:26;;23836:5;;;23629:227;-1:-1:-1;23233:3:19;;;:::i;:::-;;;23181:685;;;-1:-1:-1;23928:23:19;23924:452;;-1:-1:-1;;24082:283:19;;;24109:186;;;;;-1:-1:-1;24082:283:19;;;24109:186;;;;;;;;;;;;;;;;;;;;;;;;;;;24082:283;;24109:186;24082:283;;;;;;;;;;;;;-1:-1:-1;24075:290:19;;-1:-1:-1;24075:290:19;23924:452;24463:10;24455:4;:18;;;;;;;;:::i;:::-;;24451:757;;;24601:162;24655:15;24688:21;24727:22;24748:1;24727:18;:22;:::i;:::-;24601:36;:162::i;:::-;24594:169;;;;;;;24451:757;25006:191;25052:15;25085:21;25124:22;25145:1;25124:18;:22;:::i;:::-;25164:19;25006:28;:191::i;851:937:22:-;-1:-1:-1;;;;;1000:17:22;;;996:77;;1045:17;;-1:-1:-1;;;1045:17:22;;-1:-1:-1;;;;;31756:32:23;;1045:17:22;;;31738:51:23;31711:18;;1045:17:22;31592:203:23;996:77:22;1138:156;;;-1:-1:-1;;;;;34241:15:23;;;1138:156:22;;;34223:34:23;34293:15;;;34273:18;;;34266:43;34325:18;;;;34318:34;;;1138:156:22;;;;;;;;;;34158:18:23;;;;1138:156:22;;;;;;;-1:-1:-1;;;;;1138:156:22;-1:-1:-1;;;1138:156:22;;;1114:190;;-1:-1:-1;;;;1114:10:22;;;;:190;;1138:156;1114:190;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1083:221;;;;1387:2;1382:96;;1412:55;;-1:-1:-1;;;1412:55:22;;-1:-1:-1;;;;;32410:15:23;;;1412:55:22;;;32392:34:23;32462:15;;;32442:18;;;32435:43;32514:15;;32494:18;;;32487:43;1457:1:22;32546:18:23;;;32539:34;32589:19;;;32582:35;;;32326:19;;1412:55:22;32087:536:23;1382:96:22;1492:11;;:16;;;;:37;;;1527:2;1512:4;:11;:17;;1492:37;1488:294;;;1561:4;1550:24;;;;;;;;;;;;:::i;:::-;1545:227;;1601:156;;-1:-1:-1;;;1601:156:22;;-1:-1:-1;;;;;32915:15:23;;;1601:156:22;;;32897:34:23;32967:15;;;32947:18;;;32940:43;33019:15;;32999:18;;;32992:43;33051:18;;;33044:34;;;32831:19;;1601:156:22;32628:456:23;33269:453:20;33421:23;33502:13;:23;;;-1:-1:-1;;;;;33475:50:20;:13;:23;;;-1:-1:-1;;;;;33475:50:20;;;:114;;;-1:-1:-1;33567:22:20;;33541:48;;;;;;;;:::i;:::-;:22;;:48;;;;;;;;:::i;:::-;;;33475:114;:172;;;;33628:13;:19;;;-1:-1:-1;;;;;33605:42:20;:13;:19;;;-1:-1:-1;;;;;33605:42:20;;;33475:172;:240;;;-1:-1:-1;;33691:24:20;;;;;33663;;;:52;;;33269:453::o;25577:510:19:-;25749:23;25832:5;:16;;;25803:9;:14;;;:25;;;:45;;:104;;;;25885:14;:22;;;-1:-1:-1;;;;;25864:43:19;:9;:17;;;-1:-1:-1;;;;;25864:43:19;;;25803:104;:169;;;;25947:14;:25;;;25923:9;:20;;;:49;;25803:169;:226;;;-1:-1:-1;26015:14:19;;25988:41;;;;;;;;:::i;:::-;:14;;:23;:41;;;;;;;;:::i;:::-;;;25803:226;:277;;;;26069:5;:11;;;-1:-1:-1;;;;;26045:35:19;:9;:14;;;:20;;;-1:-1:-1;;;;;26045:35:19;;;25784:296;25577:510;-1:-1:-1;;;;25577:510:19:o;41615:661:20:-;41749:7;41815:26;41844:10;41855:14;41844:26;;;;;;;;:::i;:::-;;;;;;;41815:55;;41952:24;41979:9;:14;;;41952:41;;42114:155;42156:4;:10;;;42180:9;:17;;;42211:4;:14;;;42239:9;:20;;;43280:45;;;;;;;30232:19:23;;;;30339:2;30335:15;;;-1:-1:-1;;30331:24:23;;;30317:12;;;30310:46;30390:15;;;30386:24;;30372:12;;;30365:46;30445:15;;;;30441:24;;;30427:12;;;30420:46;43280:45:20;;;;;;;;;30482:12:23;;;;43280:45:20;;;43270:56;;;;;;43077:256;42114:155;42107:162;41615:661;-1:-1:-1;;;;;41615:661:20:o;27552:3754::-;27947:17;;27790:18;;;;27921:23;28120:34;28138:16;27947:17;28120:34;:::i;:::-;-1:-1:-1;;;;;28091:73:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;28051:113;;28251:39;28327:12;-1:-1:-1;;;;;28293:56:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;28251:98;;28437:34;28561:36;28614:12;-1:-1:-1;;;;;28600:27:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28600:27:20;;28561:66;;28683:9;28678:2503;28702:15;28698:1;:19;28678:2503;;;28813:29;28845:22;28868:1;28845:25;;;;;;;;:::i;:::-;;;;;;;28813:57;;28932:26;28961:10;28972:1;28961:13;;;;;;;;:::i;:::-;;;;;;;28932:42;;29052:21;29077:1;29052:26;29048:2123;;;29227:9;29175:18;29194:28;;;;:::i;:::-;;;29175:48;;;;;;;;:::i;:::-;;;;;;:62;;;;29048:2123;;;29405:18;29426:25;29450:1;29426:21;:25;:::i;:::-;29405:46;;29596:1;-1:-1:-1;;;;;29551:47:20;:15;29567:10;29551:27;;;;;;;;:::i;:::-;;;;;;;:33;;;-1:-1:-1;;;;;29551:47:20;;29547:805;;;29699:21;29749:7;29757:10;29749:19;;;;;;;;:::i;:::-;;;;;;;:36;;;:43;29699:115;;29944:389;;;;;;;;29984:9;:14;;;:20;;;-1:-1:-1;;;;;29944:389:20;;;;;30039:9;:17;;;-1:-1:-1;;;;;29944:389:20;;;;;30090:9;:14;;;:24;;;-1:-1:-1;;;;;29944:389:20;;;;;30160:13;-1:-1:-1;;;;;30146:28:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;30146:28:20;;29944:389;;;;30226:13;-1:-1:-1;;;;;30212:28:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;30212:28:20;;29944:389;;;;30277:9;:20;;;29944:389;;;29914:15;29930:10;29914:27;;;;;;;;:::i;:::-;;;;;;:419;;;;29600:752;29547:805;30447:25;30476:19;30496:10;30476:31;;;;;;;;:::i;:::-;;;;;;:33;;;;;;;;:::i;:::-;;;;30447:63;;30684:9;:14;;;:25;;;30604:15;30620:10;30604:27;;;;;;;;:::i;:::-;;;;;;;:36;;;30641:17;30604:55;;;;;;;;:::i;:::-;;;;;;;;;;:123;30837:14;;:21;;;30932:28;30837:21;30932:20;:28::i;:::-;31132:6;31053:15;31069:10;31053:27;;;;;;;;:::i;:::-;;;;;;;:35;;;31089:17;31053:54;;;;;;;;:::i;:::-;;;;;;:103;;;;;29313:1858;;;29048:2123;28724:2457;;28719:3;;;;:::i;:::-;;;28678:2503;;;-1:-1:-1;31263:18:20;;31283:15;;-1:-1:-1;27552:3754:20;;-1:-1:-1;;;;;;;;;27552:3754:20:o;4227:445:22:-;-1:-1:-1;;;;;4431:17:22;;;4427:77;;4476:17;;-1:-1:-1;;;4476:17:22;;-1:-1:-1;;;;;31756:32:23;;4476:17:22;;;31738:51:23;31711:18;;4476:17:22;31592:203:23;4427:77:22;4514:151;;-1:-1:-1;;;4514:151:22;;-1:-1:-1;;;;;4514:45:22;;;;;:151;;4573:4;;4591:2;;4607:11;;4632:7;;4514:151;;;:::i;31723:870:19:-;31975:26;;:::i;:::-;32134:44;32195:168;32257:15;32290:23;32331:18;32195:44;:168::i;:::-;32472:114;;;;;;;;;;;32533:10;32472:114;;;;;;;;;;-1:-1:-1;32472:114:19;;31723:870;-1:-1:-1;;;;31723:870:19:o;-1:-1:-1:-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:134:23:-;82:20;;111:31;82:20;111:31;:::i;153:415::-;264:8;274:6;328:3;321:4;313:6;309:17;305:27;295:55;;346:1;343;336:12;295:55;-1:-1:-1;369:20:23;;-1:-1:-1;;;;;401:30:23;;398:50;;;444:1;441;434:12;398:50;481:4;473:6;469:17;457:29;;541:3;534:4;524:6;521:1;517:14;509:6;505:27;501:38;498:47;495:67;;;558:1;555;548:12;495:67;153:415;;;;;:::o;573:914::-;640:5;693:3;686:4;678:6;674:17;670:27;660:55;;711:1;708;701:12;660:55;747:6;734:20;773:4;797:90;813:73;883:2;813:73;:::i;:::-;797:90;:::i;:::-;909:3;933:2;928:3;921:15;961:2;956:3;952:12;945:19;;996:2;988:6;984:15;1048:3;1043:2;1037;1034:1;1030:10;1022:6;1018:23;1014:32;1011:41;1008:61;;;1065:1;1062;1055:12;1008:61;1087:1;1108;1118:340;1134:2;1129:3;1126:11;1118:340;;;1215:3;1202:17;-1:-1:-1;;;;;1238:11:23;1235:35;1232:55;;;1283:1;1280;1273:12;1232:55;1312:71;1379:3;1374:2;1360:11;1352:6;1348:24;1344:33;1312:71;:::i;:::-;1300:84;;-1:-1:-1;1404:12:23;;;;1436;;;;1156:1;1147:11;1118:340;;;-1:-1:-1;1476:5:23;;573:914;-1:-1:-1;;;;;;;;573:914:23:o;1492:772::-;1563:5;1616:3;1609:4;1601:6;1597:17;1593:27;1583:55;;1634:1;1631;1624:12;1583:55;1670:6;1657:20;1696:4;1720:90;1736:73;1806:2;1736:73;:::i;1720:90::-;1844:15;;;1875:12;;;;1907:15;;;1941:4;1976:11;;;1964:24;;1960:33;;1957:42;-1:-1:-1;1954:62:23;;;2012:1;2009;2002:12;1954:62;2034:1;2044:191;2058:2;2055:1;2052:9;2044:191;;;2115:45;2156:3;2151;2115:45;:::i;:::-;2103:58;;2181:12;;;;2213;;;;2076:1;2069:9;2044:191;;2269:756;2332:5;2385:3;2378:4;2370:6;2366:17;2362:27;2352:55;;2403:1;2400;2393:12;2352:55;2439:6;2426:20;2465:4;2489:90;2505:73;2575:2;2505:73;:::i;2489:90::-;2613:15;;;2644:12;;;;2676:15;;;2710:4;2745:11;;;2733:24;;2729:33;;2726:42;-1:-1:-1;2723:62:23;;;2781:1;2778;2771:12;2723:62;2803:1;2813:183;2827:2;2824:1;2821:9;2813:183;;;2884:37;2917:3;2912;2884:37;:::i;:::-;2872:50;;2942:12;;;;2974;;;;2845:1;2838:9;2813:183;;3030:530;3072:5;3125:3;3118:4;3110:6;3106:17;3102:27;3092:55;;3143:1;3140;3133:12;3092:55;3179:6;3166:20;-1:-1:-1;;;;;3201:2:23;3198:26;3195:52;;;3227:18;;:::i;:::-;3271:55;3314:2;3295:13;;-1:-1:-1;;3291:27:23;3320:4;3287:38;3271:55;:::i;:::-;3351:2;3342:7;3335:19;3397:3;3390:4;3385:2;3377:6;3373:15;3369:26;3366:35;3363:55;;;3414:1;3411;3404:12;3363:55;3479:2;3472:4;3464:6;3460:17;3453:4;3444:7;3440:18;3427:55;3527:1;3502:16;;;3520:4;3498:27;3491:38;;;;3506:7;3030:530;-1:-1:-1;;;3030:530:23:o;3565:149::-;3639:20;;3688:1;3678:12;;3668:40;;3704:1;3701;3694:12;3719:150;3794:20;;3843:1;3833:12;;3823:40;;3859:1;3856;3849:12;3874:896;3934:5;3982:4;3970:9;3965:3;3961:19;3957:30;3954:50;;;4000:1;3997;3990:12;3954:50;4022:22;;:::i;:::-;4013:31;;4080:9;4067:23;-1:-1:-1;;;;;4150:2:23;4142:6;4139:14;4136:34;;;4166:1;4163;4156:12;4136:34;4193:62;4251:3;4242:6;4231:9;4227:22;4193:62;:::i;:::-;4186:5;4179:77;4288:38;4322:2;4311:9;4307:18;4288:38;:::i;:::-;4283:2;4276:5;4272:14;4265:62;4359:38;4393:2;4382:9;4378:18;4359:38;:::i;:::-;4354:2;4347:5;4343:14;4336:62;4451:2;4440:9;4436:18;4423:32;4407:48;;4480:2;4470:8;4467:16;4464:36;;;4496:1;4493;4486:12;4464:36;4532:47;4575:3;4564:8;4553:9;4549:24;4532:47;:::i;:::-;4527:2;4520:5;4516:14;4509:71;4633:3;4622:9;4618:19;4605:33;4589:49;;4663:2;4653:8;4650:16;4647:36;;;4679:1;4676;4669:12;4647:36;;4716:47;4759:3;4748:8;4737:9;4733:24;4716:47;:::i;:::-;4710:3;4703:5;4699:15;4692:72;;3874:896;;;;:::o;4775:908::-;4839:5;4887:4;4875:9;4870:3;4866:19;4862:30;4859:50;;;4905:1;4902;4895:12;4859:50;4938:2;4932:9;4980:4;4972:6;4968:17;5051:6;5039:10;5036:22;-1:-1:-1;;;;;5003:10:23;5000:34;4997:62;4994:88;;;5062:18;;:::i;:::-;5098:2;5091:22;5131:6;-1:-1:-1;5131:6:23;5161:35;5186:9;5161:35;:::i;:::-;5153:6;5146:51;5249:2;5238:9;5234:18;5221:32;5262:33;5287:7;5262:33;:::i;:::-;5328:7;5323:2;5315:6;5311:15;5304:32;;5397:2;5386:9;5382:18;5369:32;5364:2;5356:6;5352:15;5345:57;5463:2;5452:9;5448:18;5435:32;5430:2;5422:6;5418:15;5411:57;5530:3;5519:9;5515:19;5502:33;5496:3;5488:6;5484:16;5477:59;5588:3;5577:9;5573:19;5560:33;5602;5627:7;5602:33;:::i;:::-;5663:3;5651:16;;;;5644:33;4775:908;;-1:-1:-1;;4775:908:23:o;5688:489::-;5755:5;5803:4;5791:9;5786:3;5782:19;5778:30;5775:50;;;5821:1;5818;5811:12;5775:50;5854:4;5848:11;5898:4;5890:6;5886:17;5969:6;5957:10;5954:22;-1:-1:-1;;;;;5921:10:23;5918:34;5915:62;5912:88;;;5980:18;;:::i;:::-;6016:4;6009:24;6081:23;;6066:39;;6166:2;6151:18;;;6138:32;6121:15;;;6114:57;;;;-1:-1:-1;6051:6:23;5688:489;-1:-1:-1;5688:489:23:o;6182:566::-;6238:5;6286:4;6274:9;6269:3;6265:19;6261:30;6258:50;;;6304:1;6301;6294:12;6258:50;6326:22;;:::i;:::-;6317:31;;6371:35;6396:9;6371:35;:::i;:::-;6364:5;6357:50;6459:2;6448:9;6444:18;6431:32;6472:33;6497:7;6472:33;:::i;:::-;6537:7;6532:2;6525:5;6521:14;6514:31;;6605:2;6594:9;6590:18;6577:32;6572:2;6565:5;6561:14;6554:56;6670:2;6659:9;6655:18;6642:32;6637:2;6630:5;6626:14;6619:56;6736:3;6725:9;6721:19;6708:33;6702:3;6695:5;6691:15;6684:58;6182:566;;;;:::o;6753:1291::-;6815:5;6863:6;6851:9;6846:3;6842:19;6838:32;6835:52;;;6883:1;6880;6873:12;6835:52;6905:22;;:::i;:::-;6896:31;;6950:29;6969:9;6950:29;:::i;:::-;6943:5;6936:44;7012:38;7046:2;7035:9;7031:18;7012:38;:::i;:::-;7007:2;7000:5;6996:14;6989:62;7102:2;7091:9;7087:18;7074:32;-1:-1:-1;;;;;7166:2:23;7158:6;7155:14;7152:34;;;7182:1;7179;7172:12;7152:34;7218:66;7280:3;7271:6;7260:9;7256:22;7218:66;:::i;:::-;7213:2;7206:5;7202:14;7195:90;7338:2;7327:9;7323:18;7310:32;7294:48;;7367:2;7357:8;7354:16;7351:36;;;7383:1;7380;7373:12;7351:36;;7419:76;7491:3;7480:8;7469:9;7465:24;7419:76;:::i;:::-;7414:2;7407:5;7403:14;7396:100;;7529:46;7570:3;7559:9;7555:19;7529:46;:::i;:::-;7523:3;7516:5;7512:15;7505:71;7637:3;7626:9;7622:19;7609:33;7603:3;7596:5;7592:15;7585:58;7704:3;7693:9;7689:19;7676:33;7670:3;7663:5;7659:15;7652:58;7771:3;7760:9;7756:19;7743:33;7737:3;7730:5;7726:15;7719:58;7796:3;7859:2;7848:9;7844:18;7831:32;7826:2;7819:5;7815:14;7808:56;;7883:3;7946:2;7935:9;7931:18;7918:32;7913:2;7906:5;7902:14;7895:56;;7970:3;8033:2;8022:9;8018:18;8005:32;8000:2;7993:5;7989:14;7982:56;;6753:1291;;;;:::o;8049:186::-;8117:20;;-1:-1:-1;;;;;8166:44:23;;8156:55;;8146:83;;8225:1;8222;8215:12;8240:247;8299:6;8352:2;8340:9;8331:7;8327:23;8323:32;8320:52;;;8368:1;8365;8358:12;8320:52;8407:9;8394:23;8426:31;8451:5;8426:31;:::i;8752:1811::-;9163:6;9171;9179;9187;9195;9203;9211;9219;9227;9280:3;9268:9;9259:7;9255:23;9251:33;9248:53;;;9297:1;9294;9287:12;9248:53;9337:9;9324:23;-1:-1:-1;;;;;9407:2:23;9399:6;9396:14;9393:34;;;9423:1;9420;9413:12;9393:34;9446:74;9512:7;9503:6;9492:9;9488:22;9446:74;:::i;:::-;9436:84;;9573:2;9562:9;9558:18;9545:32;9529:48;;9602:2;9592:8;9589:16;9586:36;;;9618:1;9615;9608:12;9586:36;9657:120;9769:7;9758:8;9747:9;9743:24;9657:120;:::i;:::-;9796:8;;-1:-1:-1;9631:146:23;-1:-1:-1;9884:2:23;9869:18;;9856:32;;-1:-1:-1;9900:16:23;;;9897:36;;;9929:1;9926;9919:12;9897:36;9968:120;10080:7;10069:8;10058:9;10054:24;9968:120;:::i;:::-;10107:8;;-1:-1:-1;9942:146:23;-1:-1:-1;10195:2:23;10180:18;;10167:32;;-1:-1:-1;10211:16:23;;;10208:36;;;10240:1;10237;10230:12;10208:36;;10279:120;10391:7;10380:8;10369:9;10365:24;10279:120;:::i;:::-;8752:1811;;;;-1:-1:-1;8752:1811:23;;;;;;10253:146;;10500:3;10485:19;;10472:33;;10552:3;10537:19;;;10524:33;;-1:-1:-1;8752:1811:23;-1:-1:-1;;;;8752:1811:23:o;10568:1206::-;10822:6;10830;10838;10846;10854;10907:2;10895:9;10886:7;10882:23;10878:32;10875:52;;;10923:1;10920;10913:12;10875:52;10963:9;10950:23;-1:-1:-1;;;;;11033:2:23;11025:6;11022:14;11019:34;;;11049:1;11046;11039:12;11019:34;11072:74;11138:7;11129:6;11118:9;11114:22;11072:74;:::i;:::-;11062:84;;11199:2;11188:9;11184:18;11171:32;11155:48;;11228:2;11218:8;11215:16;11212:36;;;11244:1;11241;11234:12;11212:36;11283:120;11395:7;11384:8;11373:9;11369:24;11283:120;:::i;:::-;11422:8;;-1:-1:-1;11257:146:23;-1:-1:-1;11510:2:23;11495:18;;11482:32;;-1:-1:-1;11526:16:23;;;11523:36;;;11555:1;11552;11545:12;11523:36;;11594:120;11706:7;11695:8;11684:9;11680:24;11594:120;:::i;:::-;10568:1206;;;;-1:-1:-1;10568:1206:23;;-1:-1:-1;11733:8:23;;11568:146;10568:1206;-1:-1:-1;;;10568:1206:23:o;11779:519::-;11899:6;11907;11960:2;11948:9;11939:7;11935:23;11931:32;11928:52;;;11976:1;11973;11966:12;11928:52;12016:9;12003:23;-1:-1:-1;;;;;12041:6:23;12038:30;12035:50;;;12081:1;12078;12071:12;12035:50;12120:118;12230:7;12221:6;12210:9;12206:22;12120:118;:::i;:::-;12257:8;;12094:144;;-1:-1:-1;11779:519:23;-1:-1:-1;;;;11779:519:23:o;12818:1529::-;13153:6;13161;13169;13177;13185;13193;13201;13209;13262:3;13250:9;13241:7;13237:23;13233:33;13230:53;;;13279:1;13276;13269:12;13230:53;13319:9;13306:23;-1:-1:-1;;;;;13389:2:23;13381:6;13378:14;13375:34;;;13405:1;13402;13395:12;13375:34;13444:118;13554:7;13545:6;13534:9;13530:22;13444:118;:::i;:::-;13581:8;;-1:-1:-1;13418:144:23;-1:-1:-1;13669:2:23;13654:18;;13641:32;;-1:-1:-1;13685:16:23;;;13682:36;;;13714:1;13711;13704:12;13682:36;13753:120;13865:7;13854:8;13843:9;13839:24;13753:120;:::i;:::-;13892:8;;-1:-1:-1;13727:146:23;-1:-1:-1;13980:2:23;13965:18;;13952:32;;-1:-1:-1;13996:16:23;;;13993:36;;;14025:1;14022;14015:12;13993:36;;14064:120;14176:7;14165:8;14154:9;14150:24;14064:120;:::i;:::-;12818:1529;;;;-1:-1:-1;12818:1529:23;;;;14203:8;;14285:2;14270:18;;14257:32;;14336:3;14321:19;14308:33;;-1:-1:-1;12818:1529:23;-1:-1:-1;;;;12818:1529:23:o;14352:925::-;14530:6;14538;14546;14554;14607:2;14595:9;14586:7;14582:23;14578:32;14575:52;;;14623:1;14620;14613:12;14575:52;14663:9;14650:23;-1:-1:-1;;;;;14733:2:23;14725:6;14722:14;14719:34;;;14749:1;14746;14739:12;14719:34;14788:118;14898:7;14889:6;14878:9;14874:22;14788:118;:::i;:::-;14925:8;;-1:-1:-1;14762:144:23;-1:-1:-1;15013:2:23;14998:18;;14985:32;;-1:-1:-1;15029:16:23;;;15026:36;;;15058:1;15055;15048:12;15026:36;;15097:120;15209:7;15198:8;15187:9;15183:24;15097:120;:::i;:::-;14352:925;;;;-1:-1:-1;15236:8:23;-1:-1:-1;;;;14352:925:23:o;15282:277::-;15349:6;15402:2;15390:9;15381:7;15377:23;15373:32;15370:52;;;15418:1;15415;15408:12;15370:52;15450:9;15444:16;15503:5;15496:13;15489:21;15482:5;15479:32;15469:60;;15525:1;15522;15515:12;15564:180;15623:6;15676:2;15664:9;15655:7;15651:23;15647:32;15644:52;;;15692:1;15689;15682:12;15644:52;-1:-1:-1;15715:23:23;;15564:180;-1:-1:-1;15564:180:23:o;15749:290::-;15818:6;15871:2;15859:9;15850:7;15846:23;15842:32;15839:52;;;15887:1;15884;15877:12;15839:52;15913:16;;-1:-1:-1;;;;;;15958:32:23;;15948:43;;15938:71;;16005:1;16002;15995:12;16044:275;16121:6;16174:2;16162:9;16153:7;16149:23;16145:32;16142:52;;;16190:1;16187;16180:12;16142:52;16229:9;16216:23;16268:2;16261:5;16258:13;16248:41;;16285:1;16282;16275:12;16324:206;16396:6;16449:2;16437:9;16428:7;16424:23;16420:32;16417:52;;;16465:1;16462;16455:12;16417:52;16488:36;16514:9;16488:36;:::i;16535:583::-;16631:6;16684:2;16672:9;16663:7;16659:23;16655:32;16652:52;;;16700:1;16697;16690:12;16652:52;16733:2;16727:9;16775:2;16767:6;16763:15;16844:6;16832:10;16829:22;-1:-1:-1;;;;;16796:10:23;16793:34;16790:62;16787:88;;;16855:18;;:::i;:::-;16891:2;16884:22;16930:23;;16915:39;;17004:2;16989:18;;16976:32;17017:31;16976:32;17017:31;:::i;:::-;17076:2;17064:15;;17057:30;17068:6;16535:583;-1:-1:-1;;;16535:583:23:o;17123:881::-;17296:6;17304;17312;17320;17373:2;17361:9;17352:7;17348:23;17344:32;17341:52;;;17389:1;17386;17379:12;17341:52;17429:9;17416:23;-1:-1:-1;;;;;17499:2:23;17491:6;17488:14;17485:34;;;17515:1;17512;17505:12;17485:34;17538:22;;;;17594:3;17576:16;;;17572:26;17569:46;;;17611:1;17608;17601:12;17569:46;17634:2;;-1:-1:-1;17689:2:23;17674:18;;17661:32;;17705:16;;;17702:36;;;17734:1;17731;17724:12;17702:36;;17773:120;17885:7;17874:8;17863:9;17859:24;17773:120;:::i;:::-;17123:881;;17912:8;;-1:-1:-1;17747:146:23;;17994:2;17979:18;17966:32;;17123:881;-1:-1:-1;;;;17123:881:23:o;18009:400::-;18108:6;18161:2;18149:9;18140:7;18136:23;18132:32;18129:52;;;18177:1;18174;18167:12;18129:52;18217:9;18204:23;-1:-1:-1;;;;;18242:6:23;18239:30;18236:50;;;18282:1;18279;18272:12;18236:50;18305:22;;18361:3;18343:16;;;18339:26;18336:46;;;18378:1;18375;18368:12;18414:247;18507:6;18560:3;18548:9;18539:7;18535:23;18531:33;18528:53;;;18577:1;18574;18567:12;18528:53;18600:55;18647:7;18636:9;18600:55;:::i;18666:253::-;18763:6;18816:2;18804:9;18795:7;18791:23;18787:32;18784:52;;;18832:1;18829;18822:12;18784:52;18855:58;18905:7;18894:9;18855:58;:::i;18924:231::-;19009:6;19062:3;19050:9;19041:7;19037:23;19033:33;19030:53;;;19079:1;19076;19069:12;19030:53;19102:47;19141:7;19130:9;19102:47;:::i;19160:360::-;19251:6;19304:2;19292:9;19283:7;19279:23;19275:32;19272:52;;;19320:1;19317;19310:12;19272:52;19360:9;19347:23;-1:-1:-1;;;;;19385:6:23;19382:30;19379:50;;;19425:1;19422;19415:12;19379:50;19448:66;19506:7;19497:6;19486:9;19482:22;19448:66;:::i;19525:452::-;19618:6;19626;19679:2;19667:9;19658:7;19654:23;19650:32;19647:52;;;19695:1;19692;19685:12;19647:52;19735:9;19722:23;-1:-1:-1;;;;;19760:6:23;19757:30;19754:50;;;19800:1;19797;19790:12;19754:50;19823:22;;19879:2;19861:16;;;19857:25;19854:45;;;19895:1;19892;19885:12;19854:45;19918:2;19967;19952:18;;;;19939:32;;-1:-1:-1;;;19525:452:23:o;20284:435::-;20337:3;20375:5;20369:12;20402:6;20397:3;20390:19;20428:4;20457:2;20452:3;20448:12;20441:19;;20494:2;20487:5;20483:14;20515:1;20525:169;20539:6;20536:1;20533:13;20525:169;;;20600:13;;20588:26;;20634:12;;;;20669:15;;;;20561:1;20554:9;20525:169;;;-1:-1:-1;20710:3:23;;20284:435;-1:-1:-1;;;;;20284:435:23:o;20724:1395::-;20791:3;20829:5;20823:12;20856:6;20851:3;20844:19;20882:4;20923:2;20918:3;20914:12;20948:11;20975;20968:18;;21025:6;21022:1;21018:14;21011:5;21007:26;20995:38;;21067:2;21060:5;21056:14;21088:1;21098:995;21112:6;21109:1;21106:13;21098:995;;;21173:16;;;21161:29;;21213:13;;21325:9;;-1:-1:-1;;;;;21321:18:23;;;21308:32;;21385:11;;;21379:18;21375:27;;21360:13;;;21353:50;21426:4;21475:11;;;21469:18;21465:27;;;21450:13;;;21443:50;21516:4;21559:11;;;21553:18;21249:4;21591:13;;;21584:25;;;21249:4;21516;21636:57;21679:13;;;21553:18;21636:57;:::i;:::-;21622:71;;;;21716:4;21769:2;21765;21761:11;21755:18;21820:4;21812:6;21808:17;21803:2;21797:4;21793:13;21786:40;21853:52;21898:6;21882:14;21853:52;:::i;:::-;21928:4;21973:11;;;21967:18;21952:13;;;;21945:41;;;;-1:-1:-1;;22071:12:23;;;;21839:66;-1:-1:-1;22036:15:23;;;;21134:1;21127:9;21098:995;;;-1:-1:-1;22109:4:23;;20724:1395;-1:-1:-1;;;;;;;20724:1395:23:o;22124:1050::-;22192:3;22230:5;22224:12;22257:6;22252:3;22245:19;22283:4;22312:2;22307:3;22303:12;22296:19;;22349:2;22342:5;22338:14;22370:1;22380:769;22394:6;22391:1;22388:13;22380:769;;;22459:6;22453:13;22495:2;22489:9;22511:41;22549:2;22511:41;:::i;:::-;22565:15;;22619:11;;;22613:18;-1:-1:-1;;;;;22707:21:23;;;22693:12;;;22686:43;22752:4;22800:11;;;22794:18;22790:27;;22776:12;;;22769:49;22841:4;22889:11;;;22883:18;22879:27;;;22865:12;;;22858:49;22930:4;22974:11;;;22968:18;22954:12;;;22947:40;22662:3;23054:11;;;23048:18;23034:12;;;23027:40;23096:4;23087:14;;;;23124:15;;;;22671:1;22409:9;22380:769;;23179:982;23249:3;23287:5;23281:12;23314:6;23309:3;23302:19;23340:4;23369:2;23364:3;23360:12;23353:19;;23406:2;23399:5;23395:14;23427:1;23437:699;23451:6;23448:1;23445:13;23437:699;;;23516:6;23510:13;23536:40;23572:3;23567:2;23561:9;23536:40;:::i;:::-;23615:11;;;23609:18;-1:-1:-1;;;;;23703:21:23;;;23689:12;;;23682:43;23748:4;23792:11;;;23786:18;23772:12;;;23765:40;23828:4;23872:11;;;23866:18;23852:12;;;23845:40;23908:4;23952:11;;;23946:18;23932:12;;;23925:40;23658:3;24036:11;;;24030:18;24026:27;24012:12;;;24005:49;24083:4;24074:14;;;;24111:15;;;;23667:1;23466:9;23437:699;;24166:1146;24235:3;24273:5;24267:12;24300:6;24295:3;24288:19;24326:4;24367:2;24362:3;24358:12;24392:11;24419;24412:18;;24469:6;24466:1;24462:14;24455:5;24451:26;24439:38;;24511:2;24504:5;24500:14;24532:1;24542:744;24556:6;24553:1;24550:13;24542:744;;;24627:5;24621:4;24617:16;24612:3;24605:29;24663:6;24657:13;24693:4;24729:2;24723:9;24717:4;24710:23;24780:2;24776;24772:11;24766:18;24797:49;24842:2;24836:4;24832:13;24818:12;24797:49;:::i;:::-;-1:-1:-1;24869:4:23;24914:11;;;24908:18;24893:13;;;24886:41;24950:4;24995:11;;;24989:18;24974:13;;;24967:41;25031:4;25076:11;;;25070:18;25108:13;;;25101:25;;;25147:59;25192:13;;;25070:18;25147:59;:::i;:::-;25264:12;;;;25139:67;-1:-1:-1;;;25229:15:23;;;;24578:1;24571:9;24542:744;;25317:640;25379:3;25417:5;25411:12;25444:6;25439:3;25432:19;25470:4;25499:2;25494:3;25490:12;25483:19;;25536:2;25529:5;25525:14;25557:1;25567:365;25581:6;25578:1;25575:13;25567:365;;;25646:6;25640:13;25666:46;25708:3;25703:2;25697:9;25666:46;:::i;:::-;25758:11;;;25752:18;-1:-1:-1;;;;;25748:44:23;25780:3;25732:14;;25725:68;25843:4;25835:13;25829:20;25822:4;25813:14;;25806:44;25879:4;25870:14;;;;25907:15;;;;25789:1;25596:9;25567:365;;25962:815;26024:3;26062:5;26056:12;26089:6;26084:3;26077:19;26115:4;26144:2;26139:3;26135:12;26128:19;;26181:2;26174:5;26170:14;26202:1;26212:540;26226:6;26223:1;26220:13;26212:540;;;26291:6;26285:13;26311:40;26347:3;26342:2;26336:9;26311:40;:::i;:::-;26395:11;;;26389:18;-1:-1:-1;;;;;26385:44:23;26371:12;;;26364:66;26453:4;26497:11;;;26491:18;26477:12;;;26470:40;26533:4;26577:11;;;26571:18;26557:12;;;26550:40;26613:4;26657:11;;;26651:18;26637:12;;;26630:40;26417:3;26690:14;;;;26727:15;;;;26426:1;26241:9;26212:540;;26782:473;26847:3;26885:5;26879:12;26912:6;26907:3;26900:19;26938:4;26967:2;26962:3;26958:12;26951:19;;27004:2;26997:5;26993:14;27025:1;27035:195;27049:6;27046:1;27043:13;27035:195;;;27098:50;27144:3;27135:6;27129:13;27098:50;:::i;:::-;27177:4;27168:14;;;;;27205:15;;;;27071:1;27064:9;27035:195;;27260:257;27301:3;27339:5;27333:12;27366:6;27361:3;27354:19;27382:63;27438:6;27431:4;27426:3;27422:14;27415:4;27408:5;27404:16;27382:63;:::i;:::-;27499:2;27478:15;-1:-1:-1;;27474:29:23;27465:39;;;;27506:4;27461:50;;27260:257;-1:-1:-1;;27260:257:23:o;27522:139::-;27602:1;27595:5;27592:12;27582:46;;27608:18;;:::i;:::-;27637;;27522:139::o;27666:138::-;27727:44;27765:5;27727:44;:::i;27809:135::-;27885:1;27878:5;27875:12;27865:46;;27891:18;;:::i;27949:436::-;28015:43;28054:3;28046:5;28040:12;28015:43;:::i;:::-;28104:4;28093:16;;;28087:23;-1:-1:-1;;;;;28180:21:23;;;28164:14;;;28157:45;;;;28251:4;28240:16;;;28234:23;28218:14;;;28211:47;28307:4;28296:16;;;28290:23;28274:14;;;28267:47;28367:4;28356:16;;;28350:23;28346:32;28330:14;;28323:56;27949:436::o;28512:508::-;28669:3;28700;28747:6;28669:3;28781:203;28795:4;28792:1;28789:11;28781:203;;;28859:13;;28845:28;;28896:4;28922:14;;;;28959:15;;;;28815:4;28808:12;28781:203;;;28785:3;;;29009:4;29004:3;29000:14;28993:21;;28512:508;;;;:::o;29025:543::-;29243:13;;29186:3;;29217;;29296:4;29323:15;;;29186:3;29366:175;29380:6;29377:1;29374:13;29366:175;;;29443:13;;29429:28;;29479:14;;;;29516:15;;;;29402:1;29395:9;29366:175;;;-1:-1:-1;29557:5:23;;29025:543;-1:-1:-1;;;;;;29025:543:23:o;30757:274::-;30886:3;30924:6;30918:13;30940:53;30986:6;30981:3;30974:4;30966:6;30962:17;30940:53;:::i;:::-;31009:16;;;;;30757:274;-1:-1:-1;;30757:274:23:o;33089:889::-;-1:-1:-1;;;;;33540:15:23;;;33522:34;;33592:15;;33587:2;33572:18;;33565:43;33502:3;33639:2;33624:18;;33617:31;;;33465:4;;33671:57;;33708:19;;33700:6;33671:57;:::i;:::-;33776:9;33768:6;33764:22;33759:2;33748:9;33744:18;33737:50;33810:44;33847:6;33839;33810:44;:::i;:::-;33891:22;;;33885:3;33870:19;;;33863:51;;;;-1:-1:-1;;33938:1:23;33923:17;;33969:2;33957:15;;33089:889;-1:-1:-1;;;;33089:889:23:o;34995:1162::-;35453:2;35465:21;;;35535:13;;35438:18;;;35557:22;;;35405:4;;35633;;35610:3;35595:19;;;35660:15;;;35405:4;35703:185;35717:6;35714:1;35711:13;35703:185;;;35792:13;;35785:21;35778:29;35766:42;;35828:12;;;;35863:15;;;;35739:1;35732:9;35703:185;;;35707:3;;;35933:9;35928:3;35924:19;35919:2;35908:9;35904:18;35897:47;35967:50;36013:3;36005:6;35967:50;:::i;:::-;35953:64;;;36065:9;36057:6;36053:22;36048:2;36037:9;36033:18;36026:50;36093:58;36144:6;36136;36093:58;:::i;36162:338::-;36403:2;36392:9;36385:21;36366:4;36423:71;36490:2;36479:9;36475:18;36467:6;36423:71;:::i;36505:1762::-;36867:4;36896:2;36925;36914:9;36907:21;36951:71;37018:2;37007:9;37003:18;36995:6;36951:71;:::i;:::-;37041:2;37091:9;37083:6;37079:22;37074:2;37063:9;37059:18;37052:50;37122:6;37157;37151:13;37188:6;37180;37173:22;37223:2;37215:6;37211:15;37204:22;;37282:2;37272:6;37269:1;37265:14;37257:6;37253:27;37249:36;37320:2;37312:6;37308:15;37341:1;37351:887;37365:6;37362:1;37359:13;37351:887;;;37430:19;;;-1:-1:-1;;37426:33:23;37414:46;;37483:13;;37597:9;;-1:-1:-1;;;;;37593:18:23;;;37578:34;;37659:11;;;37653:18;37649:27;;37632:15;;;37625:52;37724:11;;;37718:18;37714:27;37697:15;;;37690:52;37765:4;37808:11;;;37802:18;37519:4;37840:15;;;37833:27;;;37519:4;37765;37887:59;37930:15;;;37802:18;37887:59;:::i;:::-;37873:73;;;;37969:4;38022:2;38018;38014:11;38008:18;37986:40;;38075:6;38067;38063:19;38058:2;38050:6;38046:15;38039:44;;38106:52;38151:6;38135:14;38106:52;:::i;:::-;38216:12;;;;38096:62;-1:-1:-1;;;38181:15:23;;;;37387:1;37380:9;37351:887;;;-1:-1:-1;38255:6:23;;36505:1762;-1:-1:-1;;;;;;;;;;36505:1762:23:o;38272:606::-;38647:2;38636:9;38629:21;38610:4;38673:65;38734:2;38723:9;38719:18;38711:6;38673:65;:::i;:::-;38786:9;38778:6;38774:22;38769:2;38758:9;38754:18;38747:50;38814:58;38865:6;38857;38814:58;:::i;39952:1108::-;40436:25;;;-1:-1:-1;;;;;40535:15:23;;;40530:2;40515:18;;40508:43;40587:15;;40582:2;40567:18;;40560:43;40634:2;40619:18;;40612:34;;;40677:3;40662:19;;40655:35;;;40423:3;40408:19;;40699:45;40737:6;40699:45;:::i;:::-;40775:3;40760:19;;40753:35;;;;40819:3;40804:19;;40797:35;;;;40863:3;40848:19;;40841:35;;;;40907:3;40892:19;;40885:35;;;;40951:3;40936:19;;40929:35;40995:3;40980:19;;40973:36;41040:3;41025:19;;;41018:36;39952:1108;;-1:-1:-1;;;;;39952:1108:23:o;42614:1406::-;43000:4;43029:3;43070:2;43059:9;43055:18;43100:6;43089:9;43082:25;43126:2;43164:1;43160;43155:3;43151:11;43147:19;43214:2;43206:6;43202:15;43197:2;43186:9;43182:18;43175:43;43237:2;43275;43270;43259:9;43255:18;43248:30;43298:6;43333;43327:13;43364:6;43356;43349:22;43402:3;43391:9;43387:19;43380:26;;43441:2;43433:6;43429:15;43415:29;;43462:1;43472:414;43486:6;43483:1;43480:13;43472:414;;;43551:6;43545:13;43571:40;43607:3;43602:2;43596:9;43571:40;:::i;:::-;43655:11;;;43649:18;43645:27;;43631:12;;;43624:49;43713:11;;;43707:18;43693:12;;;43686:40;43749:4;43793:11;;;43787:18;43773:12;;;43766:40;43861:15;;;;43826:12;;;;43508:1;43501:9;43472:414;;;43476:3;;43933:9;43928:3;43924:19;43917:4;43906:9;43902:20;43895:49;43961:53;44010:3;44002:6;43961:53;:::i;:::-;43953:61;42614:1406;-1:-1:-1;;;;;;;;;;;;42614:1406:23:o;44025:2828::-;44496:6;44485:9;44478:25;44568:1;44564;44559:3;44555:11;44551:19;44543:6;44539:32;44534:2;44523:9;44519:18;44512:60;44608:3;44603:2;44592:9;44588:18;44581:31;44459:4;44631:3;44669:6;44663:13;44713:3;44707;44696:9;44692:19;44685:32;44726:67;44789:2;44778:9;44774:18;44759:12;44753:19;-1:-1:-1;;;;;20241:31:23;20229:44;;20167:112;44726:67;44848:2;44834:12;44830:21;44824:28;44871:6;44886:62;44944:2;44933:9;44929:18;44913:14;-1:-1:-1;;;;;20241:31:23;20229:44;;20167:112;44886:62;45003:2;44989:12;44985:21;44979:28;44957:50;;45044:2;45038:3;45027:9;45023:19;45016:31;;45070:74;45139:3;45128:9;45124:19;45108:14;45070:74;:::i;:::-;45056:88;;45199:4;45185:12;45181:23;45175:30;45274:3;45270:8;45258:9;45250:6;45246:22;45242:37;45236:3;45225:9;45221:19;45214:66;45303:69;45365:6;45349:14;45303:69;:::i;:::-;45289:83;;;45427:4;45413:12;45409:23;45403:30;45442:62;45499:3;45488:9;45484:19;45468:14;45442:62;:::i;:::-;;45565:3;45551:12;45547:22;45541:29;45535:3;45524:9;45520:19;45513:58;45632:4;45618:12;45614:23;45608:30;45602:3;45591:9;45587:19;45580:59;45700:4;45686:12;45682:23;45676:30;45670:3;45659:9;45655:19;45648:59;45726:6;45793:2;45779:12;45775:21;45769:28;45763:3;45752:9;45748:19;45741:57;45817:6;45884:2;45870:12;45866:21;45860:28;45854:3;45843:9;45839:19;45832:57;45950:2;45936:12;45932:21;45926:28;45920:3;45909:9;45905:19;45898:57;46004:2;45996:6;45992:15;45986:22;45964:44;;46017:56;46067:4;46056:9;46052:20;46036:14;-1:-1:-1;;;;;28456:44:23;28444:57;;28390:117;46017:56;46122:2;46110:15;;46104:22;-1:-1:-1;;;;;28456:44:23;46185:4;46170:20;;28444:57;46240:4;46228:17;;46222:24;46313:22;;;-1:-1:-1;;46309:31:23;;;46289:18;;;46282:59;46222:24;;-1:-1:-1;;;46364:40:23;46317:6;46222:24;46364:40;:::i;:::-;46350:54;;46453:4;46445:6;46441:17;46435:24;46413:46;;46523:2;46511:9;46503:6;46499:22;46495:31;46490:2;46479:9;46475:18;46468:59;;;46547:40;46580:6;46564:14;46547:40;:::i;:::-;46536:51;;;;46634:9;46629:3;46625:19;46618:4;46607:9;46603:20;46596:49;46668:41;46705:3;46697:6;46668:41;:::i;:::-;46654:55;;46759:9;46751:6;46747:22;46740:4;46729:9;46725:20;46718:52;46787:60;46840:6;46832;46787:60;:::i;47352:288::-;47527:6;47516:9;47509:25;47570:2;47565;47554:9;47550:18;47543:30;47490:4;47590:44;47630:2;47619:9;47615:18;47607:6;47590:44;:::i;47645:589::-;47942:25;;;47929:3;47914:19;;47976:52;48024:2;48009:18;;48001:6;47976:52;:::i;:::-;-1:-1:-1;;;;;48064:32:23;;;;48059:2;48044:18;;48037:60;48128:2;48113:18;;48106:34;;;;48171:3;48156:19;;48149:35;;;;48084:3;48200:19;;;48193:35;48064:32;47645:589;-1:-1:-1;;47645:589:23:o;48239:707::-;48580:25;;;48567:3;48552:19;;48614:52;48662:2;48647:18;;48639:6;48614:52;:::i;:::-;-1:-1:-1;;;;;48740:15:23;;;48735:2;48720:18;;48713:43;48787:2;48772:18;;48765:34;;;;48830:3;48815:19;;48808:35;;;;48693:3;48859:19;;48852:35;;;;48924:15;;;48918:3;48903:19;;;48896:44;;;;48239:707;;-1:-1:-1;;48239:707:23:o;49354:197::-;49494:2;49479:18;;49506:39;49483:9;49527:6;49506:39;:::i;49556:219::-;49705:2;49694:9;49687:21;49668:4;49725:44;49765:2;49754:9;49750:18;49742:6;49725:44;:::i;49780:387::-;49985:2;49974:9;49967:21;49948:4;50005:44;50045:2;50034:9;50030:18;50022:6;50005:44;:::i;:::-;50080:2;50065:18;;50058:34;;;;-1:-1:-1;;;;;;50128:32:23;;;;50123:2;50108:18;;;50101:60;49997:52;49780:387;-1:-1:-1;49780:387:23:o;50867:584::-;50999:4;51005:6;51065:11;51052:25;51159:2;51155:7;51144:8;51128:14;51124:29;51120:43;51100:18;51096:68;51086:96;;51178:1;51175;51168:12;51086:96;51205:33;;51257:20;;;-1:-1:-1;;;;;;51289:30:23;;51286:50;;;51332:1;51329;51322:12;51286:50;51365:4;51353:17;;-1:-1:-1;51416:1:23;51412:14;;;51396;51392:35;51382:46;;51379:66;;;51441:1;51438;51431:12;51456:584;51585:4;51591:6;51651:11;51638:25;51745:2;51741:7;51730:8;51714:14;51710:29;51706:43;51686:18;51682:68;51672:96;;51764:1;51761;51754:12;51672:96;51791:33;;51843:20;;;-1:-1:-1;;;;;;51875:30:23;;51872:50;;;51918:1;51915;51908:12;51872:50;51951:4;51939:17;;-1:-1:-1;52010:4:23;51998:17;;51982:14;51978:38;51968:49;;51965:69;;;52030:1;52027;52020:12;52635:576;52756:4;52762:6;52822:11;52809:25;52916:2;52912:7;52901:8;52885:14;52881:29;52877:43;52857:18;52853:68;52843:96;;52935:1;52932;52925:12;52843:96;52962:33;;53014:20;;;-1:-1:-1;;;;;;53046:30:23;;53043:50;;;53089:1;53086;53079:12;53043:50;53122:4;53110:17;;-1:-1:-1;53181:4:23;53169:17;;53153:14;53149:38;53139:49;;53136:69;;;53201:1;53198;53191:12;53216:521;53293:4;53299:6;53359:11;53346:25;53453:2;53449:7;53438:8;53422:14;53418:29;53414:43;53394:18;53390:68;53380:96;;53472:1;53469;53462:12;53380:96;53499:33;;53551:20;;;-1:-1:-1;;;;;;53583:30:23;;53580:50;;;53626:1;53623;53616:12;53580:50;53659:4;53647:17;;-1:-1:-1;53690:14:23;53686:27;;;53676:38;;53673:58;;;53727:1;53724;53717:12;53742:328;53839:4;53897:11;53884:25;53991:2;53987:7;53976:8;53960:14;53956:29;53952:43;53932:18;53928:68;53918:96;;54010:1;54007;54000:12;54075:332;54175:4;54233:11;54220:25;54327:3;54323:8;54312;54296:14;54292:29;54288:44;54268:18;54264:69;54254:97;;54347:1;54344;54337:12;55077:253;55149:2;55143:9;55191:4;55179:17;;-1:-1:-1;;;;;55211:34:23;;55247:22;;;55208:62;55205:88;;;55273:18;;:::i;:::-;55309:2;55302:22;55077:253;:::o;55335:255::-;55407:2;55401:9;55449:6;55437:19;;-1:-1:-1;;;;;55471:34:23;;55507:22;;;55468:62;55465:88;;;55533:18;;:::i;55595:275::-;55666:2;55660:9;55731:2;55712:13;;-1:-1:-1;;55708:27:23;55696:40;;-1:-1:-1;;;;;55751:34:23;;55787:22;;;55748:62;55745:88;;;55813:18;;:::i;:::-;55849:2;55842:22;55595:275;;-1:-1:-1;55595:275:23:o;55875:213::-;55965:4;-1:-1:-1;;;;;55990:6:23;55987:30;55984:56;;;56020:18;;:::i;:::-;-1:-1:-1;56065:1:23;56061:14;56077:4;56057:25;;55875:213::o;56093:331::-;56198:9;56209;56251:8;56239:10;56236:24;56233:44;;;56273:1;56270;56263:12;56233:44;56302:6;56292:8;56289:20;56286:40;;;56322:1;56319;56312:12;56286:40;-1:-1:-1;;56348:23:23;;;56393:25;;;;;-1:-1:-1;56093:331:23:o;56429:128::-;56469:3;56500:1;56496:6;56493:1;56490:13;56487:39;;;56506:18;;:::i;:::-;-1:-1:-1;56542:9:23;;56429:128::o;56562:204::-;56600:3;56636:4;56633:1;56629:12;56668:4;56665:1;56661:12;56703:3;56697:4;56693:14;56688:3;56685:23;56682:49;;;56711:18;;:::i;:::-;56747:13;;56562:204;-1:-1:-1;;;56562:204:23:o;56771:120::-;56811:1;56837;56827:35;;56842:18;;:::i;:::-;-1:-1:-1;56876:9:23;;56771:120::o;56896:165::-;56934:1;56968:4;56965:1;56961:12;56992:3;56982:37;;56999:18;;:::i;:::-;57051:3;57044:4;57041:1;57037:12;57033:22;57028:27;;;56896:165;;;;:::o;57066:168::-;57106:7;57172:1;57168;57164:6;57160:14;57157:1;57154:21;57149:1;57142:9;57135:17;57131:45;57128:71;;;57179:18;;:::i;:::-;-1:-1:-1;57219:9:23;;57066:168::o;57239:125::-;57279:4;57307:1;57304;57301:8;57298:34;;;57312:18;;:::i;:::-;-1:-1:-1;57349:9:23;;57239:125::o;57369:195::-;57407:4;57444;57441:1;57437:12;57476:4;57473:1;57469:12;57501:3;57496;57493:12;57490:38;;;57508:18;;:::i;:::-;57545:13;;;57369:195;-1:-1:-1;;;57369:195:23:o;57569:1686::-;57815:9;57850:94;57866:77;57936:6;57866:77;:::i;57850:94::-;57966:3;57990:6;57985:3;57978:19;58016:4;58045:2;58040:3;58036:12;58029:19;;58068:5;58116:14;58106:6;58103:1;58099:14;58092:5;58088:26;58085:46;58082:66;;;58144:1;58141;58134:12;58082:66;58166:1;58176:1046;58190:6;58187:1;58184:13;58176:1046;;;58271:3;58258:17;-1:-1:-1;;;;;58294:11:23;58291:35;58288:55;;;58339:1;58336;58329:12;58288:55;58366:23;;58431:14;58424:4;58416:13;;58412:34;58402:62;;58460:1;58457;58450:12;58402:62;58500:2;58487:16;58529:90;58545:73;58615:2;58545:73;:::i;58529:90::-;58663:17;;;58702:14;;;;58742:11;;;58802:14;58788:1;58784:10;;;58776:19;;58772:28;;58769:48;58766:68;;;58830:1;58827;58820:12;58766:68;58858:1;58847:12;;58872:245;58888:2;58883:3;58880:11;58872:245;;;58959:61;59005:14;58998:5;58959:61;:::i;:::-;58945:76;;58910:1;58901:11;;;;;59047:14;;;;59098:4;59087:16;58872:245;;;-1:-1:-1;59130:18:23;;-1:-1:-1;;;59168:12:23;;;;59200;;;;58212:1;58205:9;58176:1046;;;-1:-1:-1;59244:5:23;;57569:1686;-1:-1:-1;;;;;;57569:1686:23:o;59260:2333::-;59446:9;59481:94;59497:77;59567:6;59497:77;:::i;59481:94::-;59609:19;;;59647:4;59667:12;;;;59597:3;59699:5;59723:1;59768:14;59750:15;;;59739:27;;59736:47;59733:67;;;59796:1;59793;59786:12;59733:67;59818:1;59828:1732;59842:6;59839:1;59836:13;59828:1732;;;59923:3;59910:17;-1:-1:-1;;;;;60000:2:23;59987:11;59984:19;59981:39;;;60016:1;60013;60006:12;59981:39;60054:11;60047:5;60043:23;60033:33;;60111:4;60106:2;60090:14;60086:23;60082:34;60079:54;;;60129:1;60126;60119:12;60079:54;60161:22;;:::i;:::-;60225:2;60212:16;60203:7;60196:33;60278:2;60274;60270:11;60257:25;60317:1;60308:7;60305:14;60295:42;;60333:1;60330;60323:12;60295:42;60357:16;;;60350:33;60406:2;60459:11;;;60446:25;60428:16;;;60421:51;60495:2;60548:11;;;60535:25;60517:16;;;60510:51;60584:3;60627:11;;;60614:25;60655:14;;;60652:34;;;60682:1;60679;60672:12;60652:34;60709:15;;;;;60766:14;60759:4;60751:13;;60747:34;60737:62;;60795:1;60792;60785:12;60737:62;60835:2;60822:16;60812:26;;60864:90;60880:73;60950:2;60880:73;:::i;60864:90::-;60998:17;;;61037:14;;;;61077:11;;;61138:14;61119:11;;;61111:20;;61107:29;;61104:49;61101:69;;;61166:1;61163;61156:12;61101:69;61194:1;61183:12;;61208:201;61224:2;61219:3;61216:11;61208:201;;;61295:19;;61281:34;;61246:1;61237:11;;;;;61341:14;;;;61381;;61208:201;;;-1:-1:-1;61429:16:23;;;61422:31;;;;-1:-1:-1;61466:20:23;;-1:-1:-1;;61506:12:23;;;;61538;;;;59864:1;59857:9;59828:1732;;;-1:-1:-1;61582:5:23;;59260:2333;-1:-1:-1;;;;;;;59260:2333:23:o;61598:211::-;61712:9;61749:54;61788:14;61781:5;61749:54;:::i;61814:217::-;61932:9;61969:56;62010:14;62003:5;61969:56;:::i;62036:258::-;62108:1;62118:113;62132:6;62129:1;62126:13;62118:113;;;62208:11;;;62202:18;62189:11;;;62182:39;62154:2;62147:10;62118:113;;;62249:6;62246:1;62243:13;62240:48;;;-1:-1:-1;;62284:1:23;62266:16;;62259:27;62036:258::o;62299:136::-;62338:3;62366:5;62356:39;;62375:18;;:::i;:::-;-1:-1:-1;;;62411:18:23;;62299:136::o;62440:135::-;62479:3;-1:-1:-1;;62500:17:23;;62497:43;;;62520:18;;:::i;:::-;-1:-1:-1;62567:1:23;62556:13;;62440:135::o;62580:157::-;62610:1;62644:4;62641:1;62637:12;62668:3;62658:37;;62675:18;;:::i;:::-;62727:3;62720:4;62717:1;62713:12;62709:22;62704:27;;;62580:157;;;;:::o;62742:127::-;62803:10;62798:3;62794:20;62791:1;62784:31;62834:4;62831:1;62824:15;62858:4;62855:1;62848:15;62874:127;62935:10;62930:3;62926:20;62923:1;62916:31;62966:4;62963:1;62956:15;62990:4;62987:1;62980:15;63006:127;63067:10;63062:3;63058:20;63055:1;63048:31;63098:4;63095:1;63088:15;63122:4;63119:1;63112:15;63138:127;63199:10;63194:3;63190:20;63187:1;63180:31;63230:4;63227:1;63220:15;63254:4;63251:1;63244:15;63270:127;63331:10;63326:3;63322:20;63319:1;63312:31;63362:4;63359:1;63352:15;63386:4;63383:1;63376:15;63402:120;63490:1;63483:5;63480:12;63470:46;;63496:18;;:::i;63527:131::-;-1:-1:-1;;;;;63602:31:23;;63592:42;;63582:70;;63648:1;63645;63638:12",
    "linkReferences": {},
    "immutableReferences": {
      "3302": [
        {
          "start": 8422,
          "length": 32
        }
      ],
      "3304": [
        {
          "start": 8459,
          "length": 32
        }
      ],
      "3306": [
        {
          "start": 8380,
          "length": 32
        }
      ],
      "3308": [
        {
          "start": 10327,
          "length": 32
        },
        {
          "start": 15744,
          "length": 32
        }
      ],
      "3310": [
        {
          "start": 8984,
          "length": 32
        },
        {
          "start": 15854,
          "length": 32
        }
      ],
      "3312": [
        {
          "start": 6696,
          "length": 32
        },
        {
          "start": 10630,
          "length": 32
        }
      ],
      "3314": [
        {
          "start": 8336,
          "length": 32
        }
      ],
      "3316": [
        {
          "start": 8540,
          "length": 32
        }
      ],
      "3319": [
        {
          "start": 2479,
          "length": 32
        },
        {
          "start": 19948,
          "length": 32
        }
      ],
      "3321": [
        {
          "start": 19997,
          "length": 32
        }
      ]
    }
  },
  "ast": {
    "absolutePath": "/Users/jameswenzel/dev/consideration/reference/ReferenceConsideration.sol",
    "id": 2239,
    "exportedSymbols": {
      "AdvancedOrder": [
        1084
      ],
      "BasicOrderParameters": [
        1033
      ],
      "BasicOrderRouteType": [
        900
      ],
      "BatchExecution": [
        1143
      ],
      "ConsiderationInterface": [
        760
      ],
      "ConsiderationItem": [
        971
      ],
      "CriteriaResolver": [
        1106
      ],
      "Execution": [
        1128
      ],
      "Fulfillment": [
        1115
      ],
      "FulfillmentComponent": [
        1120
      ],
      "ItemType": [
        907
      ],
      "OfferItem": [
        957
      ],
      "Order": [
        1072
      ],
      "OrderComponents": [
        945
      ],
      "OrderParameters": [
        1066
      ],
      "OrderStatus": [
        1093
      ],
      "OrderToExecute": [
        10590
      ],
      "OrderType": [
        868
      ],
      "ReferenceConsideration": [
        2238
      ],
      "ReferenceConsiderationInternal": [
        6916
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:41184:13",
    "nodes": [
      {
        "id": 1151,
        "nodeType": "PragmaDirective",
        "src": "32:22:13",
        "literals": [
          "solidity",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 1153,
        "nodeType": "ImportDirective",
        "src": "75:93:13",
        "absolutePath": "/Users/jameswenzel/dev/consideration/contracts/interfaces/ConsiderationInterface.sol",
        "file": "contracts/interfaces/ConsiderationInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2239,
        "sourceUnit": 761,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1152,
              "name": "ConsiderationInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "88:22:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1157,
        "nodeType": "ImportDirective",
        "src": "189:108:13",
        "absolutePath": "/Users/jameswenzel/dev/consideration/contracts/lib/ConsiderationEnums.sol",
        "file": "contracts/lib/ConsiderationEnums.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2239,
        "sourceUnit": 911,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1154,
              "name": "OrderType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "202:9:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1155,
              "name": "ItemType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "217:8:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1156,
              "name": "BasicOrderRouteType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "231:19:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1171,
        "nodeType": "ImportDirective",
        "src": "318:309:13",
        "absolutePath": "/Users/jameswenzel/dev/consideration/contracts/lib/ConsiderationStructs.sol",
        "file": "contracts/lib/ConsiderationStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2239,
        "sourceUnit": 1150,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1158,
              "name": "BasicOrderParameters",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "331:20:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1159,
              "name": "OfferItem",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "357:9:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1160,
              "name": "ConsiderationItem",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "372:17:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1161,
              "name": "OrderParameters",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "395:15:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1162,
              "name": "OrderComponents",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "416:15:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1163,
              "name": "Fulfillment",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "437:11:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1164,
              "name": "FulfillmentComponent",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "454:20:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1165,
              "name": "Execution",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "480:9:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1166,
              "name": "Order",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "495:5:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1167,
              "name": "AdvancedOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "506:13:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1168,
              "name": "OrderStatus",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "525:11:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1169,
              "name": "CriteriaResolver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "542:16:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1170,
              "name": "BatchExecution",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "564:14:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1173,
        "nodeType": "ImportDirective",
        "src": "648:94:13",
        "absolutePath": "/Users/jameswenzel/dev/consideration/reference/lib/ReferenceConsiderationInternal.sol",
        "file": "./lib/ReferenceConsiderationInternal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2239,
        "sourceUnit": 6917,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1172,
              "name": "ReferenceConsiderationInternal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "661:30:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1175,
        "nodeType": "ImportDirective",
        "src": "744:73:13",
        "absolutePath": "/Users/jameswenzel/dev/consideration/reference/lib/ReferenceConsiderationStructs.sol",
        "file": "./lib/ReferenceConsiderationStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2239,
        "sourceUnit": 10591,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1174,
              "name": "OrderToExecute",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "753:14:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2238,
        "nodeType": "ContractDefinition",
        "src": "1503:39712:13",
        "nodes": [
          {
            "id": 1190,
            "nodeType": "FunctionDefinition",
            "src": "2038:103:13",
            "body": {
              "id": 1189,
              "nodeType": "Block",
              "src": "2139:2:13",
              "statements": []
            },
            "documentation": {
              "id": 1181,
              "nodeType": "StructuredDocumentation",
              "src": "1607:426:13",
              "text": " @notice Derive and set hashes, reference chainId, and associated domain\n         separator during deployment.\n @param conduitController           A contract that deploys conduits, or\n                                    proxies that may optionally be used to\n                                    transfer approved ERC20+721+1155\n                                    tokens."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1186,
                    "name": "conduitController",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1183,
                    "src": "2116:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1187,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1185,
                  "name": "ReferenceConsiderationInternal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6916,
                  "src": "2085:30:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "2085:49:13"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1183,
                  "mutability": "mutable",
                  "name": "conduitController",
                  "nameLocation": "2058:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "2050:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2050:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2049:27:13"
            },
            "returnParameters": {
              "id": 1188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2139:0:13"
            },
            "scope": 2238,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1557,
            "nodeType": "FunctionDefinition",
            "src": "3787:6914:13",
            "baseFunctions": [
              546
            ],
            "body": {
              "id": 1556,
              "nodeType": "Block",
              "src": "3973:6728:13",
              "statements": [
                {
                  "assignments": [
                    1206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1206,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "4083:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1556,
                      "src": "4063:25:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                        "typeString": "enum BasicOrderRouteType"
                      },
                      "typeName": {
                        "id": 1205,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1204,
                          "name": "BasicOrderRouteType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 900,
                          "src": "4063:19:13"
                        },
                        "referencedDeclaration": 900,
                        "src": "4063:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                          "typeString": "enum BasicOrderRouteType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1216,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1210,
                                "name": "parameters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1194,
                                "src": "4130:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                  "typeString": "struct BasicOrderParameters calldata"
                                }
                              },
                              "id": 1211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "basicOrderType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1012,
                              "src": "4130:25:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BasicOrderType_$893",
                                "typeString": "enum BasicOrderType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_BasicOrderType_$893",
                                "typeString": "enum BasicOrderType"
                              }
                            ],
                            "id": 1209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4124:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 1208,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "4124:5:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4124:32:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 1213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4159:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "4124:36:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1207,
                      "name": "BasicOrderRouteType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 900,
                      "src": "4091:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_BasicOrderRouteType_$900_$",
                        "typeString": "type(enum BasicOrderRouteType)"
                      }
                    },
                    "id": 1215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4091:79:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                      "typeString": "enum BasicOrderRouteType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4063:107:13"
                },
                {
                  "assignments": [
                    1219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1219,
                      "mutability": "mutable",
                      "name": "orderType",
                      "nameLocation": "4191:9:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1556,
                      "src": "4181:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OrderType_$868",
                        "typeString": "enum OrderType"
                      },
                      "typeName": {
                        "id": 1218,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1217,
                          "name": "OrderType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 868,
                          "src": "4181:9:13"
                        },
                        "referencedDeclaration": 868,
                        "src": "4181:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OrderType_$868",
                          "typeString": "enum OrderType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1229,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1223,
                                "name": "parameters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1194,
                                "src": "4219:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                  "typeString": "struct BasicOrderParameters calldata"
                                }
                              },
                              "id": 1224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "basicOrderType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1012,
                              "src": "4219:25:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BasicOrderType_$893",
                                "typeString": "enum BasicOrderType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_BasicOrderType_$893",
                                "typeString": "enum BasicOrderType"
                              }
                            ],
                            "id": 1222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4213:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 1221,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "4213:5:13",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4213:32:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4248:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "4213:36:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1220,
                      "name": "OrderType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 868,
                      "src": "4203:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_OrderType_$868_$",
                        "typeString": "type(enum OrderType)"
                      }
                    },
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4203:47:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OrderType_$868",
                      "typeString": "enum OrderType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4181:69:13"
                },
                {
                  "assignments": [
                    1232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1232,
                      "mutability": "mutable",
                      "name": "additionalRecipientsItemType",
                      "nameLocation": "4351:28:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1556,
                      "src": "4342:37:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ItemType_$907",
                        "typeString": "enum ItemType"
                      },
                      "typeName": {
                        "id": 1231,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1230,
                          "name": "ItemType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 907,
                          "src": "4342:8:13"
                        },
                        "referencedDeclaration": 907,
                        "src": "4342:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ItemType_$907",
                          "typeString": "enum ItemType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1244,
                  "initialValue": {
                    "arguments": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1236,
                                "name": "route",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1206,
                                "src": "4410:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                                  "typeString": "enum BasicOrderRouteType"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                                  "typeString": "enum BasicOrderRouteType"
                                }
                              ],
                              "id": 1235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4404:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 1234,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "4404:5:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4404:12:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4419:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4404:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "hexValue": "30",
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4427:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "4404:24:13",
                        "trueExpression": {
                          "hexValue": "31",
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4423:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1233,
                      "name": "ItemType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 907,
                      "src": "4382:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ItemType_$907_$",
                        "typeString": "type(enum ItemType)"
                      }
                    },
                    "id": 1243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4382:56:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ItemType_$907",
                      "typeString": "enum ItemType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4342:96:13"
                },
                {
                  "id": 1278,
                  "nodeType": "Block",
                  "src": "4449:571:13",
                  "statements": [
                    {
                      "assignments": [
                        1246
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1246,
                          "mutability": "mutable",
                          "name": "correctPayableStatus",
                          "nameLocation": "4540:20:13",
                          "nodeType": "VariableDeclaration",
                          "scope": 1278,
                          "src": "4535:25:13",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 1245,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "4535:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1268,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1247,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4564:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "4564:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1249,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4577:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4564:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_ItemType_$907",
                                  "typeString": "enum ItemType"
                                },
                                "id": 1254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1251,
                                  "name": "additionalRecipientsItemType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1232,
                                  "src": "4598:28:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ItemType_$907",
                                    "typeString": "enum ItemType"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1252,
                                    "name": "ItemType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 907,
                                    "src": "4630:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ItemType_$907_$",
                                      "typeString": "type(enum ItemType)"
                                    }
                                  },
                                  "id": 1253,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "NATIVE",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 901,
                                  "src": "4630:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ItemType_$907",
                                    "typeString": "enum ItemType"
                                  }
                                },
                                "src": "4598:47:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4564:81:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1256,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4563:83:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1257,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4667:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1258,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "4667:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4680:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4667:14:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_ItemType_$907",
                                  "typeString": "enum ItemType"
                                },
                                "id": 1264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1261,
                                  "name": "additionalRecipientsItemType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1232,
                                  "src": "4705:28:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ItemType_$907",
                                    "typeString": "enum ItemType"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1262,
                                    "name": "ItemType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 907,
                                    "src": "4737:8:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_ItemType_$907_$",
                                      "typeString": "type(enum ItemType)"
                                    }
                                  },
                                  "id": 1263,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "ERC20",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 902,
                                  "src": "4737:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_ItemType_$907",
                                    "typeString": "enum ItemType"
                                  }
                                },
                                "src": "4705:46:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4667:84:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1266,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4666:86:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4563:189:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4535:217:13"
                    },
                    {
                      "condition": {
                        "id": 1270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4921:21:13",
                        "subExpression": {
                          "id": 1269,
                          "name": "correctPayableStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1246,
                          "src": "4922:20:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1277,
                      "nodeType": "IfStatement",
                      "src": "4917:93:13",
                      "trueBody": {
                        "id": 1276,
                        "nodeType": "Block",
                        "src": "4944:66:13",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1272,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4985:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1273,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "4985:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1271,
                                "name": "InvalidMsgValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 510,
                                "src": "4969:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256) pure"
                                }
                              },
                              "id": 1274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4969:26:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1275,
                            "nodeType": "RevertStatement",
                            "src": "4962:33:13"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "assignments": [
                    1280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1280,
                      "mutability": "mutable",
                      "name": "additionalRecipientsToken",
                      "nameLocation": "5118:25:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1556,
                      "src": "5110:33:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1279,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5110:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1292,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 1286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1283,
                            "name": "route",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1206,
                            "src": "5152:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                              "typeString": "enum BasicOrderRouteType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                              "typeString": "enum BasicOrderRouteType"
                            }
                          ],
                          "id": 1282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5146:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1281,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "5146:5:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5146:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "33",
                        "id": 1285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5161:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "src": "5146:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 1289,
                        "name": "parameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1194,
                        "src": "5213:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                          "typeString": "struct BasicOrderParameters calldata"
                        }
                      },
                      "id": 1290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "considerationToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 995,
                      "src": "5213:29:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5146:96:13",
                    "trueExpression": {
                      "expression": {
                        "id": 1287,
                        "name": "parameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1194,
                        "src": "5177:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                          "typeString": "struct BasicOrderParameters calldata"
                        }
                      },
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offerToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1005,
                      "src": "5177:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5110:132:13"
                },
                {
                  "assignments": [
                    1295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1295,
                      "mutability": "mutable",
                      "name": "receivedItemType",
                      "nameLocation": "5262:16:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1556,
                      "src": "5253:25:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ItemType_$907",
                        "typeString": "enum ItemType"
                      },
                      "typeName": {
                        "id": 1294,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1293,
                          "name": "ItemType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 907,
                          "src": "5253:8:13"
                        },
                        "referencedDeclaration": 907,
                        "src": "5253:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ItemType_$907",
                          "typeString": "enum ItemType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1321,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 1301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1298,
                            "name": "route",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1206,
                            "src": "5287:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                              "typeString": "enum BasicOrderRouteType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                              "typeString": "enum BasicOrderRouteType"
                            }
                          ],
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5281:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1296,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "5281:5:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5281:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 1300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5296:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "5281:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                              "typeString": "enum BasicOrderRouteType"
                            },
                            "id": 1313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1310,
                              "name": "route",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1206,
                              "src": "5371:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                                "typeString": "enum BasicOrderRouteType"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 1311,
                                "name": "BasicOrderRouteType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 900,
                                "src": "5380:19:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_BasicOrderRouteType_$900_$",
                                  "typeString": "type(enum BasicOrderRouteType)"
                                }
                              },
                              "id": 1312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ERC20_TO_ERC721",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 896,
                              "src": "5380:35:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                                "typeString": "enum BasicOrderRouteType"
                              }
                            },
                            "src": "5371:44:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "expression": {
                              "id": 1316,
                              "name": "ItemType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "5475:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ItemType_$907_$",
                                "typeString": "type(enum ItemType)"
                              }
                            },
                            "id": 1317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NATIVE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 901,
                            "src": "5475:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ItemType_$907",
                              "typeString": "enum ItemType"
                            }
                          },
                          "id": 1318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "5371:119:13",
                          "trueExpression": {
                            "expression": {
                              "id": 1314,
                              "name": "ItemType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "5438:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ItemType_$907_$",
                                "typeString": "type(enum ItemType)"
                              }
                            },
                            "id": 1315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 902,
                            "src": "5438:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ItemType_$907",
                              "typeString": "enum ItemType"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ItemType_$907",
                            "typeString": "enum ItemType"
                          }
                        }
                      ],
                      "id": 1319,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5353:151:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ItemType_$907",
                        "typeString": "enum ItemType"
                      }
                    },
                    "id": 1320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5281:223:13",
                    "trueExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 1308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1305,
                                "name": "route",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1206,
                                "src": "5327:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                                  "typeString": "enum BasicOrderRouteType"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                                  "typeString": "enum BasicOrderRouteType"
                                }
                              ],
                              "id": 1304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5321:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 1303,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "5321:5:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5321:12:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5336:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "5321:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1302,
                        "name": "ItemType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 907,
                        "src": "5312:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ItemType_$907_$",
                          "typeString": "type(enum ItemType)"
                        }
                      },
                      "id": 1309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5312:26:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ItemType_$907",
                        "typeString": "enum ItemType"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ItemType_$907",
                      "typeString": "enum ItemType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5253:251:13"
                },
                {
                  "assignments": [
                    1324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1324,
                      "mutability": "mutable",
                      "name": "offeredItemType",
                      "nameLocation": "5524:15:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1556,
                      "src": "5515:24:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ItemType_$907",
                        "typeString": "enum ItemType"
                      },
                      "typeName": {
                        "id": 1323,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1322,
                          "name": "ItemType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 907,
                          "src": "5515:8:13"
                        },
                        "referencedDeclaration": 907,
                        "src": "5515:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ItemType_$907",
                          "typeString": "enum ItemType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1356,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 1330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1327,
                            "name": "route",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1206,
                            "src": "5548:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                              "typeString": "enum BasicOrderRouteType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                              "typeString": "enum BasicOrderRouteType"
                            }
                          ],
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5542:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1325,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "5542:5:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5542:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "33",
                        "id": 1329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5557:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "src": "5542:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 1338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1335,
                                  "name": "route",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1206,
                                  "src": "5626:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                                    "typeString": "enum BasicOrderRouteType"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                                    "typeString": "enum BasicOrderRouteType"
                                  }
                                ],
                                "id": 1334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5620:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 1333,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5620:5:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5620:12:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5635:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5620:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 1348,
                                      "name": "route",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1206,
                                      "src": "5719:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                                        "typeString": "enum BasicOrderRouteType"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                                        "typeString": "enum BasicOrderRouteType"
                                      }
                                    ],
                                    "id": 1347,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5713:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint8_$",
                                      "typeString": "type(uint8)"
                                    },
                                    "typeName": {
                                      "id": 1346,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5713:5:13",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1349,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5713:12:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 1350,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5728:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "5713:16:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 1345,
                              "name": "ItemType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "5704:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ItemType_$907_$",
                                "typeString": "type(enum ItemType)"
                              }
                            },
                            "id": 1352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5704:26:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ItemType_$907",
                              "typeString": "enum ItemType"
                            }
                          },
                          "id": 1353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "5620:110:13",
                          "trueExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1342,
                                    "name": "route",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1206,
                                    "src": "5674:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                                      "typeString": "enum BasicOrderRouteType"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                                      "typeString": "enum BasicOrderRouteType"
                                    }
                                  ],
                                  "id": 1341,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5668:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 1340,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5668:5:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5668:12:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 1339,
                              "name": "ItemType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "5659:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ItemType_$907_$",
                                "typeString": "type(enum ItemType)"
                              }
                            },
                            "id": 1344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5659:22:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ItemType_$907",
                              "typeString": "enum ItemType"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ItemType_$907",
                            "typeString": "enum ItemType"
                          }
                        }
                      ],
                      "id": 1354,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5602:142:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ItemType_$907",
                        "typeString": "enum ItemType"
                      }
                    },
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5542:202:13",
                    "trueExpression": {
                      "expression": {
                        "id": 1331,
                        "name": "ItemType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 907,
                        "src": "5573:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ItemType_$907_$",
                          "typeString": "type(enum ItemType)"
                        }
                      },
                      "id": 1332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 902,
                      "src": "5573:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ItemType_$907",
                        "typeString": "enum ItemType"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ItemType_$907",
                      "typeString": "enum ItemType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5515:229:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1358,
                        "name": "parameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1194,
                        "src": "5882:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                          "typeString": "struct BasicOrderParameters calldata"
                        }
                      },
                      {
                        "id": 1359,
                        "name": "orderType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1219,
                        "src": "5906:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OrderType_$868",
                          "typeString": "enum OrderType"
                        }
                      },
                      {
                        "id": 1360,
                        "name": "receivedItemType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1295,
                        "src": "5929:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ItemType_$907",
                          "typeString": "enum ItemType"
                        }
                      },
                      {
                        "id": 1361,
                        "name": "additionalRecipientsItemType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1232,
                        "src": "5959:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ItemType_$907",
                          "typeString": "enum ItemType"
                        }
                      },
                      {
                        "id": 1362,
                        "name": "additionalRecipientsToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1280,
                        "src": "6001:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1363,
                        "name": "offeredItemType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1324,
                        "src": "6040:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ItemType_$907",
                          "typeString": "enum ItemType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                          "typeString": "struct BasicOrderParameters calldata"
                        },
                        {
                          "typeIdentifier": "t_enum$_OrderType_$868",
                          "typeString": "enum OrderType"
                        },
                        {
                          "typeIdentifier": "t_enum$_ItemType_$907",
                          "typeString": "enum ItemType"
                        },
                        {
                          "typeIdentifier": "t_enum$_ItemType_$907",
                          "typeString": "enum ItemType"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_ItemType_$907",
                          "typeString": "enum ItemType"
                        }
                      ],
                      "id": 1357,
                      "name": "_prepareBasicFulfillmentFromCalldata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4419,
                      "src": "5832:36:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_BasicOrderParameters_$1033_calldata_ptr_$_t_enum$_OrderType_$868_$_t_enum$_ItemType_$907_$_t_enum$_ItemType_$907_$_t_address_$_t_enum$_ItemType_$907_$returns$__$",
                        "typeString": "function (struct BasicOrderParameters calldata,enum OrderType,enum ItemType,enum ItemType,address,enum ItemType)"
                      }
                    },
                    "id": 1364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5832:233:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1365,
                  "nodeType": "ExpressionStatement",
                  "src": "5832:233:13"
                },
                {
                  "assignments": [
                    1367
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1367,
                      "mutability": "mutable",
                      "name": "offerer",
                      "nameLocation": "6154:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1556,
                      "src": "6138:23:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1366,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6138:15:13",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1370,
                  "initialValue": {
                    "expression": {
                      "id": 1368,
                      "name": "parameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1194,
                      "src": "6164:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                        "typeString": "struct BasicOrderParameters calldata"
                      }
                    },
                    "id": 1369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "offerer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1001,
                    "src": "6164:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6138:44:13"
                },
                {
                  "assignments": [
                    1372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1372,
                      "mutability": "mutable",
                      "name": "conduitKey",
                      "nameLocation": "6268:10:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1556,
                      "src": "6260:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1371,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6260:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1384,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 1378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1375,
                            "name": "route",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1206,
                            "src": "6287:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                              "typeString": "enum BasicOrderRouteType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                              "typeString": "enum BasicOrderRouteType"
                            }
                          ],
                          "id": 1374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6281:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1373,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "6281:5:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6281:12:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "33",
                        "id": 1377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6296:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "src": "6281:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 1381,
                        "name": "parameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1194,
                        "src": "6357:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                          "typeString": "struct BasicOrderParameters calldata"
                        }
                      },
                      "id": 1382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "offererConduitKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1022,
                      "src": "6357:28:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6281:104:13",
                    "trueExpression": {
                      "expression": {
                        "id": 1379,
                        "name": "parameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1194,
                        "src": "6312:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                          "typeString": "struct BasicOrderParameters calldata"
                        }
                      },
                      "id": 1380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fulfillerConduitKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1024,
                      "src": "6312:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6260:125:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                      "typeString": "enum BasicOrderRouteType"
                    },
                    "id": 1388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1385,
                      "name": "route",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1206,
                      "src": "6447:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                        "typeString": "enum BasicOrderRouteType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1386,
                        "name": "BasicOrderRouteType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 900,
                        "src": "6456:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BasicOrderRouteType_$900_$",
                          "typeString": "type(enum BasicOrderRouteType)"
                        }
                      },
                      "id": 1387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ETH_TO_ERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 894,
                      "src": "6456:33:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                        "typeString": "enum BasicOrderRouteType"
                      }
                    },
                    "src": "6447:42:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                        "typeString": "enum BasicOrderRouteType"
                      },
                      "id": 1412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1409,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1206,
                        "src": "7002:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                          "typeString": "enum BasicOrderRouteType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 1410,
                          "name": "BasicOrderRouteType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 900,
                          "src": "7011:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_BasicOrderRouteType_$900_$",
                            "typeString": "type(enum BasicOrderRouteType)"
                          }
                        },
                        "id": 1411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ETH_TO_ERC1155",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 895,
                        "src": "7011:34:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                          "typeString": "enum BasicOrderRouteType"
                        }
                      },
                      "src": "7002:43:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                          "typeString": "enum BasicOrderRouteType"
                        },
                        "id": 1436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1433,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1206,
                          "src": "7560:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                            "typeString": "enum BasicOrderRouteType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1434,
                            "name": "BasicOrderRouteType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 900,
                            "src": "7569:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BasicOrderRouteType_$900_$",
                              "typeString": "type(enum BasicOrderRouteType)"
                            }
                          },
                          "id": 1435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ERC20_TO_ERC721",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 896,
                          "src": "7569:35:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                            "typeString": "enum BasicOrderRouteType"
                          }
                        },
                        "src": "7560:44:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                            "typeString": "enum BasicOrderRouteType"
                          },
                          "id": 1466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1463,
                            "name": "route",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1206,
                            "src": "8333:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                              "typeString": "enum BasicOrderRouteType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1464,
                              "name": "BasicOrderRouteType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 900,
                              "src": "8342:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_BasicOrderRouteType_$900_$",
                                "typeString": "type(enum BasicOrderRouteType)"
                              }
                            },
                            "id": 1465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC20_TO_ERC1155",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 897,
                            "src": "8342:36:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                              "typeString": "enum BasicOrderRouteType"
                            }
                          },
                          "src": "8333:45:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                              "typeString": "enum BasicOrderRouteType"
                            },
                            "id": 1496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1493,
                              "name": "route",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1206,
                              "src": "9109:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                                "typeString": "enum BasicOrderRouteType"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 1494,
                                "name": "BasicOrderRouteType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 900,
                                "src": "9118:19:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_BasicOrderRouteType_$900_$",
                                  "typeString": "type(enum BasicOrderRouteType)"
                                }
                              },
                              "id": 1495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ERC721_TO_ERC20",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 898,
                              "src": "9118:35:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BasicOrderRouteType_$900",
                                "typeString": "enum BasicOrderRouteType"
                              }
                            },
                            "src": "9109:44:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 1548,
                            "nodeType": "Block",
                            "src": "9885:788:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1524,
                                        "name": "parameters",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1194,
                                        "src": "10076:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                          "typeString": "struct BasicOrderParameters calldata"
                                        }
                                      },
                                      "id": 1525,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "considerationToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 995,
                                      "src": "10076:29:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 1526,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "10123:3:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1527,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "10123:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1528,
                                      "name": "offerer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1367,
                                      "src": "10151:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 1529,
                                        "name": "parameters",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1194,
                                        "src": "10176:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                          "typeString": "struct BasicOrderParameters calldata"
                                        }
                                      },
                                      "id": 1530,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "considerationIdentifier",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 997,
                                      "src": "10176:34:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 1531,
                                        "name": "parameters",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1194,
                                        "src": "10228:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                          "typeString": "struct BasicOrderParameters calldata"
                                        }
                                      },
                                      "id": 1532,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "considerationAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 999,
                                      "src": "10228:30:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1533,
                                      "name": "conduitKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1372,
                                      "src": "10276:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 1523,
                                    "name": "_transferERC1155",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6620,
                                    "src": "10042:16:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                                      "typeString": "function (address,address,address,uint256,uint256,bytes32)"
                                    }
                                  },
                                  "id": 1534,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10042:258:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1535,
                                "nodeType": "ExpressionStatement",
                                "src": "10042:258:13"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1537,
                                      "name": "offerer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1367,
                                      "src": "10426:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 1538,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "10451:3:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1539,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "10451:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 1540,
                                        "name": "parameters",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1194,
                                        "src": "10479:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                          "typeString": "struct BasicOrderParameters calldata"
                                        }
                                      },
                                      "id": 1541,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "offerToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1005,
                                      "src": "10479:21:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 1542,
                                        "name": "parameters",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1194,
                                        "src": "10518:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                          "typeString": "struct BasicOrderParameters calldata"
                                        }
                                      },
                                      "id": 1543,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "offerAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1009,
                                      "src": "10518:22:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1544,
                                      "name": "parameters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1194,
                                      "src": "10558:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                        "typeString": "struct BasicOrderParameters calldata"
                                      }
                                    },
                                    {
                                      "hexValue": "74727565",
                                      "id": 1545,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10586:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                        "typeString": "struct BasicOrderParameters calldata"
                                      },
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "id": 1536,
                                    "name": "_transferERC20AndFinalize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6915,
                                    "src": "10383:25:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_struct$_BasicOrderParameters_$1033_calldata_ptr_$_t_bool_$returns$__$",
                                      "typeString": "function (address,address,address,uint256,struct BasicOrderParameters calldata,bool)"
                                    }
                                  },
                                  "id": 1546,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10383:279:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1547,
                                "nodeType": "ExpressionStatement",
                                "src": "10383:279:13"
                              }
                            ]
                          },
                          "id": 1549,
                          "nodeType": "IfStatement",
                          "src": "9105:1568:13",
                          "trueBody": {
                            "id": 1522,
                            "nodeType": "Block",
                            "src": "9155:724:13",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1498,
                                        "name": "parameters",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1194,
                                        "src": "9282:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                          "typeString": "struct BasicOrderParameters calldata"
                                        }
                                      },
                                      "id": 1499,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "considerationToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 995,
                                      "src": "9282:29:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 1500,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "9329:3:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1501,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "9329:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1502,
                                      "name": "offerer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1367,
                                      "src": "9357:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 1503,
                                        "name": "parameters",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1194,
                                        "src": "9382:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                          "typeString": "struct BasicOrderParameters calldata"
                                        }
                                      },
                                      "id": 1504,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "considerationIdentifier",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 997,
                                      "src": "9382:34:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 1505,
                                        "name": "parameters",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1194,
                                        "src": "9434:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                          "typeString": "struct BasicOrderParameters calldata"
                                        }
                                      },
                                      "id": 1506,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "considerationAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 999,
                                      "src": "9434:30:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1507,
                                      "name": "conduitKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1372,
                                      "src": "9482:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 1497,
                                    "name": "_transferERC721",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6546,
                                    "src": "9249:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                                      "typeString": "function (address,address,address,uint256,uint256,bytes32)"
                                    }
                                  },
                                  "id": 1508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9249:257:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1509,
                                "nodeType": "ExpressionStatement",
                                "src": "9249:257:13"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1511,
                                      "name": "offerer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1367,
                                      "src": "9632:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 1512,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "9657:3:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1513,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "9657:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 1514,
                                        "name": "parameters",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1194,
                                        "src": "9685:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                          "typeString": "struct BasicOrderParameters calldata"
                                        }
                                      },
                                      "id": 1515,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "offerToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1005,
                                      "src": "9685:21:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 1516,
                                        "name": "parameters",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1194,
                                        "src": "9724:10:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                          "typeString": "struct BasicOrderParameters calldata"
                                        }
                                      },
                                      "id": 1517,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "offerAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1009,
                                      "src": "9724:22:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1518,
                                      "name": "parameters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1194,
                                      "src": "9764:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                        "typeString": "struct BasicOrderParameters calldata"
                                      }
                                    },
                                    {
                                      "hexValue": "74727565",
                                      "id": 1519,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9792:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                        "typeString": "struct BasicOrderParameters calldata"
                                      },
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "id": 1510,
                                    "name": "_transferERC20AndFinalize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6915,
                                    "src": "9589:25:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_struct$_BasicOrderParameters_$1033_calldata_ptr_$_t_bool_$returns$__$",
                                      "typeString": "function (address,address,address,uint256,struct BasicOrderParameters calldata,bool)"
                                    }
                                  },
                                  "id": 1520,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9589:279:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1521,
                                "nodeType": "ExpressionStatement",
                                "src": "9589:279:13"
                              }
                            ]
                          }
                        },
                        "id": 1550,
                        "nodeType": "IfStatement",
                        "src": "8329:2344:13",
                        "trueBody": {
                          "id": 1492,
                          "nodeType": "Block",
                          "src": "8380:719:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1468,
                                      "name": "parameters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1194,
                                      "src": "8509:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                        "typeString": "struct BasicOrderParameters calldata"
                                      }
                                    },
                                    "id": 1469,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "offerToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1005,
                                    "src": "8509:21:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1470,
                                    "name": "offerer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1367,
                                    "src": "8548:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1471,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8573:3:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1472,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8573:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1473,
                                      "name": "parameters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1194,
                                      "src": "8601:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                        "typeString": "struct BasicOrderParameters calldata"
                                      }
                                    },
                                    "id": 1474,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "offerIdentifier",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1007,
                                    "src": "8601:26:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1475,
                                      "name": "parameters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1194,
                                      "src": "8645:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                        "typeString": "struct BasicOrderParameters calldata"
                                      }
                                    },
                                    "id": 1476,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "offerAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1009,
                                    "src": "8645:22:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1477,
                                    "name": "conduitKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1372,
                                    "src": "8685:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 1467,
                                  "name": "_transferERC1155",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6620,
                                  "src": "8475:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                                    "typeString": "function (address,address,address,uint256,uint256,bytes32)"
                                  }
                                },
                                "id": 1478,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8475:234:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1479,
                              "nodeType": "ExpressionStatement",
                              "src": "8475:234:13"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1481,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8835:3:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1482,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8835:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1483,
                                    "name": "offerer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1367,
                                    "src": "8863:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1484,
                                      "name": "parameters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1194,
                                      "src": "8888:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                        "typeString": "struct BasicOrderParameters calldata"
                                      }
                                    },
                                    "id": 1485,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "considerationToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 995,
                                    "src": "8888:29:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1486,
                                      "name": "parameters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1194,
                                      "src": "8935:10:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                        "typeString": "struct BasicOrderParameters calldata"
                                      }
                                    },
                                    "id": 1487,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "considerationAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 999,
                                    "src": "8935:30:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1488,
                                    "name": "parameters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1194,
                                    "src": "8983:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                      "typeString": "struct BasicOrderParameters calldata"
                                    }
                                  },
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 1489,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9011:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                      "typeString": "struct BasicOrderParameters calldata"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 1480,
                                  "name": "_transferERC20AndFinalize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6915,
                                  "src": "8792:25:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_struct$_BasicOrderParameters_$1033_calldata_ptr_$_t_bool_$returns$__$",
                                    "typeString": "function (address,address,address,uint256,struct BasicOrderParameters calldata,bool)"
                                  }
                                },
                                "id": 1490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8792:296:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1491,
                              "nodeType": "ExpressionStatement",
                              "src": "8792:296:13"
                            }
                          ]
                        }
                      },
                      "id": 1551,
                      "nodeType": "IfStatement",
                      "src": "7556:3117:13",
                      "trueBody": {
                        "id": 1462,
                        "nodeType": "Block",
                        "src": "7606:717:13",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1438,
                                    "name": "parameters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1194,
                                    "src": "7733:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                      "typeString": "struct BasicOrderParameters calldata"
                                    }
                                  },
                                  "id": 1439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1005,
                                  "src": "7733:21:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1440,
                                  "name": "offerer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1367,
                                  "src": "7772:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1441,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "7797:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1442,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "7797:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1443,
                                    "name": "parameters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1194,
                                    "src": "7825:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                      "typeString": "struct BasicOrderParameters calldata"
                                    }
                                  },
                                  "id": 1444,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerIdentifier",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1007,
                                  "src": "7825:26:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1445,
                                    "name": "parameters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1194,
                                    "src": "7869:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                      "typeString": "struct BasicOrderParameters calldata"
                                    }
                                  },
                                  "id": 1446,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offerAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1009,
                                  "src": "7869:22:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1447,
                                  "name": "conduitKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1372,
                                  "src": "7909:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 1437,
                                "name": "_transferERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6546,
                                "src": "7700:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                                  "typeString": "function (address,address,address,uint256,uint256,bytes32)"
                                }
                              },
                              "id": 1448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7700:233:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1449,
                            "nodeType": "ExpressionStatement",
                            "src": "7700:233:13"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1451,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "8059:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1452,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "8059:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1453,
                                  "name": "offerer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1367,
                                  "src": "8087:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1454,
                                    "name": "parameters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1194,
                                    "src": "8112:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                      "typeString": "struct BasicOrderParameters calldata"
                                    }
                                  },
                                  "id": 1455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "considerationToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 995,
                                  "src": "8112:29:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1456,
                                    "name": "parameters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1194,
                                    "src": "8159:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                      "typeString": "struct BasicOrderParameters calldata"
                                    }
                                  },
                                  "id": 1457,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "considerationAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 999,
                                  "src": "8159:30:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1458,
                                  "name": "parameters",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1194,
                                  "src": "8207:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                    "typeString": "struct BasicOrderParameters calldata"
                                  }
                                },
                                {
                                  "hexValue": "66616c7365",
                                  "id": 1459,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8235:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                    "typeString": "struct BasicOrderParameters calldata"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 1450,
                                "name": "_transferERC20AndFinalize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6915,
                                "src": "8016:25:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_struct$_BasicOrderParameters_$1033_calldata_ptr_$_t_bool_$returns$__$",
                                  "typeString": "function (address,address,address,uint256,struct BasicOrderParameters calldata,bool)"
                                }
                              },
                              "id": 1460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8016:296:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1461,
                            "nodeType": "ExpressionStatement",
                            "src": "8016:296:13"
                          }
                        ]
                      }
                    },
                    "id": 1552,
                    "nodeType": "IfStatement",
                    "src": "6998:3675:13",
                    "trueBody": {
                      "id": 1432,
                      "nodeType": "Block",
                      "src": "7047:503:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1414,
                                  "name": "parameters",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1194,
                                  "src": "7176:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                    "typeString": "struct BasicOrderParameters calldata"
                                  }
                                },
                                "id": 1415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offerToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1005,
                                "src": "7176:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1416,
                                "name": "offerer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1367,
                                "src": "7215:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1417,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7240:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7240:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1419,
                                  "name": "parameters",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1194,
                                  "src": "7268:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                    "typeString": "struct BasicOrderParameters calldata"
                                  }
                                },
                                "id": 1420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offerIdentifier",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1007,
                                "src": "7268:26:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1421,
                                  "name": "parameters",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1194,
                                  "src": "7312:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                    "typeString": "struct BasicOrderParameters calldata"
                                  }
                                },
                                "id": 1422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "offerAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1009,
                                "src": "7312:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1423,
                                "name": "conduitKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1372,
                                "src": "7352:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 1413,
                              "name": "_transferERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6620,
                              "src": "7142:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                                "typeString": "function (address,address,address,uint256,uint256,bytes32)"
                              }
                            },
                            "id": 1424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7142:234:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1425,
                          "nodeType": "ExpressionStatement",
                          "src": "7142:234:13"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1427,
                                  "name": "parameters",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1194,
                                  "src": "7496:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                    "typeString": "struct BasicOrderParameters calldata"
                                  }
                                },
                                "id": 1428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "considerationAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 999,
                                "src": "7496:30:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1429,
                                "name": "parameters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1194,
                                "src": "7528:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                  "typeString": "struct BasicOrderParameters calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                  "typeString": "struct BasicOrderParameters calldata"
                                }
                              ],
                              "id": 1426,
                              "name": "_transferEthAndFinalize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6839,
                              "src": "7472:23:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_BasicOrderParameters_$1033_calldata_ptr_$returns$__$",
                                "typeString": "function (uint256,struct BasicOrderParameters calldata)"
                              }
                            },
                            "id": 1430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7472:67:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1431,
                          "nodeType": "ExpressionStatement",
                          "src": "7472:67:13"
                        }
                      ]
                    }
                  },
                  "id": 1553,
                  "nodeType": "IfStatement",
                  "src": "6443:4230:13",
                  "trueBody": {
                    "id": 1408,
                    "nodeType": "Block",
                    "src": "6491:501:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1390,
                                "name": "parameters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1194,
                                "src": "6618:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                  "typeString": "struct BasicOrderParameters calldata"
                                }
                              },
                              "id": 1391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offerToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1005,
                              "src": "6618:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1392,
                              "name": "offerer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1367,
                              "src": "6657:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "id": 1393,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6682:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6682:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1395,
                                "name": "parameters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1194,
                                "src": "6710:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                  "typeString": "struct BasicOrderParameters calldata"
                                }
                              },
                              "id": 1396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offerIdentifier",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1007,
                              "src": "6710:26:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1397,
                                "name": "parameters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1194,
                                "src": "6754:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                  "typeString": "struct BasicOrderParameters calldata"
                                }
                              },
                              "id": 1398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "offerAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1009,
                              "src": "6754:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1399,
                              "name": "conduitKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1372,
                              "src": "6794:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1389,
                            "name": "_transferERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6546,
                            "src": "6585:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,address,address,uint256,uint256,bytes32)"
                            }
                          },
                          "id": 1400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6585:233:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1401,
                        "nodeType": "ExpressionStatement",
                        "src": "6585:233:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1403,
                                "name": "parameters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1194,
                                "src": "6938:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                  "typeString": "struct BasicOrderParameters calldata"
                                }
                              },
                              "id": 1404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "considerationAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 999,
                              "src": "6938:30:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1405,
                              "name": "parameters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1194,
                              "src": "6970:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                "typeString": "struct BasicOrderParameters calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                                "typeString": "struct BasicOrderParameters calldata"
                              }
                            ],
                            "id": 1402,
                            "name": "_transferEthAndFinalize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6839,
                            "src": "6914:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_BasicOrderParameters_$1033_calldata_ptr_$returns$__$",
                              "typeString": "function (uint256,struct BasicOrderParameters calldata)"
                            }
                          },
                          "id": 1406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6914:67:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1407,
                        "nodeType": "ExpressionStatement",
                        "src": "6914:67:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10690:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1203,
                  "id": 1555,
                  "nodeType": "Return",
                  "src": "10683:11:13"
                }
              ]
            },
            "documentation": {
              "id": 1191,
              "nodeType": "StructuredDocumentation",
              "src": "2147:1635:13",
              "text": " @notice Fulfill an order offering an ERC20, ERC721, or ERC1155 item by\n         supplying Ether (or other native tokens), ERC20 tokens, an ERC721\n         item, or an ERC1155 item as consideration. Six permutations are\n         supported: Native token to ERC721, Native token to ERC1155, ERC20\n         to ERC721, ERC20 to ERC1155, ERC721 to ERC20, and ERC1155 to\n         ERC20 (with native tokens supplied as msg.value). For an order to\n         be eligible for fulfillment via this method, it must contain a\n         single offer item (though that item may have a greater amount if\n         the item is not an ERC721). An arbitrary number of \"additional\n         recipients\" may also be supplied which will each receive native\n         tokens or ERC20 items from the fulfiller as consideration. Refer\n         to the documentation for a more comprehensive summary of how to\n         utilize with this method and what orders are compatible with it.\n @param parameters Additional information on the fulfilled order. Note\n                   that the offerer and the fulfiller must first approve\n                   this contract (or their chosen conduit if indicated)\n                   before any tokens can be transferred. Also note that\n                   contract recipients of ERC1155 consideration items must\n                   implement `onERC1155Received` in order to receive those\n                   items.\n @return A boolean indicating whether the order has been fulfilled."
            },
            "functionSelector": "fb0f3ee1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1198,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1197,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3970,
                  "src": "3914:10:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3914:10:13"
              },
              {
                "id": 1200,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1199,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3957,
                  "src": "3933:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3933:12:13"
              }
            ],
            "name": "fulfillBasicOrder",
            "nameLocation": "3796:17:13",
            "overrides": {
              "id": 1196,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3897:8:13"
            },
            "parameters": {
              "id": 1195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1194,
                  "mutability": "mutable",
                  "name": "parameters",
                  "nameLocation": "3844:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1557,
                  "src": "3814:40:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_calldata_ptr",
                    "typeString": "struct BasicOrderParameters"
                  },
                  "typeName": {
                    "id": 1193,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1192,
                      "name": "BasicOrderParameters",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1033,
                      "src": "3814:20:13"
                    },
                    "referencedDeclaration": 1033,
                    "src": "3814:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BasicOrderParameters_$1033_storage_ptr",
                      "typeString": "struct BasicOrderParameters"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3813:42:13"
            },
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1557,
                  "src": "3963:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3963:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3962:6:13"
            },
            "scope": 2238,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1587,
            "nodeType": "FunctionDefinition",
            "src": "12011:567:13",
            "baseFunctions": [
              557
            ],
            "body": {
              "id": 1586,
              "nodeType": "Block",
              "src": "12201:377:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1575,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1561,
                            "src": "12391:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$1072_calldata_ptr",
                              "typeString": "struct Order calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Order_$1072_calldata_ptr",
                              "typeString": "struct Order calldata"
                            }
                          ],
                          "id": 1574,
                          "name": "_convertOrderToAdvanced",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10093,
                          "src": "12367:23:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Order_$1072_calldata_ptr_$returns$_t_struct$_AdvancedOrder_$1084_memory_ptr_$",
                            "typeString": "function (struct Order calldata) pure returns (struct AdvancedOrder memory)"
                          }
                        },
                        "id": 1576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12367:30:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AdvancedOrder_$1084_memory_ptr",
                          "typeString": "struct AdvancedOrder memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12434:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "12411:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CriteriaResolver_$1106_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct CriteriaResolver memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 1578,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1577,
                                "name": "CriteriaResolver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1106,
                                "src": "12415:16:13"
                              },
                              "referencedDeclaration": 1106,
                              "src": "12415:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CriteriaResolver_$1106_storage_ptr",
                                "typeString": "struct CriteriaResolver"
                              }
                            },
                            "id": 1579,
                            "nodeType": "ArrayTypeName",
                            "src": "12415:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_storage_$dyn_storage_ptr",
                              "typeString": "struct CriteriaResolver[]"
                            }
                          }
                        },
                        "id": 1582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12411:25:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        }
                      },
                      {
                        "id": 1583,
                        "name": "fulfillerConduitKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1563,
                        "src": "12485:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_AdvancedOrder_$1084_memory_ptr",
                          "typeString": "struct AdvancedOrder memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1573,
                      "name": "_validateAndFulfillAdvancedOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4907,
                      "src": "12321:32:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AdvancedOrder_$1084_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$1106_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (struct AdvancedOrder memory,struct CriteriaResolver memory[] memory,bytes32) returns (bool)"
                      }
                    },
                    "id": 1584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12321:193:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1572,
                  "id": 1585,
                  "nodeType": "Return",
                  "src": "12314:200:13"
                }
              ]
            },
            "documentation": {
              "id": 1558,
              "nodeType": "StructuredDocumentation",
              "src": "10707:1299:13",
              "text": " @notice Fulfill an order with an arbitrary number of items for offer and\n         consideration. Note that this function does not support\n         criteria-based orders or partial filling of orders (though\n         filling the remainder of a partially-filled order is supported).\n @param order               The order to fulfill. Note that both the\n                            offerer and the fulfiller must first approve\n                            this contract (or the corresponding conduit if\n                            indicated) to transfer any relevant tokens on\n                            their behalf and that contracts must implement\n                            `onERC1155Received` to receive ERC1155 tokens\n                            as consideration.\n @param fulfillerConduitKey A bytes32 value indicating what conduit, if\n                            any, to source the fulfiller's token approvals\n                            from. The zero hash signifies that no conduit\n                            should be used (and direct approvals set on\n                            Consideration).\n @return A boolean indicating whether the order has been fulfilled."
            },
            "functionSelector": "b3a34c4c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1567,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1566,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3970,
                  "src": "12142:10:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "12142:10:13"
              },
              {
                "id": 1569,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1568,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3957,
                  "src": "12161:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "12161:12:13"
              }
            ],
            "name": "fulfillOrder",
            "nameLocation": "12020:12:13",
            "overrides": {
              "id": 1565,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12125:8:13"
            },
            "parameters": {
              "id": 1564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1561,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "12048:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "12033:20:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$1072_calldata_ptr",
                    "typeString": "struct Order"
                  },
                  "typeName": {
                    "id": 1560,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1559,
                      "name": "Order",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1072,
                      "src": "12033:5:13"
                    },
                    "referencedDeclaration": 1072,
                    "src": "12033:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$1072_storage_ptr",
                      "typeString": "struct Order"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1563,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "12063:19:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "12055:27:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1562,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12055:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12032:51:13"
            },
            "returnParameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1571,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "12191:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12191:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12190:6:13"
            },
            "scope": 2238,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1614,
            "nodeType": "FunctionDefinition",
            "src": "15009:524:13",
            "baseFunctions": [
              572
            ],
            "body": {
              "id": 1613,
              "nodeType": "Block",
              "src": "15248:285:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1608,
                        "name": "advancedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1591,
                        "src": "15370:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AdvancedOrder_$1084_calldata_ptr",
                          "typeString": "struct AdvancedOrder calldata"
                        }
                      },
                      {
                        "id": 1609,
                        "name": "criteriaResolvers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "15401:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        }
                      },
                      {
                        "id": 1610,
                        "name": "fulfillerConduitKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1597,
                        "src": "15436:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_AdvancedOrder_$1084_calldata_ptr",
                          "typeString": "struct AdvancedOrder calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1607,
                      "name": "_validateAndFulfillAdvancedOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4907,
                      "src": "15320:32:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AdvancedOrder_$1084_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$1106_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (struct AdvancedOrder memory,struct CriteriaResolver memory[] memory,bytes32) returns (bool)"
                      }
                    },
                    "id": 1611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15320:149:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1606,
                  "id": 1612,
                  "nodeType": "Return",
                  "src": "15301:168:13"
                }
              ]
            },
            "documentation": {
              "id": 1588,
              "nodeType": "StructuredDocumentation",
              "src": "12584:2420:13",
              "text": " @notice Fill an order, fully or partially, with an arbitrary number of\n         items for offer and consideration alongside criteria resolvers\n         containing specific token identifiers and associated proofs.\n @param advancedOrder       The order to fulfill along with the fraction\n                            of the order to attempt to fill. Note that\n                            both the offerer and the fulfiller must first\n                            approve this contract (or their proxy if\n                            indicated by the order) to transfer any\n                            relevant tokens on their behalf and that\n                            contracts must implement `onERC1155Received`\n                            to receive ERC1155 tokens as consideration.\n                            Also note that all offer and consideration\n                            components must have no remainder after\n                            multiplication of the respective amount with\n                            the supplied fraction for the partial fill to\n                            be considered valid.\n @param criteriaResolvers   An array where each element contains a\n                            reference to a specific offer or\n                            consideration, a token identifier, and a proof\n                            that the supplied token identifier is\n                            contained in the merkle root held by the item\n                            in question's criteria element. Note that an\n                            empty criteria indicates that any\n                            (transferrable) token identifier on the token\n                            in question is valid and that no associated\n                            proof needs to be supplied.\n @param fulfillerConduitKey A bytes32 value indicating what conduit, if\n                            any, to source the fulfiller's token approvals\n                            from. The zero hash signifies that no conduit\n                            should be used (and direct approvals set on\n                            Consideration).\n @return A boolean indicating whether the order has been fulfilled."
            },
            "functionSelector": "df7b0dac",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1601,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1600,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3970,
                  "src": "15209:10:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "15209:10:13"
              },
              {
                "id": 1603,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1602,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3957,
                  "src": "15220:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "15220:12:13"
              }
            ],
            "name": "fulfillAdvancedOrder",
            "nameLocation": "15018:20:13",
            "overrides": {
              "id": 1599,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "15200:8:13"
            },
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1591,
                  "mutability": "mutable",
                  "name": "advancedOrder",
                  "nameLocation": "15071:13:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1614,
                  "src": "15048:36:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AdvancedOrder_$1084_calldata_ptr",
                    "typeString": "struct AdvancedOrder"
                  },
                  "typeName": {
                    "id": 1590,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1589,
                      "name": "AdvancedOrder",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1084,
                      "src": "15048:13:13"
                    },
                    "referencedDeclaration": 1084,
                    "src": "15048:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AdvancedOrder_$1084_storage_ptr",
                      "typeString": "struct AdvancedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1595,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "15122:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1614,
                  "src": "15094:45:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1593,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1592,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1106,
                        "src": "15094:16:13"
                      },
                      "referencedDeclaration": 1106,
                      "src": "15094:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$1106_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 1594,
                    "nodeType": "ArrayTypeName",
                    "src": "15094:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1597,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "15157:19:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1614,
                  "src": "15149:27:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1596,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15149:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15038:144:13"
            },
            "returnParameters": {
              "id": 1606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1605,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1614,
                  "src": "15242:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1604,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15242:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15241:6:13"
            },
            "scope": 2238,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1686,
            "nodeType": "FunctionDefinition",
            "src": "18770:1306:13",
            "baseFunctions": [
              605
            ],
            "body": {
              "id": 1685,
              "nodeType": "Block",
              "src": "19310:766:13",
              "statements": [
                {
                  "assignments": [
                    1656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1656,
                      "mutability": "mutable",
                      "name": "advancedOrders",
                      "nameLocation": "19391:14:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1685,
                      "src": "19368:37:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AdvancedOrder[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1654,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1653,
                            "name": "AdvancedOrder",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1084,
                            "src": "19368:13:13"
                          },
                          "referencedDeclaration": 1084,
                          "src": "19368:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$1084_storage_ptr",
                            "typeString": "struct AdvancedOrder"
                          }
                        },
                        "id": 1655,
                        "nodeType": "ArrayTypeName",
                        "src": "19368:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_storage_$dyn_storage_ptr",
                          "typeString": "struct AdvancedOrder[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1660,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1658,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1619,
                        "src": "19446:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$1072_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Order calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$1072_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Order calldata[] calldata"
                        }
                      ],
                      "id": 1657,
                      "name": "_convertOrdersToAdvanced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10144,
                      "src": "19408:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_Order_$1072_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct Order calldata[] calldata) pure returns (struct AdvancedOrder memory[] memory)"
                      }
                    },
                    "id": 1659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19408:54:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AdvancedOrder memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19368:94:13"
                },
                {
                  "assignments": [
                    1665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1665,
                      "mutability": "mutable",
                      "name": "ordersToExecute",
                      "nameLocation": "19564:15:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1685,
                      "src": "19528:51:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OrderToExecute[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1663,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1662,
                            "name": "OrderToExecute",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 10590,
                            "src": "19528:14:13"
                          },
                          "referencedDeclaration": 10590,
                          "src": "19528:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderToExecute_$10590_storage_ptr",
                            "typeString": "struct OrderToExecute"
                          }
                        },
                        "id": 1664,
                        "nodeType": "ArrayTypeName",
                        "src": "19528:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_storage_$dyn_storage_ptr",
                          "typeString": "struct OrderToExecute[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1669,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1667,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1656,
                        "src": "19633:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      ],
                      "id": 1666,
                      "name": "_convertAdvancedtoOrdersToExecute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10350,
                      "src": "19582:33:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory) pure returns (struct OrderToExecute memory[] memory)"
                      }
                    },
                    "id": 1668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19582:79:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OrderToExecute memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19528:133:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1671,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1656,
                        "src": "19781:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "id": 1672,
                        "name": "ordersToExecute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1665,
                        "src": "19813:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19869:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "19846:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CriteriaResolver_$1106_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct CriteriaResolver memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 1674,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1673,
                                "name": "CriteriaResolver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1106,
                                "src": "19850:16:13"
                              },
                              "referencedDeclaration": 1106,
                              "src": "19850:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CriteriaResolver_$1106_storage_ptr",
                                "typeString": "struct CriteriaResolver"
                              }
                            },
                            "id": 1675,
                            "nodeType": "ArrayTypeName",
                            "src": "19850:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_storage_$dyn_storage_ptr",
                              "typeString": "struct CriteriaResolver[]"
                            }
                          }
                        },
                        "id": 1678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19846:25:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        }
                      },
                      {
                        "id": 1679,
                        "name": "offerFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1624,
                        "src": "19924:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 1680,
                        "name": "considerationFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1629,
                        "src": "19959:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 1681,
                        "name": "fulfillerConduitKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1631,
                        "src": "20002:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1682,
                        "name": "maximumFulfilled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1633,
                        "src": "20039:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1670,
                      "name": "_fulfillAvailableAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5828,
                      "src": "19732:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$1106_memory_ptr_$dyn_memory_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$1128_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_BatchExecution_$1143_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct OrderToExecute memory[] memory,struct CriteriaResolver memory[] memory,struct FulfillmentComponent calldata[] calldata[] calldata,struct FulfillmentComponent calldata[] calldata[] calldata,bytes32,uint256) returns (bool[] memory,struct Execution memory[] memory,struct BatchExecution memory[] memory)"
                      }
                    },
                    "id": 1683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19732:337:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$1128_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_BatchExecution_$1143_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(bool[] memory,struct Execution memory[] memory,struct BatchExecution memory[] memory)"
                    }
                  },
                  "functionReturnParameters": 1651,
                  "id": 1684,
                  "nodeType": "Return",
                  "src": "19713:356:13"
                }
              ]
            },
            "documentation": {
              "id": 1615,
              "nodeType": "StructuredDocumentation",
              "src": "15539:3226:13",
              "text": " @notice Attempt to fill a group of orders, each with an arbitrary number\n         of items for offer and consideration. Any order that is not\n         currently active, has already been fully filled, or has been\n         cancelled will be omitted. Remaining offer and consideration\n         items will then be aggregated where possible as indicated by the\n         supplied offer and consideration component arrays and aggregated\n         items will be transferred to the fulfiller or to each intended\n         recipient, respectively. Note that a failing item transfer or an\n         issue with order formatting will cause the entire batch to fail.\n         Note that this function does not support criteria-based orders or\n         partial filling of orders (though filling the remainder of a\n         partially-filled order is supported).\n @param orders                    The orders to fulfill. Note that both\n                                  the offerer and the fulfiller must first\n                                  approve this contract (or the\n                                  corresponding conduit if indicated) to\n                                  transfer any relevant tokens on their\n                                  behalf and that contracts must implement\n                                  `onERC1155Received` to receive ERC1155\n                                  tokens as consideration.\n @param offerFulfillments         An array of FulfillmentComponent arrays\n                                  indicating which offer items to attempt\n                                  to aggregate when preparing executions.\n @param considerationFulfillments An array of FulfillmentComponent arrays\n                                  indicating which consideration items to\n                                  attempt to aggregate when preparing\n                                  executions.\n @param fulfillerConduitKey       A bytes32 value indicating what conduit,\n                                  if any, to source the fulfiller's token\n                                  approvals from. The zero hash signifies\n                                  that no conduit should be used (and\n                                  direct approvals set on Consideration).\n @param maximumFulfilled          The maximum number of orders to fulfill.\n @return availableOrders    An array of booleans indicating if each order\n                            with an index corresponding to the index of\n                            the returned boolean was fulfillable or not.\n @return standardExecutions An array of elements indicating the sequence\n                            of non-batch transfers performed as part of\n                            matching the given orders.\n @return batchExecutions    An array of elements indicating the sequence\n                            of batch transfers performed as part of\n                            matching the given orders."
            },
            "functionSelector": "ed98a574",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1637,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1636,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3970,
                  "src": "19100:10:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "19100:10:13"
              },
              {
                "id": 1639,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1638,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3957,
                  "src": "19119:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "19119:12:13"
              }
            ],
            "name": "fulfillAvailableOrders",
            "nameLocation": "18779:22:13",
            "overrides": {
              "id": 1635,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19083:8:13"
            },
            "parameters": {
              "id": 1634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1619,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "18828:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1686,
                  "src": "18811:23:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$1072_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1617,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1616,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1072,
                        "src": "18811:5:13"
                      },
                      "referencedDeclaration": 1072,
                      "src": "18811:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$1072_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 1618,
                    "nodeType": "ArrayTypeName",
                    "src": "18811:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$1072_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1624,
                  "mutability": "mutable",
                  "name": "offerFulfillments",
                  "nameLocation": "18878:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1686,
                  "src": "18844:51:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1621,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1620,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1120,
                          "src": "18844:20:13"
                        },
                        "referencedDeclaration": 1120,
                        "src": "18844:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$1120_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 1622,
                      "nodeType": "ArrayTypeName",
                      "src": "18844:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$1120_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 1623,
                    "nodeType": "ArrayTypeName",
                    "src": "18844:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1629,
                  "mutability": "mutable",
                  "name": "considerationFulfillments",
                  "nameLocation": "18939:25:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1686,
                  "src": "18905:59:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1626,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1625,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1120,
                          "src": "18905:20:13"
                        },
                        "referencedDeclaration": 1120,
                        "src": "18905:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$1120_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 1627,
                      "nodeType": "ArrayTypeName",
                      "src": "18905:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$1120_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 1628,
                    "nodeType": "ArrayTypeName",
                    "src": "18905:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1631,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "18982:19:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1686,
                  "src": "18974:27:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1630,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18974:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1633,
                  "mutability": "mutable",
                  "name": "maximumFulfilled",
                  "nameLocation": "19019:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1686,
                  "src": "19011:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19011:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18801:240:13"
            },
            "returnParameters": {
              "id": 1651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1642,
                  "mutability": "mutable",
                  "name": "availableOrders",
                  "nameLocation": "19176:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1686,
                  "src": "19162:29:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1640,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "19162:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1641,
                    "nodeType": "ArrayTypeName",
                    "src": "19162:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1646,
                  "mutability": "mutable",
                  "name": "standardExecutions",
                  "nameLocation": "19224:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1686,
                  "src": "19205:37:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$1128_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1644,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1643,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1128,
                        "src": "19205:9:13"
                      },
                      "referencedDeclaration": 1128,
                      "src": "19205:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$1128_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 1645,
                    "nodeType": "ArrayTypeName",
                    "src": "19205:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$1128_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1650,
                  "mutability": "mutable",
                  "name": "batchExecutions",
                  "nameLocation": "19280:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1686,
                  "src": "19256:39:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_BatchExecution_$1143_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BatchExecution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1648,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1647,
                        "name": "BatchExecution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1143,
                        "src": "19256:14:13"
                      },
                      "referencedDeclaration": 1143,
                      "src": "19256:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchExecution_$1143_storage_ptr",
                        "typeString": "struct BatchExecution"
                      }
                    },
                    "id": 1649,
                    "nodeType": "ArrayTypeName",
                    "src": "19256:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_BatchExecution_$1143_storage_$dyn_storage_ptr",
                      "typeString": "struct BatchExecution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19148:157:13"
            },
            "scope": 2238,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1748,
            "nodeType": "FunctionDefinition",
            "src": "24683:1188:13",
            "baseFunctions": [
              642
            ],
            "body": {
              "id": 1747,
              "nodeType": "Block",
              "src": "25300:571:13",
              "statements": [
                {
                  "assignments": [
                    1732
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1732,
                      "mutability": "mutable",
                      "name": "ordersToExecute",
                      "nameLocation": "25402:15:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1747,
                      "src": "25366:51:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OrderToExecute[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1730,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1729,
                            "name": "OrderToExecute",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 10590,
                            "src": "25366:14:13"
                          },
                          "referencedDeclaration": 10590,
                          "src": "25366:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderToExecute_$10590_storage_ptr",
                            "typeString": "struct OrderToExecute"
                          }
                        },
                        "id": 1731,
                        "nodeType": "ArrayTypeName",
                        "src": "25366:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_storage_$dyn_storage_ptr",
                          "typeString": "struct OrderToExecute[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1736,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1734,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1691,
                        "src": "25471:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      ],
                      "id": 1733,
                      "name": "_convertAdvancedtoOrdersToExecute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10350,
                      "src": "25420:33:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory) pure returns (struct OrderToExecute memory[] memory)"
                      }
                    },
                    "id": 1735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25420:79:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OrderToExecute memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25366:133:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1738,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1691,
                        "src": "25619:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "id": 1739,
                        "name": "ordersToExecute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1732,
                        "src": "25651:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        }
                      },
                      {
                        "id": 1740,
                        "name": "criteriaResolvers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1695,
                        "src": "25684:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        }
                      },
                      {
                        "id": 1741,
                        "name": "offerFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1700,
                        "src": "25719:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 1742,
                        "name": "considerationFulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1705,
                        "src": "25754:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        }
                      },
                      {
                        "id": 1743,
                        "name": "fulfillerConduitKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1707,
                        "src": "25797:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1744,
                        "name": "maximumFulfilled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1709,
                        "src": "25834:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct FulfillmentComponent calldata[] calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1737,
                      "name": "_fulfillAvailableAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5828,
                      "src": "25570:31:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$1106_memory_ptr_$dyn_memory_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$1128_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_BatchExecution_$1143_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct OrderToExecute memory[] memory,struct CriteriaResolver memory[] memory,struct FulfillmentComponent calldata[] calldata[] calldata,struct FulfillmentComponent calldata[] calldata[] calldata,bytes32,uint256) returns (bool[] memory,struct Execution memory[] memory,struct BatchExecution memory[] memory)"
                      }
                    },
                    "id": 1745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25570:294:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_struct$_Execution_$1128_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_BatchExecution_$1143_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(bool[] memory,struct Execution memory[] memory,struct BatchExecution memory[] memory)"
                    }
                  },
                  "functionReturnParameters": 1727,
                  "id": 1746,
                  "nodeType": "Return",
                  "src": "25551:313:13"
                }
              ]
            },
            "documentation": {
              "id": 1687,
              "nodeType": "StructuredDocumentation",
              "src": "20082:4596:13",
              "text": " @notice Attempt to fill a group of orders, fully or partially, with an\n         arbitrary number of items for offer and consideration per order\n         alongside criteria resolvers containing specific token\n         identifiers and associated proofs. Any order that is not\n         currently active, has already been fully filled, or has been\n         cancelled will be omitted. Remaining offer and consideration\n         items will then be aggregated where possible as indicated by the\n         supplied offer and consideration component arrays and aggregated\n         items will be transferred to the fulfiller or to each intended\n         recipient, respectively. Note that a failing item transfer or an\n         issue with order formatting will cause the entire batch to fail.\n @param advancedOrders            The orders to fulfill along with the\n                                  fraction of those orders to attempt to\n                                  fill. Note that both the offerer and the\n                                  fulfiller must first approve this\n                                  contract (or their proxy if indicated by\n                                  the order) to transfer any relevant\n                                  tokens on their behalf and that\n                                  contracts must implement\n                                  `onERC1155Received` in order to receive\n                                  ERC1155 tokens as consideration. Also\n                                  note that all offer and consideration\n                                  components must have no remainder after\n                                  multiplication of the respective amount\n                                  with the supplied fraction for an\n                                  order's partial fill amount to be\n                                  considered valid.\n @param criteriaResolvers         An array where each element contains a\n                                  reference to a specific offer or\n                                  consideration, a token identifier, and a\n                                  proof that the supplied token identifier\n                                  is contained in the merkle root held by\n                                  the item in question's criteria element.\n                                  Note that an empty criteria indicates\n                                  that any (transferrable) token\n                                  identifier on the token in question is\n                                  valid and that no associated proof needs\n                                  to be supplied.\n @param offerFulfillments         An array of FulfillmentComponent arrays\n                                  indicating which offer items to attempt\n                                  to aggregate when preparing executions.\n @param considerationFulfillments An array of FulfillmentComponent arrays\n                                  indicating which consideration items to\n                                  attempt to aggregate when preparing\n                                  executions.\n @param fulfillerConduitKey       A bytes32 value indicating what conduit,\n                                  if any, to source the fulfiller's token\n                                  approvals from. The zero hash signifies\n                                  that no conduit should be used (and\n                                  direct approvals set on Consideration).\n @param maximumFulfilled          The maximum number of orders to fulfill.\n @return availableOrders    An array of booleans indicating if each order\n                            with an index corresponding to the index of\n                            the returned boolean was fulfillable or not.\n @return standardExecutions An array of elements indicating the sequence\n                            of non-batch transfers performed as part of\n                            matching the given orders.\n @return batchExecutions    An array of elements indicating the sequence\n                            of batch transfers performed as part of\n                            matching the given orders."
            },
            "functionSelector": "fb4c2af9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1713,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1712,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3970,
                  "src": "25090:10:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "25090:10:13"
              },
              {
                "id": 1715,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1714,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3957,
                  "src": "25109:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "25109:12:13"
              }
            ],
            "name": "fulfillAvailableAdvancedOrders",
            "nameLocation": "24692:30:13",
            "overrides": {
              "id": 1711,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25073:8:13"
            },
            "parameters": {
              "id": 1710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1691,
                  "mutability": "mutable",
                  "name": "advancedOrders",
                  "nameLocation": "24755:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1748,
                  "src": "24732:37:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AdvancedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1689,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1688,
                        "name": "AdvancedOrder",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1084,
                        "src": "24732:13:13"
                      },
                      "referencedDeclaration": 1084,
                      "src": "24732:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AdvancedOrder_$1084_storage_ptr",
                        "typeString": "struct AdvancedOrder"
                      }
                    },
                    "id": 1690,
                    "nodeType": "ArrayTypeName",
                    "src": "24732:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_storage_$dyn_storage_ptr",
                      "typeString": "struct AdvancedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1695,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "24807:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1748,
                  "src": "24779:45:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1693,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1692,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1106,
                        "src": "24779:16:13"
                      },
                      "referencedDeclaration": 1106,
                      "src": "24779:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$1106_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 1694,
                    "nodeType": "ArrayTypeName",
                    "src": "24779:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1700,
                  "mutability": "mutable",
                  "name": "offerFulfillments",
                  "nameLocation": "24868:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1748,
                  "src": "24834:51:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1697,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1696,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1120,
                          "src": "24834:20:13"
                        },
                        "referencedDeclaration": 1120,
                        "src": "24834:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$1120_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 1698,
                      "nodeType": "ArrayTypeName",
                      "src": "24834:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$1120_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 1699,
                    "nodeType": "ArrayTypeName",
                    "src": "24834:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1705,
                  "mutability": "mutable",
                  "name": "considerationFulfillments",
                  "nameLocation": "24929:25:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1748,
                  "src": "24895:59:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct FulfillmentComponent[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1702,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1701,
                          "name": "FulfillmentComponent",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1120,
                          "src": "24895:20:13"
                        },
                        "referencedDeclaration": 1120,
                        "src": "24895:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FulfillmentComponent_$1120_storage_ptr",
                          "typeString": "struct FulfillmentComponent"
                        }
                      },
                      "id": 1703,
                      "nodeType": "ArrayTypeName",
                      "src": "24895:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FulfillmentComponent_$1120_storage_$dyn_storage_ptr",
                        "typeString": "struct FulfillmentComponent[]"
                      }
                    },
                    "id": 1704,
                    "nodeType": "ArrayTypeName",
                    "src": "24895:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_struct$_FulfillmentComponent_$1120_storage_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "struct FulfillmentComponent[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1707,
                  "mutability": "mutable",
                  "name": "fulfillerConduitKey",
                  "nameLocation": "24972:19:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1748,
                  "src": "24964:27:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1706,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24964:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1709,
                  "mutability": "mutable",
                  "name": "maximumFulfilled",
                  "nameLocation": "25009:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1748,
                  "src": "25001:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25001:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24722:309:13"
            },
            "returnParameters": {
              "id": 1727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1718,
                  "mutability": "mutable",
                  "name": "availableOrders",
                  "nameLocation": "25166:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1748,
                  "src": "25152:29:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1716,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "25152:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1717,
                    "nodeType": "ArrayTypeName",
                    "src": "25152:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1722,
                  "mutability": "mutable",
                  "name": "standardExecutions",
                  "nameLocation": "25214:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1748,
                  "src": "25195:37:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$1128_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1720,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1719,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1128,
                        "src": "25195:9:13"
                      },
                      "referencedDeclaration": 1128,
                      "src": "25195:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$1128_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 1721,
                    "nodeType": "ArrayTypeName",
                    "src": "25195:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$1128_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1726,
                  "mutability": "mutable",
                  "name": "batchExecutions",
                  "nameLocation": "25270:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1748,
                  "src": "25246:39:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_BatchExecution_$1143_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BatchExecution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1724,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1723,
                        "name": "BatchExecution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1143,
                        "src": "25246:14:13"
                      },
                      "referencedDeclaration": 1143,
                      "src": "25246:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchExecution_$1143_storage_ptr",
                        "typeString": "struct BatchExecution"
                      }
                    },
                    "id": 1725,
                    "nodeType": "ArrayTypeName",
                    "src": "25246:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_BatchExecution_$1143_storage_$dyn_storage_ptr",
                      "typeString": "struct BatchExecution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25138:157:13"
            },
            "scope": 2238,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1811,
            "nodeType": "FunctionDefinition",
            "src": "27618:1111:13",
            "baseFunctions": [
              662
            ],
            "body": {
              "id": 1810,
              "nodeType": "Block",
              "src": "27948:781:13",
              "statements": [
                {
                  "assignments": [
                    1777
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1777,
                      "mutability": "mutable",
                      "name": "advancedOrders",
                      "nameLocation": "28029:14:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1810,
                      "src": "28006:37:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AdvancedOrder[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1775,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1774,
                            "name": "AdvancedOrder",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1084,
                            "src": "28006:13:13"
                          },
                          "referencedDeclaration": 1084,
                          "src": "28006:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AdvancedOrder_$1084_storage_ptr",
                            "typeString": "struct AdvancedOrder"
                          }
                        },
                        "id": 1776,
                        "nodeType": "ArrayTypeName",
                        "src": "28006:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_storage_$dyn_storage_ptr",
                          "typeString": "struct AdvancedOrder[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1781,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1779,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1753,
                        "src": "28084:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$1072_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Order calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$1072_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Order calldata[] calldata"
                        }
                      ],
                      "id": 1778,
                      "name": "_convertOrdersToAdvanced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10144,
                      "src": "28046:24:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_Order_$1072_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct Order calldata[] calldata) pure returns (struct AdvancedOrder memory[] memory)"
                      }
                    },
                    "id": 1780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28046:54:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AdvancedOrder memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28006:94:13"
                },
                {
                  "assignments": [
                    1786
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1786,
                      "mutability": "mutable",
                      "name": "ordersToExecute",
                      "nameLocation": "28204:15:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1810,
                      "src": "28168:51:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OrderToExecute[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1784,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1783,
                            "name": "OrderToExecute",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 10590,
                            "src": "28168:14:13"
                          },
                          "referencedDeclaration": 10590,
                          "src": "28168:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderToExecute_$10590_storage_ptr",
                            "typeString": "struct OrderToExecute"
                          }
                        },
                        "id": 1785,
                        "nodeType": "ArrayTypeName",
                        "src": "28168:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_storage_$dyn_storage_ptr",
                          "typeString": "struct OrderToExecute[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1790,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1788,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1777,
                        "src": "28273:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      ],
                      "id": 1787,
                      "name": "_convertAdvancedtoOrdersToExecute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10350,
                      "src": "28222:33:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory) pure returns (struct OrderToExecute memory[] memory)"
                      }
                    },
                    "id": 1789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28222:79:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OrderToExecute memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28168:133:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1792,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1777,
                        "src": "28360:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "id": 1793,
                        "name": "ordersToExecute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1786,
                        "src": "28388:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "28440:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "28417:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_CriteriaResolver_$1106_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct CriteriaResolver memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 1795,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1794,
                                "name": "CriteriaResolver",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1106,
                                "src": "28421:16:13"
                              },
                              "referencedDeclaration": 1106,
                              "src": "28421:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CriteriaResolver_$1106_storage_ptr",
                                "typeString": "struct CriteriaResolver"
                              }
                            },
                            "id": 1796,
                            "nodeType": "ArrayTypeName",
                            "src": "28421:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_storage_$dyn_storage_ptr",
                              "typeString": "struct CriteriaResolver[]"
                            }
                          }
                        },
                        "id": 1799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28417:25:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28491:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "expression": {
                          "id": 1801,
                          "name": "advancedOrders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1777,
                          "src": "28557:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct AdvancedOrder memory[] memory"
                          }
                        },
                        "id": 1802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "28557:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CriteriaResolver memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1791,
                      "name": "_validateOrdersAndPrepareToFulfill",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5601,
                      "src": "28312:34:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$1106_memory_ptr_$dyn_memory_ptr_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct OrderToExecute memory[] memory,struct CriteriaResolver memory[] memory,bool,uint256)"
                      }
                    },
                    "id": 1803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28312:276:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1804,
                  "nodeType": "ExpressionStatement",
                  "src": "28312:276:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1806,
                        "name": "ordersToExecute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1786,
                        "src": "28692:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        }
                      },
                      {
                        "id": 1807,
                        "name": "fulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1757,
                        "src": "28709:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$1115_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$1115_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      ],
                      "id": 1805,
                      "name": "_fulfillAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5761,
                      "src": "28669:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$1115_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_Execution_$1128_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_BatchExecution_$1143_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct OrderToExecute memory[] memory,struct Fulfillment calldata[] calldata) returns (struct Execution memory[] memory,struct BatchExecution memory[] memory)"
                      }
                    },
                    "id": 1808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28669:53:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_Execution_$1128_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_BatchExecution_$1143_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct Execution memory[] memory,struct BatchExecution memory[] memory)"
                    }
                  },
                  "functionReturnParameters": 1772,
                  "id": 1809,
                  "nodeType": "Return",
                  "src": "28662:60:13"
                }
              ]
            },
            "documentation": {
              "id": 1749,
              "nodeType": "StructuredDocumentation",
              "src": "25877:1736:13",
              "text": " @notice Match an arbitrary number of orders, each with an arbitrary\n         number of items for offer and consideration along with a set of\n         fulfillments allocating offer components to consideration\n         components. Note that this function does not support\n         criteria-based or partial filling of orders (though filling the\n         remainder of a partially-filled order is supported).\n @param orders            The orders to match. Note that both the offerer\n                          and fulfiller on each order must first approve\n                          this contract (or their proxy if indicated by\n                          the order) to transfer any relevant tokens on\n                          their behalf and each consideration recipient\n                          must implement `onERC1155Received` in order to\n                          receive ERC1155 tokens.\n @param fulfillments      An array of elements allocating offer components\n                          to consideration components. Note that each\n                          consideration component must be fully met in\n                          order for the match operation to be valid.\n @return standardExecutions An array of elements indicating the sequence\n                            of non-batch transfers performed as part of\n                            matching the given orders.\n @return batchExecutions    An array of elements indicating the sequence\n                            of batch transfers performed as part of\n                            matching the given orders."
            },
            "functionSelector": "a8174404",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1761,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1760,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3970,
                  "src": "27781:10:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "27781:10:13"
              },
              {
                "id": 1763,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1762,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3957,
                  "src": "27800:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "27800:12:13"
              }
            ],
            "name": "matchOrders",
            "nameLocation": "27627:11:13",
            "overrides": {
              "id": 1759,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27764:8:13"
            },
            "parameters": {
              "id": 1758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1753,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "27665:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1811,
                  "src": "27648:23:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$1072_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1751,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1750,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1072,
                        "src": "27648:5:13"
                      },
                      "referencedDeclaration": 1072,
                      "src": "27648:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$1072_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 1752,
                    "nodeType": "ArrayTypeName",
                    "src": "27648:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$1072_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1757,
                  "mutability": "mutable",
                  "name": "fulfillments",
                  "nameLocation": "27704:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1811,
                  "src": "27681:35:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fulfillment_$1115_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Fulfillment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1755,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1754,
                        "name": "Fulfillment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1115,
                        "src": "27681:11:13"
                      },
                      "referencedDeclaration": 1115,
                      "src": "27681:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fulfillment_$1115_storage_ptr",
                        "typeString": "struct Fulfillment"
                      }
                    },
                    "id": 1756,
                    "nodeType": "ArrayTypeName",
                    "src": "27681:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fulfillment_$1115_storage_$dyn_storage_ptr",
                      "typeString": "struct Fulfillment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27638:84:13"
            },
            "returnParameters": {
              "id": 1772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1767,
                  "mutability": "mutable",
                  "name": "standardExecutions",
                  "nameLocation": "27862:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1811,
                  "src": "27843:37:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$1128_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1765,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1764,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1128,
                        "src": "27843:9:13"
                      },
                      "referencedDeclaration": 1128,
                      "src": "27843:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$1128_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 1766,
                    "nodeType": "ArrayTypeName",
                    "src": "27843:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$1128_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1771,
                  "mutability": "mutable",
                  "name": "batchExecutions",
                  "nameLocation": "27918:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1811,
                  "src": "27894:39:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_BatchExecution_$1143_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BatchExecution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1769,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1768,
                        "name": "BatchExecution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1143,
                        "src": "27894:14:13"
                      },
                      "referencedDeclaration": 1143,
                      "src": "27894:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchExecution_$1143_storage_ptr",
                        "typeString": "struct BatchExecution"
                      }
                    },
                    "id": 1770,
                    "nodeType": "ArrayTypeName",
                    "src": "27894:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_BatchExecution_$1143_storage_$dyn_storage_ptr",
                      "typeString": "struct BatchExecution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27829:114:13"
            },
            "scope": 2238,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1864,
            "nodeType": "FunctionDefinition",
            "src": "31408:1072:13",
            "baseFunctions": [
              686
            ],
            "body": {
              "id": 1863,
              "nodeType": "Block",
              "src": "31815:665:13",
              "statements": [
                {
                  "assignments": [
                    1844
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1844,
                      "mutability": "mutable",
                      "name": "ordersToExecute",
                      "nameLocation": "31917:15:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1863,
                      "src": "31881:51:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OrderToExecute[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1842,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1841,
                            "name": "OrderToExecute",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 10590,
                            "src": "31881:14:13"
                          },
                          "referencedDeclaration": 10590,
                          "src": "31881:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderToExecute_$10590_storage_ptr",
                            "typeString": "struct OrderToExecute"
                          }
                        },
                        "id": 1843,
                        "nodeType": "ArrayTypeName",
                        "src": "31881:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_storage_$dyn_storage_ptr",
                          "typeString": "struct OrderToExecute[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1848,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1846,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1816,
                        "src": "31986:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      ],
                      "id": 1845,
                      "name": "_convertAdvancedtoOrdersToExecute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10350,
                      "src": "31935:33:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct AdvancedOrder memory[] memory) pure returns (struct OrderToExecute memory[] memory)"
                      }
                    },
                    "id": 1847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31935:79:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OrderToExecute memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31881:133:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1850,
                        "name": "advancedOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1816,
                        "src": "32154:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        }
                      },
                      {
                        "id": 1851,
                        "name": "ordersToExecute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1844,
                        "src": "32182:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        }
                      },
                      {
                        "id": 1852,
                        "name": "criteriaResolvers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1820,
                        "src": "32211:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32242:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "expression": {
                          "id": 1854,
                          "name": "advancedOrders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1816,
                          "src": "32308:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct AdvancedOrder memory[] memory"
                          }
                        },
                        "id": 1855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "32308:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AdvancedOrder memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct CriteriaResolver calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1849,
                      "name": "_validateOrdersAndPrepareToFulfill",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5601,
                      "src": "32106:34:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_CriteriaResolver_$1106_memory_ptr_$dyn_memory_ptr_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (struct AdvancedOrder memory[] memory,struct OrderToExecute memory[] memory,struct CriteriaResolver memory[] memory,bool,uint256)"
                      }
                    },
                    "id": 1856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32106:233:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1857,
                  "nodeType": "ExpressionStatement",
                  "src": "32106:233:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1859,
                        "name": "ordersToExecute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1844,
                        "src": "32443:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        }
                      },
                      {
                        "id": 1860,
                        "name": "fulfillments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1824,
                        "src": "32460:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$1115_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OrderToExecute memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Fulfillment_$1115_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Fulfillment calldata[] calldata"
                        }
                      ],
                      "id": 1858,
                      "name": "_fulfillAdvancedOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5761,
                      "src": "32420:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_OrderToExecute_$10590_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Fulfillment_$1115_calldata_ptr_$dyn_calldata_ptr_$returns$_t_array$_t_struct$_Execution_$1128_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_BatchExecution_$1143_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct OrderToExecute memory[] memory,struct Fulfillment calldata[] calldata) returns (struct Execution memory[] memory,struct BatchExecution memory[] memory)"
                      }
                    },
                    "id": 1861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32420:53:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_Execution_$1128_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_BatchExecution_$1143_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct Execution memory[] memory,struct BatchExecution memory[] memory)"
                    }
                  },
                  "functionReturnParameters": 1839,
                  "id": 1862,
                  "nodeType": "Return",
                  "src": "32413:60:13"
                }
              ]
            },
            "documentation": {
              "id": 1812,
              "nodeType": "StructuredDocumentation",
              "src": "28735:2668:13",
              "text": " @notice Match an arbitrary number of full or partial orders, each with an\n         arbitrary number of items for offer and consideration, supplying\n         criteria resolvers containing specific token identifiers and\n         associated proofs as well as fulfillments allocating offer\n         components to consideration components.\n @param advancedOrders    The advanced orders to match. Note that both the\n                          offerer and fulfiller on each order must first\n                          approve this contract (or their proxy if\n                          indicated by the order) to transfer any relevant\n                          tokens on their behalf and each consideration\n                          recipient must implement `onERC1155Received` in\n                          order toreceive ERC1155 tokens. Also note that\n                          the offer and consideration components for each\n                          order must have no remainder after multiplying\n                          the respective amount with the supplied fraction\n                          in order for the group of partial fills to be\n                          considered valid.\n @param criteriaResolvers An array where each element contains a reference\n                          to a specific order as well as that order's\n                          offer or consideration, a token identifier, and\n                          a proof that the supplied token identifier is\n                          contained in the order's merkle root. Note that\n                          an empty root indicates that any (transferrable)\n                          token identifier is valid and that no associated\n                          proof needs to be supplied.\n @param fulfillments      An array of elements allocating offer components\n                          to consideration components. Note that each\n                          consideration component must be fully met in\n                          order for the match operation to be valid.\n @return standardExecutions An array of elements indicating the sequence\n                            of non-batch transfers performed as part of\n                            matching the given orders.\n @return batchExecutions    An array of elements indicating the sequence\n                            of batch transfers performed as part of\n                            matching the given orders."
            },
            "functionSelector": "55944a42",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1828,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1827,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3970,
                  "src": "31648:10:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "31648:10:13"
              },
              {
                "id": 1830,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1829,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3957,
                  "src": "31667:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "31667:12:13"
              }
            ],
            "name": "matchAdvancedOrders",
            "nameLocation": "31417:19:13",
            "overrides": {
              "id": 1826,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "31631:8:13"
            },
            "parameters": {
              "id": 1825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1816,
                  "mutability": "mutable",
                  "name": "advancedOrders",
                  "nameLocation": "31469:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1864,
                  "src": "31446:37:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AdvancedOrder[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1814,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1813,
                        "name": "AdvancedOrder",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1084,
                        "src": "31446:13:13"
                      },
                      "referencedDeclaration": 1084,
                      "src": "31446:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AdvancedOrder_$1084_storage_ptr",
                        "typeString": "struct AdvancedOrder"
                      }
                    },
                    "id": 1815,
                    "nodeType": "ArrayTypeName",
                    "src": "31446:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AdvancedOrder_$1084_storage_$dyn_storage_ptr",
                      "typeString": "struct AdvancedOrder[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1820,
                  "mutability": "mutable",
                  "name": "criteriaResolvers",
                  "nameLocation": "31521:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1864,
                  "src": "31493:45:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct CriteriaResolver[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1818,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1817,
                        "name": "CriteriaResolver",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1106,
                        "src": "31493:16:13"
                      },
                      "referencedDeclaration": 1106,
                      "src": "31493:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CriteriaResolver_$1106_storage_ptr",
                        "typeString": "struct CriteriaResolver"
                      }
                    },
                    "id": 1819,
                    "nodeType": "ArrayTypeName",
                    "src": "31493:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CriteriaResolver_$1106_storage_$dyn_storage_ptr",
                      "typeString": "struct CriteriaResolver[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1824,
                  "mutability": "mutable",
                  "name": "fulfillments",
                  "nameLocation": "31571:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1864,
                  "src": "31548:35:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Fulfillment_$1115_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Fulfillment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1822,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1821,
                        "name": "Fulfillment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1115,
                        "src": "31548:11:13"
                      },
                      "referencedDeclaration": 1115,
                      "src": "31548:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fulfillment_$1115_storage_ptr",
                        "typeString": "struct Fulfillment"
                      }
                    },
                    "id": 1823,
                    "nodeType": "ArrayTypeName",
                    "src": "31548:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Fulfillment_$1115_storage_$dyn_storage_ptr",
                      "typeString": "struct Fulfillment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31436:153:13"
            },
            "returnParameters": {
              "id": 1839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1834,
                  "mutability": "mutable",
                  "name": "standardExecutions",
                  "nameLocation": "31729:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1864,
                  "src": "31710:37:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Execution_$1128_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Execution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1832,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1831,
                        "name": "Execution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1128,
                        "src": "31710:9:13"
                      },
                      "referencedDeclaration": 1128,
                      "src": "31710:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Execution_$1128_storage_ptr",
                        "typeString": "struct Execution"
                      }
                    },
                    "id": 1833,
                    "nodeType": "ArrayTypeName",
                    "src": "31710:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Execution_$1128_storage_$dyn_storage_ptr",
                      "typeString": "struct Execution[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1838,
                  "mutability": "mutable",
                  "name": "batchExecutions",
                  "nameLocation": "31785:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1864,
                  "src": "31761:39:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_BatchExecution_$1143_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct BatchExecution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1836,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1835,
                        "name": "BatchExecution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1143,
                        "src": "31761:14:13"
                      },
                      "referencedDeclaration": 1143,
                      "src": "31761:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BatchExecution_$1143_storage_ptr",
                        "typeString": "struct BatchExecution"
                      }
                    },
                    "id": 1837,
                    "nodeType": "ArrayTypeName",
                    "src": "31761:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_BatchExecution_$1143_storage_$dyn_storage_ptr",
                      "typeString": "struct BatchExecution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31696:114:13"
            },
            "scope": 2238,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1984,
            "nodeType": "FunctionDefinition",
            "src": "32798:1701:13",
            "baseFunctions": [
              696
            ],
            "body": {
              "id": 1983,
              "nodeType": "Block",
              "src": "32929:1570:13",
              "statements": [
                {
                  "assignments": [
                    1878
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1878,
                      "mutability": "mutable",
                      "name": "offerer",
                      "nameLocation": "32947:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1983,
                      "src": "32939:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1877,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "32939:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1879,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32939:15:13"
                },
                {
                  "assignments": [
                    1881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1881,
                      "mutability": "mutable",
                      "name": "zone",
                      "nameLocation": "32972:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1983,
                      "src": "32964:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1880,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "32964:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1882,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32964:12:13"
                },
                {
                  "assignments": [
                    1884
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1884,
                      "mutability": "mutable",
                      "name": "totalOrders",
                      "nameLocation": "33070:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 1983,
                      "src": "33062:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1883,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "33062:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1887,
                  "initialValue": {
                    "expression": {
                      "id": 1885,
                      "name": "orders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1869,
                      "src": "33084:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OrderComponents_$945_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct OrderComponents calldata[] calldata"
                      }
                    },
                    "id": 1886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "33084:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33062:35:13"
                },
                {
                  "body": {
                    "id": 1979,
                    "nodeType": "Block",
                    "src": "33186:1286:13",
                    "statements": [
                      {
                        "assignments": [
                          1900
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1900,
                            "mutability": "mutable",
                            "name": "order",
                            "nameLocation": "33260:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1979,
                            "src": "33235:30:13",
                            "stateVariable": false,
                            "storageLocation": "calldata",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderComponents_$945_calldata_ptr",
                              "typeString": "struct OrderComponents"
                            },
                            "typeName": {
                              "id": 1899,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1898,
                                "name": "OrderComponents",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 945,
                                "src": "33235:15:13"
                              },
                              "referencedDeclaration": 945,
                              "src": "33235:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderComponents_$945_storage_ptr",
                                "typeString": "struct OrderComponents"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1904,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1901,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1869,
                            "src": "33268:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_OrderComponents_$945_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct OrderComponents calldata[] calldata"
                            }
                          },
                          "id": 1903,
                          "indexExpression": {
                            "id": 1902,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1889,
                            "src": "33275:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "33268:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderComponents_$945_calldata_ptr",
                            "typeString": "struct OrderComponents calldata"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "33235:42:13"
                      },
                      {
                        "expression": {
                          "id": 1908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1905,
                            "name": "offerer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1878,
                            "src": "33292:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1906,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1900,
                              "src": "33302:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderComponents_$945_calldata_ptr",
                                "typeString": "struct OrderComponents calldata"
                              }
                            },
                            "id": 1907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "offerer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 919,
                            "src": "33302:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "33292:23:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1909,
                        "nodeType": "ExpressionStatement",
                        "src": "33292:23:13"
                      },
                      {
                        "expression": {
                          "id": 1913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1910,
                            "name": "zone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1881,
                            "src": "33329:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1911,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1900,
                              "src": "33336:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderComponents_$945_calldata_ptr",
                                "typeString": "struct OrderComponents calldata"
                              }
                            },
                            "id": 1912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "zone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 921,
                            "src": "33336:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "33329:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1914,
                        "nodeType": "ExpressionStatement",
                        "src": "33329:17:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1915,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "33434:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "33434:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 1917,
                              "name": "offerer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1878,
                              "src": "33448:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "33434:21:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1919,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "33459:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "33459:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 1921,
                              "name": "zone",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1881,
                              "src": "33473:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "33459:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "33434:43:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1928,
                        "nodeType": "IfStatement",
                        "src": "33430:107:13",
                        "trueBody": {
                          "id": 1927,
                          "nodeType": "Block",
                          "src": "33479:58:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1924,
                                  "name": "InvalidCanceller",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 496,
                                  "src": "33504:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1925,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "33504:18:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1926,
                              "nodeType": "RevertStatement",
                              "src": "33497:25:13"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1930
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1930,
                            "mutability": "mutable",
                            "name": "orderHash",
                            "nameLocation": "33634:9:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1979,
                            "src": "33626:17:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1929,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "33626:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1958,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1933,
                                  "name": "offerer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1878,
                                  "src": "33714:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1934,
                                  "name": "zone",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1881,
                                  "src": "33743:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1935,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1900,
                                    "src": "33769:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OrderComponents_$945_calldata_ptr",
                                      "typeString": "struct OrderComponents calldata"
                                    }
                                  },
                                  "id": 1936,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "offer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 925,
                                  "src": "33769:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_OfferItem_$957_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct OfferItem calldata[] calldata"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1937,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1900,
                                    "src": "33802:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OrderComponents_$945_calldata_ptr",
                                      "typeString": "struct OrderComponents calldata"
                                    }
                                  },
                                  "id": 1938,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "consideration",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 929,
                                  "src": "33802:19:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$971_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct ConsiderationItem calldata[] calldata"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1939,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1900,
                                    "src": "33843:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OrderComponents_$945_calldata_ptr",
                                      "typeString": "struct OrderComponents calldata"
                                    }
                                  },
                                  "id": 1940,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "orderType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 932,
                                  "src": "33843:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_OrderType_$868",
                                    "typeString": "enum OrderType"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1941,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1900,
                                    "src": "33880:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OrderComponents_$945_calldata_ptr",
                                      "typeString": "struct OrderComponents calldata"
                                    }
                                  },
                                  "id": 1942,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "startTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 934,
                                  "src": "33880:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1943,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1900,
                                    "src": "33917:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OrderComponents_$945_calldata_ptr",
                                      "typeString": "struct OrderComponents calldata"
                                    }
                                  },
                                  "id": 1944,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "endTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 936,
                                  "src": "33917:13:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1945,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1900,
                                    "src": "33952:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OrderComponents_$945_calldata_ptr",
                                      "typeString": "struct OrderComponents calldata"
                                    }
                                  },
                                  "id": 1946,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "zoneHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 938,
                                  "src": "33952:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1947,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1900,
                                    "src": "33988:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OrderComponents_$945_calldata_ptr",
                                      "typeString": "struct OrderComponents calldata"
                                    }
                                  },
                                  "id": 1948,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "salt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 940,
                                  "src": "33988:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1949,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1900,
                                    "src": "34020:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OrderComponents_$945_calldata_ptr",
                                      "typeString": "struct OrderComponents calldata"
                                    }
                                  },
                                  "id": 1950,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "conduitKey",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 942,
                                  "src": "34020:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 1951,
                                      "name": "order",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1900,
                                      "src": "34058:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_OrderComponents_$945_calldata_ptr",
                                        "typeString": "struct OrderComponents calldata"
                                      }
                                    },
                                    "id": 1952,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "consideration",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 929,
                                    "src": "34058:19:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$971_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct ConsiderationItem calldata[] calldata"
                                    }
                                  },
                                  "id": 1953,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "34058:26:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_array$_t_struct$_OfferItem_$957_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct OfferItem calldata[] calldata"
                                  },
                                  {
                                    "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$971_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct ConsiderationItem calldata[] calldata"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_OrderType_$868",
                                    "typeString": "enum OrderType"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1932,
                                "name": "OrderParameters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1066,
                                "src": "33677:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_OrderParameters_$1066_storage_ptr_$",
                                  "typeString": "type(struct OrderParameters storage pointer)"
                                }
                              },
                              "id": 1954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "33677:425:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderParameters_$1066_memory_ptr",
                                "typeString": "struct OrderParameters memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 1955,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1900,
                                "src": "34120:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$945_calldata_ptr",
                                  "typeString": "struct OrderComponents calldata"
                                }
                              },
                              "id": 1956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 944,
                              "src": "34120:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_OrderParameters_$1066_memory_ptr",
                                "typeString": "struct OrderParameters memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1931,
                            "name": "_getOrderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7320,
                            "src": "33646:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_OrderParameters_$1066_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (struct OrderParameters memory,uint256) view returns (bytes32)"
                            }
                          },
                          "id": 1957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33646:499:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "33626:519:13"
                      },
                      {
                        "expression": {
                          "id": 1964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1959,
                                "name": "_orderStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3328,
                                "src": "34227:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$1093_storage_$",
                                  "typeString": "mapping(bytes32 => struct OrderStatus storage ref)"
                                }
                              },
                              "id": 1961,
                              "indexExpression": {
                                "id": 1960,
                                "name": "orderHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1930,
                                "src": "34240:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "34227:23:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderStatus_$1093_storage",
                                "typeString": "struct OrderStatus storage ref"
                              }
                            },
                            "id": 1962,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "isValidated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1086,
                            "src": "34227:35:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "34265:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "34227:43:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1965,
                        "nodeType": "ExpressionStatement",
                        "src": "34227:43:13"
                      },
                      {
                        "expression": {
                          "id": 1971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1966,
                                "name": "_orderStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3328,
                                "src": "34284:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$1093_storage_$",
                                  "typeString": "mapping(bytes32 => struct OrderStatus storage ref)"
                                }
                              },
                              "id": 1968,
                              "indexExpression": {
                                "id": 1967,
                                "name": "orderHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1930,
                                "src": "34297:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "34284:23:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderStatus_$1093_storage",
                                "typeString": "struct OrderStatus storage ref"
                              }
                            },
                            "id": 1969,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "isCancelled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1088,
                            "src": "34284:35:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "34322:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "34284:42:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1972,
                        "nodeType": "ExpressionStatement",
                        "src": "34284:42:13"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1974,
                              "name": "orderHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1930,
                              "src": "34436:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1975,
                              "name": "offerer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1878,
                              "src": "34447:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1976,
                              "name": "zone",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1881,
                              "src": "34456:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1973,
                            "name": "OrderCancelled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 367,
                            "src": "34421:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address,address)"
                            }
                          },
                          "id": 1977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34421:40:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1978,
                        "nodeType": "EmitStatement",
                        "src": "34416:45:13"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1892,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1889,
                      "src": "33164:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1893,
                      "name": "totalOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1884,
                      "src": "33168:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "33164:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1980,
                  "initializationExpression": {
                    "assignments": [
                      1889
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1889,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "33157:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1980,
                        "src": "33149:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1888,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "33149:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1891,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "33161:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "33149:13:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "33181:3:13",
                      "subExpression": {
                        "id": 1895,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1889,
                        "src": "33183:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1897,
                    "nodeType": "ExpressionStatement",
                    "src": "33181:3:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "33144:1328:13"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "34488:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1876,
                  "id": 1982,
                  "nodeType": "Return",
                  "src": "34481:11:13"
                }
              ]
            },
            "documentation": {
              "id": 1865,
              "nodeType": "StructuredDocumentation",
              "src": "32486:307:13",
              "text": " @notice Cancel an arbitrary number of orders. Note that only the offerer\n or the zone of a given order may cancel it.\n @param orders The orders to cancel.\n @return A boolean indicating whether the supplied orders were\n         successfully cancelled."
            },
            "functionSelector": "fd9f1e10",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1873,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1872,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3970,
                  "src": "32891:10:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "32891:10:13"
              }
            ],
            "name": "cancel",
            "nameLocation": "32807:6:13",
            "overrides": {
              "id": 1871,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "32874:8:13"
            },
            "parameters": {
              "id": 1870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1869,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "32841:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1984,
                  "src": "32814:33:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_OrderComponents_$945_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct OrderComponents[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1867,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1866,
                        "name": "OrderComponents",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 945,
                        "src": "32814:15:13"
                      },
                      "referencedDeclaration": 945,
                      "src": "32814:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderComponents_$945_storage_ptr",
                        "typeString": "struct OrderComponents"
                      }
                    },
                    "id": 1868,
                    "nodeType": "ArrayTypeName",
                    "src": "32814:17:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OrderComponents_$945_storage_$dyn_storage_ptr",
                      "typeString": "struct OrderComponents[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32813:35:13"
            },
            "returnParameters": {
              "id": 1876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1875,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1984,
                  "src": "32919:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1874,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "32919:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32918:6:13"
            },
            "scope": 2238,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2087,
            "nodeType": "FunctionDefinition",
            "src": "34990:1961:13",
            "baseFunctions": [
              706
            ],
            "body": {
              "id": 2086,
              "nodeType": "Block",
              "src": "35113:1838:13",
              "statements": [
                {
                  "assignments": [
                    1998
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1998,
                      "mutability": "mutable",
                      "name": "orderHash",
                      "nameLocation": "35181:9:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2086,
                      "src": "35173:17:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1997,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "35173:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1999,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "35173:17:13"
                },
                {
                  "assignments": [
                    2001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2001,
                      "mutability": "mutable",
                      "name": "offerer",
                      "nameLocation": "35208:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2086,
                      "src": "35200:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2000,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "35200:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2002,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "35200:15:13"
                },
                {
                  "assignments": [
                    2004
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2004,
                      "mutability": "mutable",
                      "name": "totalOrders",
                      "nameLocation": "35309:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2086,
                      "src": "35301:19:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2003,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "35301:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2007,
                  "initialValue": {
                    "expression": {
                      "id": 2005,
                      "name": "orders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1989,
                      "src": "35323:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Order_$1072_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct Order calldata[] calldata"
                      }
                    },
                    "id": 2006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "35323:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "35301:35:13"
                },
                {
                  "body": {
                    "id": 2082,
                    "nodeType": "Block",
                    "src": "35425:1498:13",
                    "statements": [
                      {
                        "assignments": [
                          2020
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2020,
                            "mutability": "mutable",
                            "name": "order",
                            "nameLocation": "35489:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2082,
                            "src": "35474:20:13",
                            "stateVariable": false,
                            "storageLocation": "calldata",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$1072_calldata_ptr",
                              "typeString": "struct Order"
                            },
                            "typeName": {
                              "id": 2019,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2018,
                                "name": "Order",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1072,
                                "src": "35474:5:13"
                              },
                              "referencedDeclaration": 1072,
                              "src": "35474:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Order_$1072_storage_ptr",
                                "typeString": "struct Order"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2024,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2021,
                            "name": "orders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1989,
                            "src": "35497:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Order_$1072_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct Order calldata[] calldata"
                            }
                          },
                          "id": 2023,
                          "indexExpression": {
                            "id": 2022,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2009,
                            "src": "35504:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "35497:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$1072_calldata_ptr",
                            "typeString": "struct Order calldata"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "35474:32:13"
                      },
                      {
                        "assignments": [
                          2027
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2027,
                            "mutability": "mutable",
                            "name": "orderParameters",
                            "nameLocation": "35592:15:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2082,
                            "src": "35567:40:13",
                            "stateVariable": false,
                            "storageLocation": "calldata",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderParameters_$1066_calldata_ptr",
                              "typeString": "struct OrderParameters"
                            },
                            "typeName": {
                              "id": 2026,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2025,
                                "name": "OrderParameters",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1066,
                                "src": "35567:15:13"
                              },
                              "referencedDeclaration": 1066,
                              "src": "35567:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderParameters_$1066_storage_ptr",
                                "typeString": "struct OrderParameters"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2030,
                        "initialValue": {
                          "expression": {
                            "id": 2028,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2020,
                            "src": "35610:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$1072_calldata_ptr",
                              "typeString": "struct Order calldata"
                            }
                          },
                          "id": 2029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "parameters",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1069,
                          "src": "35610:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderParameters_$1066_calldata_ptr",
                            "typeString": "struct OrderParameters calldata"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "35567:59:13"
                      },
                      {
                        "expression": {
                          "id": 2034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2031,
                            "name": "offerer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2001,
                            "src": "35695:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2032,
                              "name": "orderParameters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2027,
                              "src": "35705:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderParameters_$1066_calldata_ptr",
                                "typeString": "struct OrderParameters calldata"
                              }
                            },
                            "id": 2033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "offerer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1040,
                            "src": "35705:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "35695:33:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2035,
                        "nodeType": "ExpressionStatement",
                        "src": "35695:33:13"
                      },
                      {
                        "expression": {
                          "id": 2040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2036,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1998,
                            "src": "35819:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2038,
                                "name": "orderParameters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2027,
                                "src": "35896:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderParameters_$1066_calldata_ptr",
                                  "typeString": "struct OrderParameters calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_OrderParameters_$1066_calldata_ptr",
                                  "typeString": "struct OrderParameters calldata"
                                }
                              ],
                              "id": 2037,
                              "name": "_assertConsiderationLengthAndGetNoncedOrderHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7346,
                              "src": "35831:47:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_OrderParameters_$1066_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (struct OrderParameters memory) view returns (bytes32)"
                              }
                            },
                            "id": 2039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "35831:94:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "35819:106:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 2041,
                        "nodeType": "ExpressionStatement",
                        "src": "35819:106:13"
                      },
                      {
                        "assignments": [
                          2044
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2044,
                            "mutability": "mutable",
                            "name": "orderStatus",
                            "nameLocation": "36030:11:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2082,
                            "src": "36011:30:13",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OrderStatus_$1093_memory_ptr",
                              "typeString": "struct OrderStatus"
                            },
                            "typeName": {
                              "id": 2043,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2042,
                                "name": "OrderStatus",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1093,
                                "src": "36011:11:13"
                              },
                              "referencedDeclaration": 1093,
                              "src": "36011:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderStatus_$1093_storage_ptr",
                                "typeString": "struct OrderStatus"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2048,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2045,
                            "name": "_orderStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3328,
                            "src": "36044:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$1093_storage_$",
                              "typeString": "mapping(bytes32 => struct OrderStatus storage ref)"
                            }
                          },
                          "id": 2047,
                          "indexExpression": {
                            "id": 2046,
                            "name": "orderHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1998,
                            "src": "36057:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "36044:23:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderStatus_$1093_storage",
                            "typeString": "struct OrderStatus storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "36011:56:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2050,
                              "name": "orderHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1998,
                              "src": "36190:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2051,
                              "name": "orderStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2044,
                              "src": "36217:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderStatus_$1093_memory_ptr",
                                "typeString": "struct OrderStatus memory"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 2052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "36246:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 2053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "36322:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_struct$_OrderStatus_$1093_memory_ptr",
                                "typeString": "struct OrderStatus memory"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2049,
                            "name": "_verifyOrderStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9941,
                            "src": "36154:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_struct$_OrderStatus_$1093_memory_ptr_$_t_bool_$_t_bool_$returns$_t_bool_$",
                              "typeString": "function (bytes32,struct OrderStatus memory,bool,bool) pure returns (bool)"
                            }
                          },
                          "id": 2054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36154:234:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2055,
                        "nodeType": "ExpressionStatement",
                        "src": "36154:234:13"
                      },
                      {
                        "condition": {
                          "id": 2058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "36469:24:13",
                          "subExpression": {
                            "expression": {
                              "id": 2056,
                              "name": "orderStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2044,
                              "src": "36470:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderStatus_$1093_memory_ptr",
                                "typeString": "struct OrderStatus memory"
                              }
                            },
                            "id": 2057,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isValidated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1086,
                            "src": "36470:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2081,
                        "nodeType": "IfStatement",
                        "src": "36465:448:13",
                        "trueBody": {
                          "id": 2080,
                          "nodeType": "Block",
                          "src": "36495:418:13",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2060,
                                    "name": "offerer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2001,
                                    "src": "36580:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2061,
                                    "name": "orderHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1998,
                                    "src": "36589:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2062,
                                      "name": "order",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2020,
                                      "src": "36600:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$1072_calldata_ptr",
                                        "typeString": "struct Order calldata"
                                      }
                                    },
                                    "id": 2063,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "signature",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1071,
                                    "src": "36600:15:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 2059,
                                  "name": "_verifySignature",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7096,
                                  "src": "36563:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (address,bytes32,bytes memory) view"
                                  }
                                },
                                "id": 2064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "36563:53:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2065,
                              "nodeType": "ExpressionStatement",
                              "src": "36563:53:13"
                            },
                            {
                              "expression": {
                                "id": 2071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2066,
                                      "name": "_orderStatus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3328,
                                      "src": "36702:12:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$1093_storage_$",
                                        "typeString": "mapping(bytes32 => struct OrderStatus storage ref)"
                                      }
                                    },
                                    "id": 2068,
                                    "indexExpression": {
                                      "id": 2067,
                                      "name": "orderHash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1998,
                                      "src": "36715:9:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "36702:23:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OrderStatus_$1093_storage",
                                      "typeString": "struct OrderStatus storage ref"
                                    }
                                  },
                                  "id": 2069,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "isValidated",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1086,
                                  "src": "36702:35:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 2070,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "36740:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "36702:42:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2072,
                              "nodeType": "ExpressionStatement",
                              "src": "36702:42:13"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2074,
                                    "name": "orderHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1998,
                                    "src": "36857:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 2075,
                                    "name": "offerer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2001,
                                    "src": "36868:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2076,
                                      "name": "orderParameters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2027,
                                      "src": "36877:15:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_OrderParameters_$1066_calldata_ptr",
                                        "typeString": "struct OrderParameters calldata"
                                      }
                                    },
                                    "id": 2077,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "zone",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1042,
                                    "src": "36877:20:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2073,
                                  "name": "OrderValidated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 376,
                                  "src": "36842:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 2078,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "36842:56:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2079,
                              "nodeType": "EmitStatement",
                              "src": "36837:61:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2012,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2009,
                      "src": "35403:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2013,
                      "name": "totalOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2004,
                      "src": "35407:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "35403:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2083,
                  "initializationExpression": {
                    "assignments": [
                      2009
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2009,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "35396:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2083,
                        "src": "35388:9:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2008,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "35388:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2011,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "35400:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "35388:13:13"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "35420:3:13",
                      "subExpression": {
                        "id": 2015,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2009,
                        "src": "35422:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2017,
                    "nodeType": "ExpressionStatement",
                    "src": "35420:3:13"
                  },
                  "nodeType": "ForStatement",
                  "src": "35383:1540:13"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "36940:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1996,
                  "id": 2085,
                  "nodeType": "Return",
                  "src": "36933:11:13"
                }
              ]
            },
            "documentation": {
              "id": 1985,
              "nodeType": "StructuredDocumentation",
              "src": "34505:480:13",
              "text": " @notice Validate an arbitrary number of orders, thereby registering them\n         as valid and allowing the fulfiller to skip verification. Note\n         that anyone can validate a signed order but only the offerer can\n         validate an order without supplying a signature.\n @param orders The orders to validate.\n @return A boolean indicating whether the supplied orders were\n         successfully validated."
            },
            "functionSelector": "88147732",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1993,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1992,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3970,
                  "src": "35075:10:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "35075:10:13"
              }
            ],
            "name": "validate",
            "nameLocation": "34999:8:13",
            "overrides": {
              "id": 1991,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "35058:8:13"
            },
            "parameters": {
              "id": 1990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1989,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "35025:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2087,
                  "src": "35008:23:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$1072_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1987,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1986,
                        "name": "Order",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1072,
                        "src": "35008:5:13"
                      },
                      "referencedDeclaration": 1072,
                      "src": "35008:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$1072_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 1988,
                    "nodeType": "ArrayTypeName",
                    "src": "35008:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$1072_storage_$dyn_storage_ptr",
                      "typeString": "struct Order[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35007:25:13"
            },
            "returnParameters": {
              "id": 1996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1995,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2087,
                  "src": "35103:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1994,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "35103:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35102:6:13"
            },
            "scope": 2238,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2111,
            "nodeType": "FunctionDefinition",
            "src": "37206:333:13",
            "baseFunctions": [
              712
            ],
            "body": {
              "id": 2110,
              "nodeType": "Block",
              "src": "37324:215:13",
              "statements": [
                {
                  "expression": {
                    "id": 2102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2096,
                      "name": "newNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2094,
                      "src": "37395:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "37406:21:13",
                      "subExpression": {
                        "baseExpression": {
                          "id": 2097,
                          "name": "_nonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3332,
                          "src": "37408:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2100,
                        "indexExpression": {
                          "expression": {
                            "id": 2098,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "37416:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "37416:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "37408:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "37395:32:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2103,
                  "nodeType": "ExpressionStatement",
                  "src": "37395:32:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2105,
                        "name": "newNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2094,
                        "src": "37511:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 2106,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "37521:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "37521:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2104,
                      "name": "NonceIncremented",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "37494:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37494:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2109,
                  "nodeType": "EmitStatement",
                  "src": "37489:43:13"
                }
              ]
            },
            "documentation": {
              "id": 2088,
              "nodeType": "StructuredDocumentation",
              "src": "36957:244:13",
              "text": " @notice Cancel all orders from a given offerer with a given zone in bulk\n         by incrementing a nonce. Note that only the offerer may increment\n         the nonce.\n @return newNonce The new nonce."
            },
            "functionSelector": "627cdcb9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2092,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2091,
                  "name": "notEntered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3970,
                  "src": "37274:10:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "37274:10:13"
              }
            ],
            "name": "incrementNonce",
            "nameLocation": "37215:14:13",
            "overrides": {
              "id": 2090,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "37257:8:13"
            },
            "parameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "37229:2:13"
            },
            "returnParameters": {
              "id": 2095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2094,
                  "mutability": "mutable",
                  "name": "newNonce",
                  "nameLocation": "37310:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2111,
                  "src": "37302:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2093,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37302:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37301:18:13"
            },
            "scope": 2238,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2152,
            "nodeType": "FunctionDefinition",
            "src": "37713:712:13",
            "baseFunctions": [
              721
            ],
            "body": {
              "id": 2151,
              "nodeType": "Block",
              "src": "37842:583:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2123,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2115,
                              "src": "38027:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderComponents_$945_memory_ptr",
                                "typeString": "struct OrderComponents memory"
                              }
                            },
                            "id": 2124,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "offerer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 919,
                            "src": "38027:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 2125,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2115,
                              "src": "38058:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderComponents_$945_memory_ptr",
                                "typeString": "struct OrderComponents memory"
                              }
                            },
                            "id": 2126,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "zone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 921,
                            "src": "38058:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 2127,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2115,
                              "src": "38086:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderComponents_$945_memory_ptr",
                                "typeString": "struct OrderComponents memory"
                              }
                            },
                            "id": 2128,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "offer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 925,
                            "src": "38086:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_OfferItem_$957_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OfferItem memory[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 2129,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2115,
                              "src": "38115:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderComponents_$945_memory_ptr",
                                "typeString": "struct OrderComponents memory"
                              }
                            },
                            "id": 2130,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "consideration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 929,
                            "src": "38115:19:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$971_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConsiderationItem memory[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 2131,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2115,
                              "src": "38152:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderComponents_$945_memory_ptr",
                                "typeString": "struct OrderComponents memory"
                              }
                            },
                            "id": 2132,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "orderType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 932,
                            "src": "38152:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OrderType_$868",
                              "typeString": "enum OrderType"
                            }
                          },
                          {
                            "expression": {
                              "id": 2133,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2115,
                              "src": "38185:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderComponents_$945_memory_ptr",
                                "typeString": "struct OrderComponents memory"
                              }
                            },
                            "id": 2134,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 934,
                            "src": "38185:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 2135,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2115,
                              "src": "38218:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderComponents_$945_memory_ptr",
                                "typeString": "struct OrderComponents memory"
                              }
                            },
                            "id": 2136,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "endTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 936,
                            "src": "38218:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 2137,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2115,
                              "src": "38249:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderComponents_$945_memory_ptr",
                                "typeString": "struct OrderComponents memory"
                              }
                            },
                            "id": 2138,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "zoneHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 938,
                            "src": "38249:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 2139,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2115,
                              "src": "38281:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderComponents_$945_memory_ptr",
                                "typeString": "struct OrderComponents memory"
                              }
                            },
                            "id": 2140,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "salt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 940,
                            "src": "38281:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 2141,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2115,
                              "src": "38309:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderComponents_$945_memory_ptr",
                                "typeString": "struct OrderComponents memory"
                              }
                            },
                            "id": 2142,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "conduitKey",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 942,
                            "src": "38309:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "expression": {
                                "id": 2143,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2115,
                                "src": "38343:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderComponents_$945_memory_ptr",
                                  "typeString": "struct OrderComponents memory"
                                }
                              },
                              "id": 2144,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "consideration",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 929,
                              "src": "38343:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$971_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ConsiderationItem memory[] memory"
                              }
                            },
                            "id": 2145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "38343:26:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_OfferItem_$957_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct OfferItem memory[] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_struct$_ConsiderationItem_$971_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct ConsiderationItem memory[] memory"
                            },
                            {
                              "typeIdentifier": "t_enum$_OrderType_$868",
                              "typeString": "enum OrderType"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2122,
                          "name": "OrderParameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1066,
                          "src": "37994:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_OrderParameters_$1066_storage_ptr_$",
                            "typeString": "type(struct OrderParameters storage pointer)"
                          }
                        },
                        "id": 2146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "37994:389:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderParameters_$1066_memory_ptr",
                          "typeString": "struct OrderParameters memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 2147,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2115,
                          "src": "38397:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderComponents_$945_memory_ptr",
                            "typeString": "struct OrderComponents memory"
                          }
                        },
                        "id": 2148,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 944,
                        "src": "38397:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OrderParameters_$1066_memory_ptr",
                          "typeString": "struct OrderParameters memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2121,
                      "name": "_getOrderHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7320,
                      "src": "37967:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_OrderParameters_$1066_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (struct OrderParameters memory,uint256) view returns (bytes32)"
                      }
                    },
                    "id": 2149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37967:451:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2120,
                  "id": 2150,
                  "nodeType": "Return",
                  "src": "37960:458:13"
                }
              ]
            },
            "documentation": {
              "id": 2112,
              "nodeType": "StructuredDocumentation",
              "src": "37545:163:13",
              "text": " @notice Retrieve the order hash for a given order.\n @param order The components of the order.\n @return The order hash."
            },
            "functionSelector": "79df72bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderHash",
            "nameLocation": "37722:12:13",
            "overrides": {
              "id": 2117,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "37803:8:13"
            },
            "parameters": {
              "id": 2116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2115,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "37758:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2152,
                  "src": "37735:28:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderComponents_$945_memory_ptr",
                    "typeString": "struct OrderComponents"
                  },
                  "typeName": {
                    "id": 2114,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2113,
                      "name": "OrderComponents",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 945,
                      "src": "37735:15:13"
                    },
                    "referencedDeclaration": 945,
                    "src": "37735:15:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderComponents_$945_storage_ptr",
                      "typeString": "struct OrderComponents"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37734:30:13"
            },
            "returnParameters": {
              "id": 2120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2119,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2152,
                  "src": "37829:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2118,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "37829:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37828:9:13"
            },
            "scope": 2238,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2185,
            "nodeType": "FunctionDefinition",
            "src": "39312:601:13",
            "baseFunctions": [
              735
            ],
            "body": {
              "id": 2184,
              "nodeType": "Block",
              "src": "39557:356:13",
              "statements": [
                {
                  "assignments": [
                    2169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2169,
                      "mutability": "mutable",
                      "name": "orderStatus",
                      "nameLocation": "39645:11:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2184,
                      "src": "39626:30:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OrderStatus_$1093_memory_ptr",
                        "typeString": "struct OrderStatus"
                      },
                      "typeName": {
                        "id": 2168,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2167,
                          "name": "OrderStatus",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1093,
                          "src": "39626:11:13"
                        },
                        "referencedDeclaration": 1093,
                        "src": "39626:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderStatus_$1093_storage_ptr",
                          "typeString": "struct OrderStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2173,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2170,
                      "name": "_orderStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3328,
                      "src": "39659:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_OrderStatus_$1093_storage_$",
                        "typeString": "mapping(bytes32 => struct OrderStatus storage ref)"
                      }
                    },
                    "id": 2172,
                    "indexExpression": {
                      "id": 2171,
                      "name": "orderHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2155,
                      "src": "39672:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "39659:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderStatus_$1093_storage",
                      "typeString": "struct OrderStatus storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "39626:56:13"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 2174,
                          "name": "orderStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2169,
                          "src": "39764:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderStatus_$1093_memory_ptr",
                            "typeString": "struct OrderStatus memory"
                          }
                        },
                        "id": 2175,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isValidated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1086,
                        "src": "39764:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 2176,
                          "name": "orderStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2169,
                          "src": "39801:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderStatus_$1093_memory_ptr",
                            "typeString": "struct OrderStatus memory"
                          }
                        },
                        "id": 2177,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isCancelled",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1088,
                        "src": "39801:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 2178,
                          "name": "orderStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2169,
                          "src": "39838:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderStatus_$1093_memory_ptr",
                            "typeString": "struct OrderStatus memory"
                          }
                        },
                        "id": 2179,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numerator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1090,
                        "src": "39838:21:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint120",
                          "typeString": "uint120"
                        }
                      },
                      {
                        "expression": {
                          "id": 2180,
                          "name": "orderStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2169,
                          "src": "39873:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderStatus_$1093_memory_ptr",
                            "typeString": "struct OrderStatus memory"
                          }
                        },
                        "id": 2181,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "denominator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1092,
                        "src": "39873:23:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint120",
                          "typeString": "uint120"
                        }
                      }
                    ],
                    "id": 2182,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "39750:156:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$_t_uint120_$_t_uint120_$",
                      "typeString": "tuple(bool,bool,uint120,uint120)"
                    }
                  },
                  "functionReturnParameters": 2166,
                  "id": 2183,
                  "nodeType": "Return",
                  "src": "39743:163:13"
                }
              ]
            },
            "documentation": {
              "id": 2153,
              "nodeType": "StructuredDocumentation",
              "src": "38431:876:13",
              "text": " @notice Retrieve the status of a given order by hash, including whether\n         the order has been cancelled or validated and the fraction of the\n         order that has been filled.\n @param orderHash The order hash in question.\n @return isValidated A boolean indicating whether the order in question\n                     has been validated (i.e. previously approved or\n                     partially filled).\n @return isCancelled A boolean indicating whether the order in question\n                     has been cancelled.\n @return totalFilled The total portion of the order that has been filled\n                     (i.e. the \"numerator\").\n @return totalSize   The total size of the order that is either filled or\n                     unfilled (i.e. the \"denominator\")."
            },
            "functionSelector": "46423aa7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderStatus",
            "nameLocation": "39321:14:13",
            "overrides": {
              "id": 2157,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "39393:8:13"
            },
            "parameters": {
              "id": 2156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2155,
                  "mutability": "mutable",
                  "name": "orderHash",
                  "nameLocation": "39344:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "39336:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2154,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "39336:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39335:19:13"
            },
            "returnParameters": {
              "id": 2166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2159,
                  "mutability": "mutable",
                  "name": "isValidated",
                  "nameLocation": "39437:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "39432:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2158,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "39432:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2161,
                  "mutability": "mutable",
                  "name": "isCancelled",
                  "nameLocation": "39467:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "39462:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2160,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "39462:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2163,
                  "mutability": "mutable",
                  "name": "totalFilled",
                  "nameLocation": "39500:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "39492:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39492:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2165,
                  "mutability": "mutable",
                  "name": "totalSize",
                  "nameLocation": "39533:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "39525:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39525:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "39418:134:13"
            },
            "scope": 2238,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2199,
            "nodeType": "FunctionDefinition",
            "src": "40093:206:13",
            "baseFunctions": [
              743
            ],
            "body": {
              "id": 2198,
              "nodeType": "Block",
              "src": "40205:94:13",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2194,
                      "name": "_nonces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3332,
                      "src": "40276:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2196,
                    "indexExpression": {
                      "id": 2195,
                      "name": "offerer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2188,
                      "src": "40284:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "40276:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2193,
                  "id": 2197,
                  "nodeType": "Return",
                  "src": "40269:23:13"
                }
              ]
            },
            "documentation": {
              "id": 2186,
              "nodeType": "StructuredDocumentation",
              "src": "39919:169:13",
              "text": " @notice Retrieve the current nonce for a given offerer.\n @param offerer The offerer in question.\n @return The current nonce."
            },
            "functionSelector": "2d0335ab",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNonce",
            "nameLocation": "40102:8:13",
            "overrides": {
              "id": 2190,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "40166:8:13"
            },
            "parameters": {
              "id": 2189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2188,
                  "mutability": "mutable",
                  "name": "offerer",
                  "nameLocation": "40119:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2199,
                  "src": "40111:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "40111:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40110:17:13"
            },
            "returnParameters": {
              "id": 2193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2192,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2199,
                  "src": "40192:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "40192:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40191:9:13"
            },
            "scope": 2238,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2227,
            "nodeType": "FunctionDefinition",
            "src": "40604:351:13",
            "baseFunctions": [
              753
            ],
            "body": {
              "id": 2226,
              "nodeType": "Block",
              "src": "40816:139:13",
              "statements": [
                {
                  "expression": {
                    "id": 2212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2210,
                      "name": "version",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2204,
                      "src": "40826:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2211,
                      "name": "_VERSION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3294,
                      "src": "40836:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "40826:18:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 2213,
                  "nodeType": "ExpressionStatement",
                  "src": "40826:18:13"
                },
                {
                  "expression": {
                    "id": 2217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2214,
                      "name": "domainSeparator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2206,
                      "src": "40854:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2215,
                        "name": "_domainSeparator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7142,
                        "src": "40872:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                          "typeString": "function () view returns (bytes32)"
                        }
                      },
                      "id": 2216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "40872:18:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "40854:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2218,
                  "nodeType": "ExpressionStatement",
                  "src": "40854:36:13"
                },
                {
                  "expression": {
                    "id": 2224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2219,
                      "name": "conduitController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2208,
                      "src": "40900:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2222,
                          "name": "_CONDUIT_CONTROLLER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3319,
                          "src": "40928:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConduitControllerInterface_$283",
                            "typeString": "contract ConduitControllerInterface"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ConduitControllerInterface_$283",
                            "typeString": "contract ConduitControllerInterface"
                          }
                        ],
                        "id": 2221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "40920:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2220,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "40920:7:13",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "40920:28:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "40900:48:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2225,
                  "nodeType": "ExpressionStatement",
                  "src": "40900:48:13"
                }
              ]
            },
            "documentation": {
              "id": 2200,
              "nodeType": "StructuredDocumentation",
              "src": "40305:294:13",
              "text": " @notice Retrieve configuration information for this contract.\n @return version           The contract version.\n @return domainSeparator   The domain separator for this contract.\n @return conduitController The conduit Controller set for this contract."
            },
            "functionSelector": "f47b7740",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "information",
            "nameLocation": "40613:11:13",
            "overrides": {
              "id": 2202,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "40665:8:13"
            },
            "parameters": {
              "id": 2201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "40624:2:13"
            },
            "returnParameters": {
              "id": 2209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2204,
                  "mutability": "mutable",
                  "name": "version",
                  "nameLocation": "40718:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2227,
                  "src": "40704:21:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2203,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "40704:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2206,
                  "mutability": "mutable",
                  "name": "domainSeparator",
                  "nameLocation": "40747:15:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2227,
                  "src": "40739:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2205,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "40739:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2208,
                  "mutability": "mutable",
                  "name": "conduitController",
                  "nameLocation": "40784:17:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2227,
                  "src": "40776:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "40776:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40690:121:13"
            },
            "scope": 2238,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2237,
            "nodeType": "FunctionDefinition",
            "src": "41077:136:13",
            "baseFunctions": [
              759
            ],
            "body": {
              "id": 2236,
              "nodeType": "Block",
              "src": "41140:73:13",
              "statements": [
                {
                  "expression": {
                    "id": 2234,
                    "name": "_NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3291,
                    "src": "41201:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 2233,
                  "id": 2235,
                  "nodeType": "Return",
                  "src": "41194:12:13"
                }
              ]
            },
            "documentation": {
              "id": 2228,
              "nodeType": "StructuredDocumentation",
              "src": "40961:111:13",
              "text": " @notice Retrieve the name of this contract.\n @return The name of this contract."
            },
            "functionSelector": "06fdde03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "41086:4:13",
            "overrides": {
              "id": 2230,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "41107:8:13"
            },
            "parameters": {
              "id": 2229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "41090:2:13"
            },
            "returnParameters": {
              "id": 2233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2232,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2237,
                  "src": "41125:13:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2231,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "41125:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "41124:15:13"
            },
            "scope": 2238,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1177,
              "name": "ConsiderationInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 760,
              "src": "1542:22:13"
            },
            "id": 1178,
            "nodeType": "InheritanceSpecifier",
            "src": "1542:22:13"
          },
          {
            "baseName": {
              "id": 1179,
              "name": "ReferenceConsiderationInternal",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6916,
              "src": "1570:30:13"
            },
            "id": 1180,
            "nodeType": "InheritanceSpecifier",
            "src": "1570:30:13"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1176,
          "nodeType": "StructuredDocumentation",
          "src": "819:683:13",
          "text": " @title ReferenceConsideration\n @author 0age\n @custom:coauthor d1ll0n\n @custom:coauthor transmissions11\n @custom:version rc-1\n @notice Consideration is a generalized ETH/ERC20/ERC721/ERC1155 marketplace.\n         It minimizes external calls to the greatest extent possible and\n         provides lightweight methods for common routes as well as more\n         flexible methods for composing advanced orders or groups of orders.\n         Each order contains an arbitrary number of items that may be spent\n         (the \"offer\") along with an arbitrary number of items that must be\n         received back by the indicated recipients (the \"consideration\")."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2238,
          6916,
          10792,
          823,
          8140,
          10529,
          3536,
          523,
          760
        ],
        "name": "ReferenceConsideration",
        "nameLocation": "1512:22:13",
        "scope": 2239,
        "usedErrors": [
          388,
          391,
          398,
          403,
          406,
          412,
          415,
          420,
          423,
          426,
          429,
          432,
          435,
          440,
          449,
          452,
          459,
          462,
          467,
          472,
          475,
          478,
          481,
          484,
          487,
          490,
          493,
          496,
          499,
          502,
          505,
          510,
          513,
          516,
          519,
          522,
          778,
          791,
          806,
          817,
          822
        ]
      }
    ],
    "license": "MIT"
  }
}